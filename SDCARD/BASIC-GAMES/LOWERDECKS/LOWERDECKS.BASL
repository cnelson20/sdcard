REM LOWERDECKS - A X16 BASIC CAPABILITY DEMOREM BY VOIDSTAR - OCT. 2023REM VARIABLES USED:REM GX  X-COORDINATE OF "GUY" FACE (NOT INCLUDING FRAME)REM GY  Y-COORDINATE OF "GUY" FACE (NOT INCLUDING FRAME)REM GZ IS TEMP VERSION OF GYREM CX/CY  CURRENT TEXT MODE X/Y OF THE MOUSE POSITION (MX/MY GIVE PIXEL COORDINATES)REM PX/PY  PUZZLE DRAW X/YREM PT IS TEMP VERSION OF PYREM PI PUZZLE INDEXREM FC  CURRENT FACE COMPONENT (1=HAIR,2=EYES,3=NOSE,4=MOUTH,5=EARS)REM FH  FACE-HAIR INDEX  (HAIR AND EYEBROWS)REM FE  FACE-EYES INDEXREM FS  FACE-NOSE INDEXREM FM  FACE-MOUTH INDEXREM FA  FACE-EARS INDEXREM MI   MISSION INDEXREM MI$  MISSION MODE NAMEREM DP  DAMAGE (TO CONDUITS) PER SECONDREM AS  AUDIO SETTING (0=OFF, ELSE ON)REM MW  MOUSE WHEEL POSITIONREM *************************************************************************REM ********************** START OF THE CODE ********************************REM *************************************************************************        REM DISABLE ANY EXISTING SOUND  PSGINIT    FMINIT          REM ************ SETUP ZSMKIT ***********************        REM ---- SET $8C00 AS TOP OF BASIC RAM. THIS IS WHERE ZSMKIT LIB WILL GO  POKE $030F,1    SYS  $FF99    : REM FETCH BANK COUNT IN ".A" REGISTER         POKE $030D,$00: REM .X REG    POKE $030E,$8C: REM .Y REG    POKE $030F,0    : REM STATUS REG    SYS  $FF99              REM  I.E. THE ABOVE TELLS BASIC IT CAN'T USE ABOVE $8C00 FOR DIM'S AND OTHER DECLARATIONS, ETC.    REM  IT MAY BE OPTIONAL FOR SMALL BASIC PROGRAMS    REM ---------------------------------      CLR: REM CLEAR VARIABLES, WHICH RE-READS MEMTOP  BLOAD"ZSMKIT8C00.BIN",8,1,$8C00 : REM LOAD ZSMKIT LIB            REM INITIALIZE ZSMKIT  POKE $030C,1  : REM RAM BANK 1 IS GIVEN TO ZSMKIT  SYS  $8C00    : REM ZSM-INIT-ENGINE               REM SET UP THE DEFAULT INTERRUPT HANDLER    SYS $8C54 : REM ZSMKIT-SETISR         REM NOW ZSMKIT IS ALL SET UP TO PLAY MUSIC      REM LOAD THE DEFAULT SONG. ZSMKIT OWNS BANK 1, SO LOAD SONG STARTING IN BANK 2  BLOAD"00.ZSM",8,2,$A000:REM 2KB                REM NOW TELL ZSMKIT WHERE THE SONG LIVES        BANK 2    POKE $030D,0  :REM ZSMKIT PRIORITY SLOT 0    POKE $030C,$00    POKE $030E,$A0    SYS  $8C1E : REM ZSM-SETMEM            POKE $030D,0  :REM .X (PRIORITY)    POKE $030C,30 :REM .A (LO) TICK RATE    POKE $030E,0  :REM .Y (HI) TICK RATE    SYS  $8C2D    :REM JSR ZSM_SETRATE          REM NOW WE'RE CLEAR TO START SONG PLAYBACK  POKE $030D,0  :REM PRIORITY (SLOT) 0  SYS  $8C06    :REM ZSM-PLAY                     REM *************************************************      Z=RND(0):REM INIT RANDOM NUMBER GENERATOR        AS=-1:REM "NOT 0" IN BASIC IS TRUE        MD=4:REM MAX PUZZLE DEPTH    MA=0:REM MISSION STATE, 0 IS "ON MISSION", 1 IS "POST MISSION" (INTERMEDIATE)      MC=0:REM MISSIONS COMPLETED    NC=9999:REM NUMBER OF CONDUITS REMAINING        TS=0:REM INITIAL TALK STATE    TA=1:REM CURRENT TALK MSG X    TB=1:REM CURRENT TALK MSG Y        DIM M$(3):REM TALK MESSAGES  DIM PZ:REM CURRENT PUZZLE LENGTH    PZ=8:TP=8  DIM PZ(PZ,MD):REM PUZZLE INDEXES (N MAX ACROSS, MD BLOCKS HIGH MAX.)          DIM TP(PZ,MD):REM TARGET PUZZLE      MI=2:REM MISSION TYPE INDEX (USED AS INITIAL MISSION ALWAYS)    MM=21:REM MAX MISSION INDEX             DIM MI$(MM):REM MISSION TYPE NAMES    DIM MI(MM,4):REM MISSION TYPE PARAMETERS    RESTORE MSNCONFIG    I=1NEXTMSNLOAD:        READ A$:REM MISSION NAME    IF A$="" THEN GOTO DONEMSNINIT    MI$(I)=A$       READ MI(I,0):REM MISSION MUSIC    READ MI(I,1):REM MISSION CONFIG    READ MI(I,2):REM MISSION MIN DURATION    READ MI(I,3):REM MISSION RND DURATION    I=I+1    GOTO NEXTMSNLOADDONEMSNINIT:                      NN=3:REM MAX TIMERS  DIM D(NN):REM CURRENT DELTAS  DIM T(NN):REM SET TIMERS  DIM E(NN):REM EVENTS  T(1) = 60:REM ONE SECOND  (1.000    S)  T(2) = 30:REM 1/2 SECOND  ( .500    S) [      30/60TH=0.5   ]  T(3) =  1:REM "AS FAST AS POSSIBLE" (EXCEPT FOR MAIN-LOOP)      DIM FI(5):REM FACE INDEX PER COMPONENT      DIM FH(8):REM HAIR/EYEBROWS    DIM FE(8):REM EYES    DIM FS(8):REM NOSE    DIM FM(8):REM MOUTH    DIM FA(3):REM EARS        DIM SK(16):REM STACK SPOTS, REPRESENTS POWER STORAGE BANKS (SK)  (NOTE: 16 FOR IN FUTURE, ONLY USING 10 NOW)    FOR I = 1 TO 10      SK(I) = 8    NEXT I    REM SETUP FOR SEMI-"HALF TANK" INITIAL LOAD    FOR I = 11 TO 16:REM 16 IS "MAX STACK SPOTS"      SK(I) = 0    NEXT I      FH(1)=$C0    :REM NORMAL 1 (INSET)  FH(2)=FH(1)+2:REM NORMAL 2 (STRAIGHT)  FH(3)=FH(2)+2:REM SURPRISED/EXCITED (UP)  FH(4)=FH(3)+2:REM ANGRY  FH(5)=FH(4)+2:REM BALD (NO HAIR)  FH(6)=FH(5)+2:REM BALD (NO HAIR)    FH(7)=FH(6)+2:REM BALD (NO HAIR)    FH(8)=FH(7)+2:REM BALD (NO HAIR)    FH=1        FE(1)=$D0    :REM MILD  FE(2)=FE(1)+2:REM EXCITED  FE(3)=FE(2)+2:REM CLOSED EYE  FE(4)=FE(3)+2:REM UPSET/ANGRY  FE(5)=FE(4)+2:REM GLARE  FE(6)=FE(5)+2:REM WINK    FE(7)=FE(6)+2:REM LOOK LEFT    FE(8)=FE(7)+2:REM LOOK RIGHT    FE=1        FS(1)=$E0    :REM WIDE  FS(2)=FS(1)+2:REM WIDE (SAME)  FS(3)=FS(2)+2:REM TALL  FS(4)=FS(3)+2:REM TALL (SAME)  FS(5)=FS(4)+2:REM TALL (SAME)  FS(6)=FS(5)+2:REM WIDE (TALLER)    FS(7)=FS(6)+2:REM TRIANGULAR (ANGRY?)    FS(8)=FS(7)+2:REM SMALL    FS=1      FM(1)=$F0    :REM MEDIUM  FM(2)=FM(1)+2:REM MEDIUM PLUS  FM(3)=FM(2)+2:REM SMALL OH  FM(4)=FM(3)+2:REM DISAPPOINTED  FM(5)=FM(4)+2:REM MEDIUM HAPPY  FM(6)=FM(5)+2:REM VERY HAPPY    FM(7)=FM(6)+2:REM VERY DISAPPOINTED    FM(8)=FM(7)+2:REM NORMAL CLOSED    FM=1        FA(1)=$97:REM NEXT EAR IS THIS +3    FA(2)=$A7:REM NEXT EAR IS THIS +3    FA(3)=$B7:REM NEXT EAR IS THIS +3    FA=1  GX=2    GY=1          PX = 0      PY = 21      FOR I = 1 TO NN    E(I) = TI:REM SET EVENT-INDEX TO CURRENT JIFFIES COUNTER TI  NEXT I      GOSUB INITFONT  SCREEN 7:REM 22X23 TEXT MODE  COLOR 1,0:REM WHITE ON BLACK  CLS        MOUSE 1    BVLOAD "MOUSE-CIRCLE.DAT",8,1,$3000        GOSUB DRAWFACEGUY    GOSUB INTRODUCTION:REM COMMENT THIS OUT FOR FASTER STARTUP  CLS           GOSUB DRAWOVERLAY  MW=MWHEEL:REM INIT MOUSE WHEEL        GOSUB SETFACECOLOR        GOSUB GENMISSMODE:REM AND SHOW IT    GOSUB GENPUZZLE    GOSUB COPYPUZZLE:REM COPY THE GENERATED PUZZLE AS THE "TARGET PUZZLE"        GOSUB GENPUZZLE    GOSUB GENBGMUSIC        GOSUB DRAWTARGET        TG=TI:REM TIME TO GO = CURRENT TIMER VALUE            REM DRAIN ANY RESIDUAL KEYBOARD INPUT (TBD MOVE TO GOSUB)GETCATOFFKBD:       GET A$    A=ASC(A$)    IF A<>0 THEN GOTO GETCATOFFKBD    REM ****************        MS=TI:REM MARK MISSION START TIMER        MAINLOOP:  FOR I = 1 TO NN    D(I) = TI-E(I):REM COMPUTE CURRENT TIMER DELTAS FOR EACH EVENT        IF D(I) < 0 THEN D(I)=16777215+D(I):REM HANDLE SPECIAL CASE OF TI WRAPPING $FFFFFF (ABS(D(I)) BUT WE KNOW D(I) IS <0)  NEXT I    IF D(1) > T(1) THEN GOSUB EVENTo1:REM EVERY SECOND  IF D(2) > T(2) THEN GOSUB EVENTo2:REM EVERY HALF-SECOND  IF D(3) > T(3) THEN GOSUB EVENTo3:REM EVERY QUARTER-SECOND    CX=INT(MX/8)    CY=INT(MY/8)  REM GOSUB DRAWFACEGUY    GOSUB DRAWPUZZLE    GOSUB SYSTEMSTATUS        GET A$    A=ASC(A$)            IF A=133 THEN FC=1:REM F1    IF A=137 THEN FC=2:REM F2  IF A=134 THEN FC=3:REM F3  IF A=138 THEN FC=4:REM F4  IF A=135 THEN FC=5:REM F5        IF A=27  THEN GOSUB EXITGAME:REM EXIT THE GAME        REM DEBUG - TEST ONLY OPTION    REM IF A=32  THEN GOSUB GENMISSMODE:GOSUB GENPUZZLE:GOSUB GENBGMUSIC:GOSUB DRAWTARGET:REM SPACE        IF A=32 THEN GOSUB TOGGLESOUND            MW = MWHEEL    REM IF MW<0 THEN GOSUB UPINDEX    REM IF MW>0 THEN GOSUB DOWNINDEX            IF MW<0 THEN GOSUB STACKTAKE:REM MOUSE WHEEL UP    IF MW>0 THEN GOSUB STACKPUT:REM MOUSE WHEEL DOWN        REM DEBUG - TO SEE CURRENT PUZZLE REQUIREMENTS    REM FOR I = 1 TO TP    REM   LOCATE I+14,19:PRINT "   ";    REM     LOCATE I+14,19:PRINT PZ(I,0);    REM NEXT I      GOTO MAINLOOPREM ***************************************************     DOWNINDEX:  REM FC  FACE COMPONENT (1=HAIR,2=EYES,3=NOSE,4=MOUTH,5=EARS)  IF FC=1 THEN FH=FH-1:IF FH<1 THEN FH=4  IF FC=2 THEN FE=FE-1:IF FE<1 THEN FE=8    IF FC=3 THEN FS=FS-1:IF FS<1 THEN FS=8    IF FC=4 THEN FM=FM-1:IF FM<1 THEN FM=8    IF FC=5 THEN FA=FA-1:IF FA<1 THEN FA=3  RETURNREM ***************************************************     UPINDEX:  REM FC  FACE COMPONENT (1=HAIR,2=EYES,3=NOSE,4=MOUTH,5=EARS)  IF FC=1 THEN FH=FH+1:IF FH>4 THEN FH=1  IF FC=2 THEN FE=FE+1:IF FE>8 THEN FE=1    IF FC=3 THEN FS=FS+1:IF FS>8 THEN FS=1    IF FC=4 THEN FM=FM+1:IF FM>8 THEN FM=1    IF FC=5 THEN FA=FA+1:IF FA>3 THEN FA=1  RETURNREM ***************************************************     DRAWPUZZLE:   REM DRAW THE REMAINING MAIN POWER  FOR I = 1 TO 10:REM MAX STACKS      ZZ=64+(8-SK(I))        ZA=23-I      TILE 21,ZA,ZZ        TILE 20,ZA,ZZ    NEXT I     PI=0  FOR I = 1 TO PZ      PT=PY        PU=PX+(I*2)-2                CC=$5D:REM ASSUME DEFAULT COLOR...        IF (PU=CX) OR (PU+1=CX) THEN CC=$4A:REM USE HIGHLIGHT COLOR...                REM LOCATE 8+I,17:PRINT PZ(I,0);                        IF (CC<>$5D) THEN PI=I                REM THE FOLLOWING IS TO RESTRICT SELECTION TO BE CURRENT PUZZLE AREA ONLY        REM IF (CC<>$5D) AND (CY <= PY) AND (CY >= PY-MD) THEN PI=I                  FOR I2 = 1 TO MD        ZZ=64+(8-PZ(I,I2)):REM START OFFSET FROM FONT #64          TILE PU,PT,ZZ,CC            TILE PU+1,PT,ZZ,CC            PT=PT-1        NEXT I2    NEXT I        LOCATE 11,1    COLOR 11,0    IF PI=1 THEN PRINT "LIFE SUPPORT";:GOTO DRAWPZEND    IF PI=2 THEN PRINT "ENGINES     ";:GOTO DRAWPZEND    IF PI=3 THEN PRINT "PHASERS     ";:GOTO DRAWPZEND    IF PI=4 THEN PRINT "TRANSPORTERS";:GOTO DRAWPZEND    IF PI=5 THEN PRINT "SHIELDS     ";:GOTO DRAWPZEND    IF PI=6 THEN PRINT "DEFLECTORS  ";:GOTO DRAWPZEND    IF PI=7 THEN PRINT "SENSORS     ";:GOTO DRAWPZEND    IF PI=8 THEN PRINT "REPLICATORS ";:GOTO DRAWPZEND                 PRINT "            ";                               DRAWPZEND:      COLOR 1,0      RETURN    REM ***************************************************     GENPUZZLE:      ZN=MI(MI,1):REM STORE COPY OF CURRENT MISSION CONFIGURATION    ZM=128:REM BIT MASK SHIFT, LIKE 1<<8  FOR I = 1 TO TP      TP(I,0) = 0:REM CLEAR THE TOTAL FOR THIS SUB-SYSTEM PUZZLE COLUMN      FOR I2 = 1 TO MD          TP(I,I2) = 0:REM CLEAR EXISTING PUZZLE    NEXT I2                REM DOES THIS SUB-SYSTEM REQUIRE POWER FOR THIS MISSION TYPE?        IF (ZM AND ZN)=0 THEN TP(I,0)=1:TP(I,1)=1:GOTO NEXTTP2            REM ELSE DO THE FANCY LOGIC TO DETERMINE HOW MUCH POWER THIS SUB-SYSTEM NEEDS FOR THIS MISSION      FOR I2 = 1 TO MD-1          ZZ=0            PC=(100-(I2*20))/100:REM PERCENTAGE CHANGE (HIGHER ON EARLIER BLOCKS)          IF (RND(1) > PC) THEN TP(I,I2)=8:TP(I,0)=TP(I,0)+8:ZZ=1            IF ZZ=0 THEN GOTO NEXTTP    NEXT I2NEXTTP:    REM RANDOMIZE HOW MUCH THE LAST UNINITIALIZE PUZZLE DEPTH BLOCK NEEDS    TP(I,I2) = INT(RND(1)*5)+3        TP(I,0) = TP(I,0)+TP(I,I2)        NEXTTP2:            ZM=INT(ZM/2):REM THIS IS ZM>>1 (SHIFT RIGHT 1 BIT)    NEXT I        REM DEBUG - TO MONITOR CURRENT PUZZLE TARGET POWER REQ    REM FOR I = 1 TO TP    REM   LOCATE I+14,16:PRINT "   ";    REM     LOCATE I+14,16:PRINT TP(I,0);    REM NEXT I      RETURN    REM *************************************************** GENBGMUSIC:  REM DECIDE AND PLAY A BACKGROUND MUSIC      POKE $30D,0 : REM PRIORITY (SLOT) 0  SYS  $8C09  : REM ZSM-STOP  POKE $30D,1 : REM PRIORITY (SLOT) 1  SYS  $8C09  : REM ZSM-STOP        IF AS=0 THEN GOTO SKIPAUDIO      ZI=MI(MI,0):REM USE THE CHOSEN AUDIO ASSIGNED FOR THIS MISSION TYPE    REM ZI=INT(RND(1)*8+1):REM USE THIS INSTEAD TO JUST PLAY A RANDOM AUDIO TRACK        BL$ = "0" + MID$(STR$(ZI),2) + ".ZSM":REM MID$ USED TO REMOVE SIGN CHARACTER AT FRONT        BLOAD BL$,8,3,$A000      BANK 3    POKE $030D,1  :REM ZSMKIT PRIORITY SLOT 1    POKE $030C,$00    POKE $030E,$A0    SYS  $8C1E : REM ZSM-SETMEM         POKE $030D,1  :REM PRIORITY (SLOT) 1  SYS  $8C06    :REM ZSM-PLAY        REM VOLUME BUG TEST (DEBUG)    POKE $30D,1  :REM .X PRIORITY SLOT 1    POKE $30C,$20:REM .A ATTENUATION $00=FULL, $3F MUTE    SYS  $8C21   :REM zsm setatten    SKIPAUDIO:  RETURNREM ***************************************************         REM COPY TARGET PUZZLE "TP" TO PZ "CURRENT PUZZLE"COPYPUZZLE:  FOR I = 1 TO PZ          PZ(I,0) = TP(I,0)              FOR I2 = 1 TO MD          PZ(I,I2) = TP(I,I2)    NEXT I2          NEXT I      RETURN        REM ***************************************************     GENMISSMODE:REM GENERATE MISSION MODE  COLOR 1,0  LOCATE 1,7:PRINT "CURRENT MISSION:";  IF MC > 0 THEN MI = (INT(RND(1)*MM))+1:REM ELSE IF 0, START GAME ALWAYS IN SAME MISSION INDEX    COLOR 12,0  LOCATE 2,7:PRINT MI$(MI);    COLOR 1,0  RETURN    DRAWTARGET:  CC=$63      FOR I = 1 TO TP          PT=PY-MD-1        PU=PX+(I*2)-2              FOR I2 = 1 TO MD      ZZ=64+(8-TP(I,I2)):REM START OFFSET FROM FONT #64          TILE PU,PT,ZZ,CC            TILE PU+1,PT,ZZ,CC            PT=PT-1    NEXT I2          NEXT I            IF (MI=2) THEN GOTO STARDOCKMSG        REM ERASE ANY PRIOR TALKMSG    LOCATE 3,7:PRINT"                ";    LOCATE 4,7:PRINT"                ";    LOCATE 5,7:PRINT"                ";    GOTO SKIPGUYMSGS        STARDOCKMSG:REM    123456789012345  COLOR 14,0  LOCATE 3,7:PRINT"WE ARE AT THE   ";    LOCATE 4,7:PRINT"SPACEDOCK, WAIT ";    LOCATE 5,7:PRINT"FOR ORDERS.     ";     COLOR 1,0    SKIPGUYMSGS:      RETURN        REM ***************************************************SETFACECOLOR:  REM THIS IS USED JUST TO SET THE COLOR ONCE- DISPLAY CODE DOESN'T MATTER  ZZ=$30  TILE GX-1,GY,32,ZZ        TILE GX  ,GY,32,ZZ    TILE GX+1,GY,32,ZZ    TILE GX+2,GY,32,ZZ            GZ=GY+1:REM EYES    TILE GX  ,GZ,32,ZZ    TILE GX+1,GZ,32,ZZ        REM EARS    TILE GX-1,GZ,32,ZZ    TILE GX+2,GZ,32,ZZ        GZ=GZ+1:REM NOSE    TILE GX-1,GZ,32,ZZ    TILE GX  ,GZ,32,ZZ    TILE GX+1,GZ,32,ZZ    TILE GX+2,GZ,32,ZZ        GZ=GZ+1:REM MOUTH    TILE GX-1,GZ,32,ZZ    TILE GX  ,GZ,32,ZZ    TILE GX+1,GZ,32,ZZ    TILE GX+2,GZ,32,ZZ        RETURNREM ***************************************************    DRAWFACEGUY:      REM LOCATE GY  ,GX+10:PRINT FH:REM "F1 ";FH;    REM LOCATE GY+1,GX+10:PRINT FE:REM "F2 ";FE;    REM LOCATE GY+2,GX+10:PRINT FA:REM "F5 ";FA;    REM LOCATE GY+3,GX+10:PRINT FS:REM "F3 ";FS;    REM LOCATE GY+4,GX+10:PRINT FM:REM "F4 ";FM;  TILE GX  ,GY,FH(FH)    TILE GX+1,GY,FH(FH)+1               GZ=GY+1:REM EYES    TILE GX  ,GZ,FE(FE)    TILE GX+1,GZ,FE(FE)+1        REM EARS    TILE GX-1,GZ,FA(FA)    TILE GX+2,GZ,FA(FA)+3        GZ=GZ+1:REM NOSE    TILE GX  ,GZ,FS(FS)    TILE GX+1,GZ,FS(FS)+1        GZ=GZ+1:REM MOUTH    TILE GX  ,GZ,FM(FM)    TILE GX+1,GZ,FM(FM)+1        RETURNREM ***************************************************INITFONT:  BVLOAD "FONTALL.DAT",8,1,$F000      RETURNREM ***************************************************    DRAWOVERLAY:  REM FACE-GUY BORDER    ZZ=$B0  GZ=GY-1  TILE GX-2,GZ,80,ZZ    TILE GX-1,GZ,81,ZZ    TILE GX  ,GZ,81,ZZ    TILE GX+1,GZ,81,ZZ    TILE GX+2,GZ,81,ZZ    TILE GX+3,GZ,82,ZZ        TILE GX-2,GY,98,ZZ    TILE GX+3,GY,98,ZZ    GZ=GY+1    TILE GX-2,GZ,98,ZZ    TILE GX+3,GZ,98,ZZ    GZ=GY+2    TILE GX-2,GZ,98,ZZ    TILE GX+3,GZ,98,ZZ    GZ=GY+3    TILE GX-2,GZ,98,ZZ    TILE GX+3,GZ,98,ZZ    GZ=GY+4  TILE GX-2,GZ,112,ZZ    TILE GX-1,GZ,81,ZZ    TILE GX  ,GZ,81,ZZ    TILE GX+1,GZ,81,ZZ    TILE GX+2,GZ,81,ZZ    TILE GX+3,GZ,114,ZZ        REM DRAW PUZZLE    ZZ=$01    FOR I = 0 TO PZ*2-1      TILE I,PY+1,81,ZZ        TILE I,PY-MD,81,ZZ    NEXT I    LOCATE 8,3:PRINT"MISSIONS";    LOCATE 9,3:PRINT"CONDUITS";  LOCATE 11,18:PRINT CHR$($5F);"TIME";  REM DRAW POWER TANK MAX  LOCATE 13,20:PRINT "MAX";         REM NEED MESSAGE    REM LOCATE 13,17:PRINT CHR$($5F);    LOCATE 14,17:PRINT"N";    LOCATE 15,17:PRINT"E";    LOCATE 16,17:PRINT"E";    LOCATE 17,17:PRINT"D";        REM DRAW EMBLEM    TILE 0,7,78,$09:TILE 1,7,79,$09    TILE 0,8,94,$09:TILE 1,8,95,$09  RETURN    REM ***************************************************    STACKTAKE:  IF (PI=0) THEN GOTO STACKTAKEND2:REM NOT ON A PUZZLE INDEX  Z4 = -MW:REM MW IS NEGATIVE FOR THE MOUSE WHEEL DOWN CONDITION    IF (Z4 > 9) THEN Z4=9:REM CAP POWER ADJUSTMENT SPEED TO 9 UNITS  FOR MZ = 1 TO Z4        IF (SK(1) = 0) THEN GOTO STACKTAKEEND:REM NOTHING TO TAKE!          FOR ZZ = 16 TO 1 STEP-1      IF (SK(ZZ) > 0) THEN GOTO TAKEFOUND    NEXT ZZTAKEFOUND:        SK(ZZ)=SK(ZZ)-1          REM DO WE HAVE ROOM IN CURRENT PUZZLE INDEX TO TAKE INTO? (STACK TO PUZZLE)      FOR I = 1 TO MD        IF PZ(PI,I)<8 THEN PZ(PI,I)=PZ(PI,I)+1:PZ(PI,0)=PZ(PI,0)+1:GOTO STACKTAKEEND      NEXT I              REM NO ROOM WAS FOUND - PUT IT BACK      SK(ZZ)=SK(ZZ)+1:GOTO STACKTAKEND2        STACKTAKEEND:           NEXT MZ STACKTAKEND2:     RETURN    REM ***************************************************STACKPUT:  IF (PI=0) THEN GOTO STACKPUTEND2:REM NOT ON A PUZZLE INDEX      Z4 = MW:REM MW IS POSITIVE FOR THE MOUSE WHEEL DOWN CONDITION    IF (Z4 > 9) THEN Z4=9:REM CAP POWER ADJUSTMENT SPEED TO 9 UNITS  FOR MZ = 1 TO Z4            IF (SK(16) = 8) THEN GOTO STACKPUTEND:REM NO ROOM IN STACK, STACK IS FULL          FOR ZZ = 1 TO 16        IF (SK(ZZ) < 8) THEN GOTO PUTFOUND      NEXT ZZPUTFOUND:REM ROOM WAS FOUND ON STACK TO PUT INTO...      SK(ZZ)=SK(ZZ)+1        REM FIND HIGHEST ENTRY IN PUZZLE INDEX TO PULL FROM  (PUZZLE TO STACK)      FOR I = MD TO 2 STEP-1        IF PZ(PI,I)>0 THEN PZ(PI,I)=PZ(PI,I)-1:PZ(PI,0)=PZ(PI,0)-1:GOTO STACKPUTEND      NEXT I        REM HANDLE SPECIAL CASE WHERE PUZZLE DEPTH 1 HAS A MINIMUM OF 1        IF PZ(PI,1)>1 THEN PZ(PI,1)=PZ(PI,1)-1:PZ(PI,0)=PZ(PI,0)-1:GOTO STACKPUTEND          REM NO ROOM WAS FOUND - PUT IT BACK      SK(ZZ)=SK(ZZ)-1:GOTO STACKPUTEND2STACKPUTEND:          NEXT MZ    STACKPUTEND2:  RETURN    REM ***************************************************SYSTEMSTATUS:        DP=0        PU=PX        FOR I = 1 TO PZ          D = TP(I,0)-PZ(I,0)        IF D<0 THEN D=-D:REM ABSOLUTE VALUE                IF (D >= 6) THEN             ZZ=$02:DP=DP+(INT(RND(1)*4)+1):REM RED        IF (D < 6) AND (D >= 3) THEN ZZ=$07:DP=DP+(INT(RND(1)*2)+1):REM YELLOW        IF (D < 3) THEN              ZZ=$05:                        REM GREEN                       PT=PY-10:REM ASSUME UPPER SUB-SYSTEM ICON POSITION                IF (I AND $01)=$01 THEN PT=PY-9:REM ACTUALLY USE LOWER SUB-SYSTEM ICON POSITION        REM THE ABOVE IS KIND OF A TRICK OF "IF (I%2=0)" WHERE % = MODULUS                        PU=PX+(I*2)-2                       ZA=115+(I-1)*2:REM DECIDE THE SUB-SYSTEM ICON TO USE                TILE PU,PT,ZA,ZZ        TILE PU+1,PT,ZA+1,ZZ            NEXT I     COLOR 12,0    REM CHR$($9D) IS MOVE LEFT ONE SPACE, RETRACT THE "NATURAL SPACE" AFTER SEMICOLON IN PRINT  LOCATE 8,11:PRINT MC;CHR$($9D);" ";:REM MISSION COUNT    LOCATE 9,11:PRINT NC;CHR$($9D);" ";:REM CONDUITS REMAINING    COLOR 1,0         RETURN    INTRODUCTION:    REM COMMENT THIS OUT FOR QUICK START GAME      COLOR 14,0  LOCATE  2,9:PRINT CHR$($80);CHR$(34);"LOWER DECKS";CHR$($80);CHR$(34)  LOCATE  3,9:PRINT  "STARDATE 6502"  LOCATE  5,9:PRINT  "  V* / 2023  "  MW=MWHEEL:REM INIT MOUSE WHEEL      CY=7    IP=0:REM INSTURCTION PAGE    SD=1:REM SLEEP DELAY    RESTORE INTROSTRSNEXTINTROST:        READ IS$:REM INPUT STRING    IF IS$="" THEN GOTO WAITIMW:REM WAIT INTRO MOUSE WHEEL      FOR I = 1 TO LEN(IS$)                   CS$ = MID$(IS$,I,1)                IF (SD=0) THEN GOTO INTROFAST                   COLOR INT(RND(1)*15)+1,INT(RND(1)*15)+1      LOCATE CY,I:PRINT CS$        SLEEP SDINTROFAST:              FM=INT(RND(1)*8)+1        IF (FM=6) THEN FM=3:REM AVOID BIG SMILE DURING INTRO READING        IF (FM=7) THEN FM=2:REM AVOID BIG FROWN DURING INTRO READING        GOSUB DRAWFACEGUY           COLOR 1,0        IF (CY>17) THEN COLOR 7,0                LOCATE CY,I:PRINT CS$                MW=MWHEEL:REM INIT MOUSE WHEEL        IF (MW<>0) THEN SD=0    NEXT I    CY=CY+1    GOTO NEXTINTROST    WAITIMW:REM WAIT FOR MOUSE WHEEL MOVEMENT      MW=MWHEEL:REM INIT MOUSE WHEEL    TX=TI    DY=INT(RND(1)*60+1+60)INTROWAIT:    TN=TI    IF (TN-TX) < DY THEN GOTO SKIPINUP:REM SKIP INTRO FACE UPDATE    REM JUST FOR FUN, RANDOMIZE THE FACE WHILE WAITING FOR MOUSE WHEEL  FH=INT(RND(1)*4)+1    FE=INT(RND(1)*8)+1    FS=INT(RND(1)*8)+1    FM=INT(RND(1)*8)+1    FA=INT(RND(1)*3)+1      TX=TI  GOSUB DRAWFACEGUYSKIPINUP:       MZ=MWHEEL:REM INIT MOUSE WHEEL    IF (MZ = MW) THEN GOTO INTROWAIT        REM RESET FOR THE NEXT PAGE OF INSTRUCTIONS    IF (IP=0) THEN IP=IP+1:CY=7:RESTORE INTROSTRS2:GOTO NEXTINTROST  COLOR 1,0  RETURN        EVENTo1:  NC=NC-DP:REM APPLY DAMAGE PER SECOND      IF NC<8 THEN GOTO ENDGAME  REM EXAMINE TIME ELAPSED...  TD = INT((TI-MS)/60):REM COMPUTE MISSION DELTA TIME SECONDS (APPROX.)  TT = INT(MI(MI,2)+MI(MI,3)):REM TOTAL POSSIBLE MISSION DURATION        REM LOCATE 6,15:PRINT TD;CHR$($9D);"  ";    REM LOCATE 7,15:PRINT TT;CHR$($9D);"  ";        REM ABSOLUTELY END OF MISSION    IF (TD > TT) THEN GOTO MISSIONCOMP        IF (TD > MI(MI,2)) THEN GOTO CHANCEMSNCMP    GOTO NOCHANCEMSNC  CHANCEMSNCMP:REM CHANCE OF MISSION COMPLETE    REM  RANDOM CHANCE TO END MISSION    TX=(TD-MI(MI,2))/MI(MI,3)    IF TX < 0.2 THEN TX=0.01:GOTO ROLLCHNCCO    IF TX < 0.4 THEN TX=0.05:GOTO ROLLCHNCCO    IF TX < 0.6 THEN TX=0.09:GOTO ROLLCHNCCO    IF TX < 0.8 THEN TX=0.15:GOTO ROLLCHNCCO    GOTO MISSIONCOMPROLLCHNCCO:REM ROLL CHANCE COMPLETE...    Z=RND(1)    IF (Z < TX) THEN GOTO MISSIONCOMP  GOTO SHOWMSNWAIT    MISSIONCOMP:REM SELECT NEW PUZZLE AND UPDATE FOR NEXT MISSION      MC=MC+1          :REM INCREMENT NUMBER OF MISSIONS COMPLETE    GOSUB GENMISSMODE    GOSUB GENPUZZLE    GOSUB GENBGMUSIC    GOSUB DRAWTARGET    TILE 16,10,99    :REM CLEAR THE MISSION TIMER DIAMOND    MS=TI    MA=0    TS=0:REM RESET THE TALKMSG STATE    LOCATE 9,17:PRINT "      ";:REM CLEAR REPAIR MSG (IN CASE SHOWN EARLIER)    RETURNSHOWMSNWAIT:            IF (MA<>0) THEN GOTO SKIPMCMSG:REM A MISSION COMPLETE MESSAGE AS ALREADY DECIDED...          COLOR 14,0    IF (MC=0) THEN GOTO LAUNCHMSG           LOCATE 3,7:PRINT "MISSION COMPLETE";    LOCATE 4,7:PRINT "WAITING FOR     ";         LOCATE 5,7    ZZ=INT(RND(1)*10)+1    IF ZZ<2 THEN PRINT "CREW REST       ";:GOTO MCMSGSKIP    IF ZZ=3 THEN PRINT "STARFLEET ORDERS";:GOTO MCMSGSKIP    IF ZZ=4 THEN PRINT "SHUTTLE DOCKING ";:GOTO MCMSGSKIP    IF ZZ<6 THEN PRINT "COMMERCIAL BREAK";:GOTO MCMSGSKIP    IF ZZ<8 THEN PRINT "DILITHIUM SUPPLY";:GOTO MCMSGSKIP    IF ZZ=9 THEN PRINT "CARGO LOADING   ";:GOTO MCMSGSKIP                 PRINT "Q TO GO AWAY    ";:GOTO MCMSGSKIP                             LAUNCHMSG:                             LOCATE 3,7:PRINT "ORDERS ARE IN.  ";    LOCATE 4,7:PRINT "SHIP IS MOVING, ";     LOCATE 5,7:PRINT "GET READY!      ";    MCMSGSKIP:    COLOR 1,0       MA=1:REM SET MISSION "STATE" TO 1, INDICATING A WAIT-MSG HAS BEEN DECIDED       SKIPMCMSG:          REM REPAIR CONDUITS    IF DP<1 THEN GOTO DOREPAIR      GOTO EVENTo1END    DOREPAIR:     REM CHR$(150)=LT RED,CHR$(5)=WHITE  IF MC>0 THEN LOCATE 9,17:PRINT CHR$(150);"REPAIR";CHR$(5)    NC=NC+(INT(RND(1)*10)+1)    IF NC > 9999 THEN NC=9999EVENTo1END:     RETURN    NOCHANCEMSNC:REM NO CHANCE OF MISSION COMPLETE    REM ELSE... WAIT FOR MISSION TO BE CONDUCTED         REM LOCATE 8,15:PRINT "ACTIVE  ";        IF (MC=0) THEN GOTO NOCHANCESKIP            REM TODO - "GUY" RANDOM TALK SEQUENCE (FOR NOW JUST CLEAR ANY MSGS)    REM LOCATE 3,7:PRINT "RANDOM          ";    REM LOCATE 4,7:PRINT "   TALKING      ";    REM LOCATE 5,7:PRINT "             GUY";        IF TS=1 THEN SKIPTALKPICK        RESTORE TALKSTRS    Z=INT(RND(1)*21):REM 0 TO 20    IF Z>0 THEN FOR I = 1 TO Z:FOR I2=1 TO 3:READ A$:NEXT I2:NEXT I    READ M$(1)    READ M$(2)    READ M$(3)    TS=1:REM INDICATE THAT A TALK STATE HAS BEEN PICKED    REM TA AND TB ARE USED TO HOLD THE CURRENT "TALK" POSITION     REM (I.E.E A=X, B=Y INDEX INTO THE TALK MSG)    TA=1    TB=1    SKIPTALKPICK:       NOCHANCESKIP:       ZA=TD/MI(MI,2):REM PERCENTAGE INTO CURRENT MIN DURATION    IF (ZA>=1) THEN ZA=6:GOTO SHOWMSNCOM    ZA=ZA*6:REM ADJUST FOR ICON INDEX (PERCENT FILL OF "MISSION CLOCK" ICON SET)SHOWMSNCOM:     TILE 16,10,99+ZA:REM SHOW ICON CORRESPONDING TO PERCENTAGE        RETURNREM *************************************************** EVENTo2:  RETURNREM *************************************************** FACEHAPPY:  REM LOCATE 3,10:PRINT"HAPPY  ";  IF (INT(RND(1)*10)>6) THEN FE=INT(RND(1)*8)+1:REM 40% CHANCE OF EYE'S CHANGING    IF FE=4 THEN FE=5:REM AVOID ANGRY EYES IN HAPPY-MODE            IF (INT(RND(1)*10)>5) THEN FH=INT(RND(1)*4)+1:REM 50% CHANCE OF HAIR MOVING    IF (INT(RND(1)*10)>7) THEN FS=INT(RND(1)*4)+1:REM 30% CHANCE OF NOSE MOVING    IF (INT(RND(1)*10)>7) THEN FA=INT(RND(1)*3)+1:REM 30% CHANCE OF EARS MOVING        IF (INT(RND(1)*10)>2) THEN FM=INT(RND(1)*8)+1:REM 80% CHANCE OF MOUTH MOVING    IF FM=7 THEN FM=2:REM AVOID FROWN IN HAPPY-MODE      RETURN    FACEUPSET:  REM LOCATE 3,10:PRINT"UPSET  ";  IF (INT(RND(1)*10)>3) THEN FE=INT(RND(1)*8)+1:REM 70% CHANCE OF EYE'S CHANGING    IF FE=6 THEN FE=3:REM AVOID WINK EYES IN UPSET-MODE        IF (INT(RND(1)*10)>4) THEN FH=INT(RND(1)*4)+1:REM 60% CHANCE OF HAIR MOVING    IF (INT(RND(1)*10)>8) THEN FS=INT(RND(1)*6)+1:REM 20% CHANCE OF NOSE MOVING    IF (INT(RND(1)*10)>8) THEN FA=INT(RND(1)*3)+1:REM 20% CHANCE OF EARS MOVING        IF (INT(RND(1)*10)>4) THEN FM=INT(RND(1)*8)+1:REM 60% CHANCE OF MOUTH MOVING    IF FM=6 THEN FM=4:REM AVOID SMILE IN UPSET-MODE  RETURN      FACEREGULAR:  REM LOCATE 3,10:PRINT"REGULAR";  IF (INT(RND(1)*10)>5) THEN FE=INT(RND(1)*8)+1:REM 50%        IF (INT(RND(1)*10)>5) THEN FH=INT(RND(1)*4)+1    IF (INT(RND(1)*10)>5) THEN FS=INT(RND(1)*8)+1    IF (INT(RND(1)*10)>5) THEN FA=INT(RND(1)*3)+1        IF (INT(RND(1)*10)>5) THEN FM=INT(RND(1)*8)+1     RETURNEVENTo3:  REM UPDATE THE "GUY" FACE  IF MI<4 THEN GOSUB FACEHAPPY:GOTO NEXTSECTION:REM HAPPY FACES    IF MI>20 THEN GOSUB FACEUPSET:GOTO NEXTSECTION:REM SAD/ANGRY FACES    GOSUB FACEREGULARNEXTSECTION:  GOSUB DRAWFACEGUY        IF TS<>1 THEN SKIPTALKUPD:REM NOT IN A TALKMSG STATE    IF TB>3 THEN SKIPTALKUPD:REM PAST MAX ROW OF TALKMSG STRINGS    IF (MI=2) THEN SKIPTALKUPD:REM AT STARDOCK, SKIP TALKMSG        REM ELSE ... DO TALK MESSAGE STR UPDATE        REM CHR$(149)=BROWN,CHR$(5)=WHITE  LOCATE 2+TB,6+TA:PRINT CHR$(149);MID$(M$(TB),TA,1);CHR$(5)        TA=TA+1:REM SET NEXT COLUMN FOR NEXT TALKMSG ITERATION    IF (TA>16) THEN TB=TB+1:TA=1        SKIPTALKUPD:      RETURNREM ***************************************************ENDGAME:  GOSUB SOUNDOFF  FOR I = 1 TO 500                TILE INT(RND(1)*22),INT(RND(1)*23),INT(RND(1)*255),INT(RND(1)*15)    NEXT I    FOR X = 0 TO 11      FOR Y = 0 TO 11          TILE X,Y,1,0            TILE X,23-Y,1,0                        TILE 22-X,Y,1,0            TILE 22-X,23-Y,1,0        NEXT Y    NEXT X    COLOR 0,1  LOCATE 10,1:PRINT "   G A M E  O V E R   ";    SLEEP 200EXITGAME:  COLOR 1,6  SCREEN 1    MOUSE 0  CLS    GOSUB SOUNDOFF    PRINT    PRINT "THANK YOU FOR PLAYING LOWERDECKS!"    PRINT     PRINT " (USE SHIFT+ALT TO RESTORE FONT)"    PRINT "   (OR USE [REBOOT] COMMAND)"    PRINT    PRINT    PRINT "MISSIONS COMPLETED: ";MC    PRINT    PRINT  ENDREM ***************************************************SOUNDOFF:  POKE $30D,0 : REM PRIORITY (SLOT) 0  SYS  $8C09  : REM ZSM-STOP  POKE $30D,1 : REM PRIORITY (SLOT) 1  SYS  $8C09  : REM ZSM-STOP    PSGINIT    FMINIT  RETURN    TOGGLESOUND:  GOSUB SOUNDOFF    AS=NOT AS  RETURN    REM  NAME             MUSIC CONFIG MIN-DUR RND-DURMSNCONFIG:REM                40,15 IS THE METADATA "PLANET ORBIT   ",2,    $D3,    40,    12DATA "SPACEDOCK      ",3,    $00,    10,    4DATA "FIRST CONTACT  ",7,    $D1,    40,    12DATA "REFUGEE RESCUE ",2,    $FB,    40,    12DATA "EXPLORING      ",1,    $EF,    35,    12DATA "NEGOTIATIONS   ",4,    $D1,    60,    15DATA "SHORE LEAVE    ",2,    $90,    40,    12DATA "DIPLOMATIC     ",4,    $D1,    40,    12DATA "MEDICAL SUPPORT",6,    $D1,    40,    12DATA "PERSON ESCORT  ",6,    $C9,    40,    12DATA "PERSUIT        ",1,    $F7,    40,    12DATA "FLEEING        ",5,    $CD,    40,    12DATA "DELIVERY       ",5,    $D1,    40,    12DATA "CRUISING       ",1,    $C5,    35,    12DATA "SEARCHING      ",2,    $C7,    40,    12DATA "NEBULA EXPLORE ",1,    $EF,    40,    12DATA "SURVEY         ",1,    $C7,    40,    12DATA "TRAINING       ",3,    $FF,    50,    10DATA "RESCUE         ",2,    $F1,    40,    12DATA "TRADE          ",7,    $D3,    60,    15DATA "BATTLE         ",8,    $EA,    30,    8DATA ""REM MISSION CONFIGURATION WORKS LIKE THIS:REM IT IS A BIT MASK, WHERE "0" MEANS THAT SUB-SYSTEM NEEDS NO POWER (JUST 1 UNIT FOR MINIMAL STATUS)REM 1 MEANS THE SUB-SYSTEM WILL NEED SOME RANDOM AMOUNT OF POWER FOR THE MISSIONREM SO $FF MEANS ALL THE SUB SYSTEMS NEED SOME POWER, $80 MEANS ONLY THE FIRST SUB-SYSTEM NEEDS POWERREM DURING MISSION SELECTION, ETC.REM THE IDEA IS TO MAKE SOME MISSIONS EASIER THAN OTHERS, AND ALSO "LONGER" (LIKE THE "BORING MISSIONS"REM TEND TO BE THE LONGER ONES).REM INTRO STRING SEQUENCEINTROSTRS:DATA "STARSHIP ENTERPRISE   ":REM 1DATA "DEPENDS ON MANY CREW  ":REM 2DATA "MEMBERS TO KEEP THE   ":REM 3DATA "SHIP FUNCTIONAL. YOUR ":REM 4DATA "JOB IS TO MANAGE THE  ":REM 5DATA "POWER DISTRIBUTION    ":REM 6DATA "SYSTEM!  USE THE MOUSE":REM 7DATA "WHEEL TO DIAL IN THE  ":REM 8DATA "PROPER POWER LEVEL    ":REM 9DATA "FOR EACH SYSTEM.      ":REM 10DATA "  ------------------  ":REM 11DATA "MOVE MOUSE WHEEL TO   ":REM 12DATA "READ INSTRUCTIONS     ":REM 13DATA "(ESC KEY TO EXIT GAME)":REM 14DATA ""INTROSTRS2:DATA "OBJECTIVE! MATCH THE  ":REM 1DATA "POWER NEED OF EACH    ":REM 2DATA "SUBSYSTEM TO AVOID    ":REM 3DATA "LOSING CONDUITS.      ":REM 4DATA "RED = LOSE 4 CONDUITS ":REM 5DATA "YELLOW =   2 CONDUITS ":REM 6DATA "PER SECOND. GREEN IS  ":REM 7DATA "IDEAL (NO LOSS). IF   ":REM 8DATA "ALL GREEN, CONDUIT    ":REM 9DATA "REPAIR IS POSSIBLE    ":REM 10DATA "IN-BETWEEN MISSIONS.  ":REM 11DATA "MOVE MOUSE WHEEL NOW  ":REM 12DATA "TO BOARD THE SHIP AND ":REM 13DATA "START YOUR MISSIONS!  ":REM 14DATA ""TALKSTRS:REM ------------------- 0DATA "I HOPE WE STOP  "DATA "BY RISA SOON.   "DATA "                "REM ------------------- 1DATA "EVER BEEN TO    "DATA "OMICRON DELTA?  "DATA "ME NEITHER.     "REM ------------------- 2DATA "THE TRANSPORTERS"DATA "STILL MAKE ME   "DATA "NERVOUS.        "REM ------------------- 3DATA "I HEAR THAT     "DATA "BA'KU IS A GOOD "DATA "PLANET TO VISIT "REM ------------------- 4DATA "DID YOU KNOW    "DATA "ANDORIANS CAME  "DATA "FROM A MOON?    "REM ------------------- 5DATA "DID ANYONE BRING"DATA "YOU LUNCH?      "DATA "                "REM ------------------- 6DATA "CAN'T THEY JUST "DATA "BEAM FOOD INTO  "DATA "MY STOMACH?     "REM ------------------- 7DATA "I THINK THE     "DATA "PHASERS ARE OUT "DATA "OF ALIGNMENT.   "REM ------------------- 8DATA "SOMEDAY I'LL BE "DATA "A CAPTAIN!      "DATA "                "REM ------------------- 9DATA "I THINK I SAW   "DATA "SOMETHING OUT   "DATA "ON THE WINGS.   "REM ------------------- 10DATA "I HEARD EDWARD  "DATA "GOT A NEW PET   "DATA "CALLED A TRIBBLE"REM ------------------- 11DATA "POWER MANAGEMENT"DATA "IS REALLY       "DATA "IMPORTANT!      "REM ------------------- 12DATA "SCROLL UP,      "DATA "SCROLL DOWN,    "DATA "BEST JOB EVER!  "REM ------------------- 13DATA "ZZZZ...         "DATA "  ZZZ....       "DATA "   OH SORRY!    "REM ------------------- 14DATA "THIS BEATS      "DATA "WASHING THE     "DATA "WINDOWS!        "REM ------------------- 15DATA "I HEARD ROMULAN "DATA "SHIPS CAN GO    "DATA "INVISIBLE!      "REM ------------------- 16DATA "MAKE SURE TO GET"DATA "EACH SUBSYSTEM  "DATA "INTO THE GREEN. "REM ------------------- 17DATA "PRESS SPACE TO  "DATA "TOGGLE THE AUDIO"DATA "SYSTEM.         "REM ------------------- 18DATA "PRESS ESC TO    "DATA "ACTIVATE THE    "DATA "ESCAPE POD.     "REM ------------------- 19DATA "SOME MISSIONS   " DATA "ARE LONG. SOME  "DATA "ARE SHORT.      "REM ------------------- 20DATA "SCOTTY DESIGNED " DATA "THAT POWER      "DATA "CONSOLE.        "REM -------------------DATA ""