#CONTROLCODES 1
#SYMFILE "@:PALEDITOR.SYM"

COLOR 1,0:CLS
PRINT "STARTING"
GOSUB SETREGVARS
PAL.IS.CHANGED=0
 POKE C.REG,1
 SYS $FF99
 LAST.BANK = PEEK(A.REG):IF LAST.BANK=0 THEN LAST.BANK=256
 LAST.BANK = LAST.BANK - 1
 BANKS.AVAILABLE = LAST.BANK-2
 NEXT.BANK=2
GOSUB GETFROMMENU:GOSUB POKEBVSAVE
DIM NV$(10),NN$(10),NV%,FV%,CH$(4)
F$="PAL.INI":GOSUB FILEEXISTS
IF FE% THEN :PRINT "LOADING ";F$:GOSUB READINI
I$="PALGLYPH":GOSUB GETINIVALUE
IF FE% THEN IF I$<>"" THEN F$=I$:GOSUB FILEEXISTS:IF FE% THEN GLYPH$=F$:GLYPH=-1
IF  GLYPH THEN GOSUB SETUPGLYPH

MAIN:
PRINT "{ISO OFF}{UPPER}"
POKE$30C,4:SYS$FF62

   SCREEN $80
   RECT 0,0,319,239,$10

   COLOR 1,11
   X=2:Y=7:H=13:W=38:GOSUB TEXTBOX

   LOCATE 8,3:PRINT  "INDEXS 1 & 11 ARE TREATED SEPERATELY"
   LOCATE 9,3:PRINT  "THEY ARE USED FOR THE USER INTERFACE"
   LOCATE 12,3:PRINT "   * THE TRUE VALUES ARE HIDDEN *"
   LOCATE 15,3:PRINT "F1 WILL HIDE THE MAIN MENU AND SHOW"
   LOCATE 17,3:PRINT "      THE FULL LOADED PALETTE"

   LOCATE 23,12
   PRINT " <PRESS ANY KEY> "
   SM%=-1:PI%=0
   GOSUB FLUSHGET
   GOSUB SETDEFPAL
   GOSUB PUSHPALCOL
   GOSUB PUSHUICOLOR
   CH=1
   CH$(1)="1. LOAD A PALETTE FILE"
   CH$(2)="2. SAVE CURRENT PALETTE"
   CH$(3)="3. EDIT COLOR INDEX"
   CH$(4)="4. SHOW HANGMAN IMAGE"
   COLOR 1,0:CLS
   GOSUB DISPLAYPAL2
STARTEDIT:
   GOSUB PALMENU
   MOUSE 1
MENUGET:
   GET X$:K=0:WHEEL=MWHEEL:GMB=MB
   IF GMB>0 OR WHEEL THEN GMX=MX:GMY=MY:GOTO DOMOUSECHOICE1
   IF X$="" THEN MENUGET
   K=ASC(X$):GOTO DOKEYS1
DOMOUSECHOICE1:
   IF WHEEL<0 THEN :GOSUB WAITWHEEL:K=145
   IF WHEEL>0 THEN :GOSUB WAITWHEEL:K=17
   IF GMB>2 THEN K=13
   IF K THEN DOKEYS1
   IF GMB=1 AND ((GMX>8) AND (GMX<169)) AND ((GMY>8) AND (GMY<169)) THEN JMPPAL
   IF GLYPH THEN IF GMB=1 AND ((GMX>GLYPH.X1) AND (GMX<GLYPH.X2)) AND ((GMY>GLYPH.Y1) AND (GMY<GLYPH.Y2)) THEN JMPPAL
WAITMOUSERELEASE3:
   IF MB>0 THEN WAITMOUSERELEASE3
   GOTO MENUGET
JMPPAL:
   IF MB>0 THEN JMPPAL
   ADDR=(GMY*320)+GMX:PI%=VPEEK (0,ADDR)
   GOSUB DOPALEDIT
   CLS:GOSUB CLRBLOCK:GOTO STARTEDIT
DOKEYS1:
   IF K=27 AND NOT SM% THEN K=133
   IF K=27 THEN GOSUB CLEANUP
   IF K>=49 AND K<=51 THEN CH=VAL(X$):GOTO STARTEDIT
   IF K=133 THEN SM%=NOT SM%
   IF K=133 AND NOT SM% THEN GOSUB POPPALCOLOR
   IF K=133 AND SM% THEN GOSUB POPUICOLOR
   IF K=133 THEN GOTO STARTEDIT
   IF K=145 OR K=29 THEN CH=CH-1:SM%=-1
   IF K=157 OR K=17 THEN CH=CH+1:SM%=-1
   IF CH<1 THEN CH=3:SM%=-1
   IF CH>3 THEN CH=1:SM%=-1
   IF K=13 THEN IF SM% THEN DOCHOICE
   GOTO STARTEDIT
DOCHOICE:
   COLOR 1,11
   IF CH=1 THEN GOSUB GETPALFILE:GOSUB SHOWNAME:GOTO STARTEDIT
   IF CH=2 THEN GOSUB SAVEPALFILE:GOSUB SHOWNAME:PAL.IS.CHANGED=0:GOTO STARTEDIT
   IF CH=2 THEN STARTEDIT
   IF CH=3 THEN GOSUB PALEDITOR
   IF CH=3 THEN STARTEDIT




FLUSHGET:
   GET X$:IF X$ <> "" THEN FLUSHGET
GETAKEY:
   GET X$:IF X$="" THEN GETAKEY
   RETURN

WAITWHEEL:
  IF MWHEEL <> 0 THEN WAITWHEEL
  RETURN

WAITBUTTON:
  IF MB<>0 THEN WAITBUTTON


CHECKSAVE:
  COLOR 1,11:YD%=0
  X=3:Y=26:W=37:H=4
  GOSUB TEXTBOX
  LOCATE 27,5:PRINT "CURRENT PALETTE IS CHANGED !"
  LOCATE 28,5:PRINT "SAVE PALETTE: ";:COLOR 11,1:PRINT " Y/N ";
  GOSUB GETYN
  IF YD% THEN GOSUB SAVEPALFILE
  RETURN


PALEDITOR:
   PC=1
STARTEDITOR:
   LOCATE 30,1:PRINT RPT$(32,38);
   X=23:Y=18:W=16:H=10
   GOSUB TEXTBOX:GOSUB EDITORBOX
   COLOR 1,11
   LOCATE 19,24:PRINT "SELECT";
   LOCATE 20,24:PRINT "INDX: ";
   COLOR 11,1
   LOCATE 22,27
   PRINT "<-";:COLOR 1,11:PRINT " ";
   COLOR 11,1:PRINT "->";
   LOCATE 25,24:PRINT "<ENTER>";:COLOR 1,11:PRINT "-CHOOSE"
   COLOR 11,1:LOCATE 26,26:PRINT"<ESC>";:COLOR 1,11:PRINT "-ABORT"
SHOWINDX:
   COLOR 11,1
   LOCATE 20,30:PRINT "   ";
   LOCATE 20,30:PRINT "$";HEX$(PI%);
   WP%=PI%
   GOSUB PBLOCK
WKEY:
   GET X$:WHEEL=MWHEEL:GMB=MB:IF X$="" AND WHEEL=0 AND GMB=0 THEN WKEY
   IF GMB=1 OR WHEEL<0 THEN X$=CHR$(145):IF MWHEEL<>0 THEN GOSUB WAITWHEEL
   IF GMB=2 OR WHEEL>0 THEN X$=CHR$(17):IF MWHEEL<>0 THEN GOSUB WAITWHEEL
   IF GMB>2 THEN X$="{CR}"
WAITMOUSERELEASE:
   K=ASC(X$):IF MB>0 THEN WAITMOUSERELEASE
   IF K>=48 AND K<=57 THEN GOSUB GETHEXNUM
   IF K>=65 AND K<=70 THEN GOSUB GETHEXNUM
   IF K=145 OR K=29 THEN PI%=PI%+1:IF PI%>255 THEN PI%=0
   IF K=17 OR K=157 THEN PI%=PI%-1:IF PI%<0 THEN PI%=255
   IF K>=65 AND K<=70 THEN GOSUB GETHEXNUM
   IF K=13 THEN GOSUB DOPALEDIT:IF NOT CJ THEN STARTEDITOR
   IF K=13 AND CJ THEN K=27
   IF K<> 27 THEN SHOWINDX
   COLOR 1,0:CLS:GOTO CLRBLOCK


GETHEXNUM:
  BC=1:CC$="$"+CHR$(K)
  LOCATE 20,30:PRINT "   ";
  LOCATE 20,30:PRINT CC$;CR$;
NEXTHEX:
  GET X$:BC=BC+1
  IF BC/16 = INT(BC/16) THEN LOCATE 20,32:PRINT " ";
  IF BC/48 = INT(BC/48) THEN LOCATE 20,32:PRINT "-";
  IF BC>4096 THEN BC=1
  IF X$="" THEN NEXTHEX:
  K=ASC(X$)
  IF (K>=65 AND K<=70) OR (K>=48 AND K<=57) THEN CC$=CC$+CHR$(K):PI%=VAL(CC$):K=0:RETURN
  IF K=17 OR K=157 OR K=145 OR K=29 OR K=27 THEN K=0:RETURN
  IF LEN(CC$)=2 AND K=13 THEN PI%=VAL(CC$):K=0:RETURN
  GOTO NEXTHEX


DOPALEDIT:
  WP%=PI%
  IF WP%<>1 AND WP%<>11 THEN DOTHIS
  GOSUB PUSHFF
  GOSUB POPPALCOLOR
  P1=WP%:P2=$FF:GOSUB COPYPAL:WP%=$FF
  GOSUB POPUICOLOR
DOTHIS:
  GOSUB POPUPENTRY
  GOSUB PBLOCK
  GOSUB EDITORBOX
  P1=WP%:PE=1:CJ=0
  GOSUB READPAL
  SR%=R%:SG%=G%:SB%=B%
  COLOR 11,1
  LOCATE 23,25:PRINT "<UP>";
  LOCATE 24,24:PRINT "<-  ->";
  LOCATE 25,25:PRINT "<DN>";
  COLOR 1,11
  LOCATE 19,24:PRINT "RED: ";"$";RIGHT$(HEX$(R%),1);
  LOCATE 20,24:PRINT "GRN: ";"$";RIGHT$(HEX$(G%),1);
  LOCATE 21,24:PRINT "BLU: ";"$";RIGHT$(HEX$(B%),1);
  LOCATE 26,30:PRINT "INDX:$";HEX$(PI%);
  GOSUB KEYBOX
  GOSUB PBLOCK
  IF PI%<>1 AND PI%<>11 THEN DOIT
  COLOR 1,11
  H=4:W=23:X=2:Y=26:COLOR 1,11:GOSUB TEXTBOX
  LOCATE 27,3:PRINT "EDITING U.I. INDX:";:COLOR 11,1:PRINT "$";HEX$(PI%);
  LOCATE 28,3:PRINT "$FF";:COLOR 1,11:PRINT " USED AS SCRATCH  ";

DOIT:
  COLOR 11,1
  IF PE=1 THEN X$=RIGHT$(HEX$(R%),1)
  IF PE=2 THEN X$=RIGHT$(HEX$(G%),1)
  IF PE=3 THEN X$=RIGHT$(HEX$(B%),1)
  LOCATE PE+18,29:PRINT "$";X$;
WAITK:
  GET X$:WHEEL=MWHEEL:GMB=MB:IF X$="" AND GMB=0 AND WHEEL=0 THEN WAITK
   IF WHEEL<0 THEN GOSUB WAITWHEEL:X$=CHR$(145)
   IF WHEEL>0 THEN GOSUB WAITWHEEL:X$=CHR$(17)
   IF GMB=1 THEN X$=CHR$(157)
   IF GMB=2 THEN X$=CHR$(29)
   IF MB>2 THEN X$="{CR}"
WAITMOUSERELEASE2:
   IF MB>0 THEN WAITMOUSERELEASE2
  K=ASC(X$)
  COLOR 1,11
  IF PE=1 THEN X$=RIGHT$(HEX$(R%),1)
  IF PE=2 THEN X$=RIGHT$(HEX$(G%),1)
  IF PE=3 THEN X$=RIGHT$(HEX$(B%),1)
  LOCATE PE+18,29:PRINT "$";X$;
  IF K=157 THEN GOSUB DECPAL
  IF K=29 THEN GOSUB INCPAL
  IF K>=48 AND K<=57 THEN GOSUB DIRECTENTRY
  IF K>=65 AND K<=70 THEN GOSUB DIRECTENTRY
  IF K=17 OR K=145 THEN GOSUB CPAL
  IF K=27 THEN GOSUB RSAVED
  IF (K=13) AND CJ THEN SF%=-1
  IF K=13 OR K=27 THEN DONEPEDIT
  GOTO DOIT
DONEPEDIT:
  IF PI%<>1 AND PI%<>11 THEN SKIPPOP
  GOSUB POPPALCOLOR
  P1=$FF:P2=PI%:GOSUB COPYPAL
  GOSUB PUSHPALCOL
  GOSUB POPUICOLOR
  GOSUB POPFF
  WP%=PI%
SKIPPOP:
  SVF$=F$:F$="UNDER.DAT"
  PUTIMAGE=-1:GOSUB BITBLT:F$=SVF$
  GOSUB CLRBTMSCREEN:CLEAR=-1:GOSUB KEYBOX:CLEAR=FALSE
  RETURN

RSAVED:
  R%=SR%:G%=SG%:B%=SB%
  GOSUB RGBPAL
  RETURN

CPAL:
   IF K=145 THEN PE=PE-1:IF PE<1 THEN PE=3
   IF K=17 THEN PE=PE+1:IF PE>3 THEN PE=1
   RETURN

DIRECTENTRY:
   DC=48
   IF K>= 65 THEN DC=55
   IF PE=1 THEN R%=K-DC
   IF PE=2 THEN G%=K-DC
   IF PE=3 THEN B%=K-DC
   GOSUB RGBPAL
   CJ=-1
   RETURN

INCPAL:
   IF PE=1 THEN R%=R%+1:IF R%>15 THEN R%=0
   IF PE=2 THEN G%=G%+1:IF G%>15 THEN G%=0
   IF PE=3 THEN B%=B%+1:IF B%>15 THEN B%=0
   GOSUB RGBPAL
   CJ=-1:PAL.IS.CHANGED=-1
   RETURN

DECPAL:
   IF PE=1 THEN R%=R%-1:IF R%<0 THEN R%=$F
   IF PE=2 THEN G%=G%-1:IF G%<0 THEN G%=$F
   IF PE=3 THEN B%=B%-1:IF B%<0 THEN B%=$F
   GOSUB RGBPAL
   CJ=-1:PAL.IS.CHANGED=CJ
   RETURN

SHOWNAME:
  COLOR 1,0
  LOCATE 1,23:PRINT "<PAL FILE>";
  COLOR 1,11
  LOCATE 2,23:PRINT F$;
  COLOR 1,0
  RETURN

KEYBOX:
   COLOR 1,11
   IF CLEAR THEN COLOR 0,0
   X=23:Y=14:W=16:H=4
   GOSUB TEXTBOX
   IF NOT CLEAR THEN COLOR 11,1
   LOCATE 15,24:PRINT "<ENTER>";
   IF NOT CLEAR THEN COLOR 1,11
   PRINT "-COMMIT";
   LOCATE 16,25:PRINT"<ESC>";
   IF NOT CLEAR THEN COLOR 1,11
   PRINT "-ABORT";
   COLOR 1,0
   RETURN

EDITORBOX:
   COLOR 1,11
   X=23:Y=18:W=16:H=10
   GOSUB TEXTBOX
   COLOR 1,0
   LOCATE 19,34:PRINT RPT$(32,4);
   LOCATE 20,34:PRINT RPT$(32,4);
   LOCATE 21,34:PRINT RPT$(32,4);
   COLOR 1,11
   GOSUB PBLOCK
   RETURN

PBLOCK:
   RECT  264,144,295,167, WP%
   FRAME 264,144,295,167, 1
   RETURN

CLRBLOCK:
   RECT 264,144,295,167,$10:RETURN

GETPALFILE:
   IF PAL.IS.CHANGED THEN GOSUB CHECKSAVE
   GOSUB GETFILENAME
   GOSUB CLRBTMSCREEN
LOADPALFILE:
   GOSUB PUSHUICOLOR
   IF F$="" THEN FMDRUM 7,87
   IF F$="" OR F$=CHR$(27) THEN COLOR 1,0:CLS:RETURN
   GOSUB FILEEXISTS
   IF FE% THEN CLS:CF$=F$:BVLOAD F$,8,1,$FA00:GOSUB PUSHPALCOL:GOSUB POPUICOLOR:PAL.IS.CHANGED=0:RETURN
   FMDRUM 7,87:SLEEP 15:FMDRUM 7,85
   LOCATE 2,2:COLOR 1,11:PRINT " ";F$;" DOESN'T EXIST "
   SLEEP 180:COLOR 1,0:CLS:RETURN

CLEANUP:
  IF PAL.IS.CHANGED THEN GOSUB CHECKSAVE
  IF NOT FROM.MENU THEN SKIPTOEND
  DOS "CD:.."
  LOAD "CONFMENU.PRG"
SKIPTOEND:
  COLOR 1,0:CLS
  GOSUB SETDEFPAL
  SCREEN 1
  PRINT:PRINT "DONE":PRINT:PRINT
  END

SAVEPALFILE:
      COLOR 1,11
      GOSUB GETFILENAME
      IF F$="" OR F$=CHR$(27) THEN FMDRUM 7,87:COLOR 1,0:CLS:RETURN
      GOSUB CLRBTMSCREEN
      COLOR 1,11
      CF$=F$
      LOCATE 2,2:PRINT " SAVING: ";F$;" ";
PALEXISTS:
      GOSUB FILEEXISTS
      YD%=NOT FE%
      IF FE% THEN GOSUB CONFIRMSAV
      IF YD% THEN GOSUB POPPALCOLOR
      IF YD% THEN GOSUB SAVEPAL2FILE:PAL.IS.CHANGED=0
      GOSUB POPUICOLOR
      COLOR 1,0:CLS:RETURN

CONFIRMSAV:
   COLOR 1,11:YD%=0
   X=3:Y=27:W=37:H=3
   GOSUB TEXTBOX
   LOCATE 28,5:PRINT "OVERWRITE: ";F$;" ";:COLOR 11,1:PRINT " Y/N ";
   GOSUB GETYN
   RETURN

GETYN:
   GOSUB FLUSHKEYS
GETYNGET:
   GET X$:IF X$="" THEN GETYNGET
   IF X$="Y" OR X$="N" THEN YNDONE
   FMDRUM 7,87:GOTO GETYNGET
YNDONE:
   YD% = (X$="Y"):GOSUB CLRBTMSCREEN:RETURN

DISPLAYPAL2:
   F$="PALSCREEN.DAT":GOSUB FILEEXISTS
   IF FE% THEN BVLOAD F$,8,0,0:RETURN
   C=0:TC=1
   FOR Y = 0 TO 150 STEP 10
     FOR X = 0 TO 150 STEP 10
        RECT X+9, Y+9, X+18, Y+18, C
        C = C + 1
      NEXT X
    NEXT Y
    GOSUB DRAWAXIS
    IF NOT GLYPH THEN SKIPDRAWGLYPH
    CC=1:
    FOR X=1 TO 2
      FRAME GLYPH.X1-X,GLYPH.Y1-X,GLYPH.X2+X,GLYPH.Y2+X,CC
      CC=11
   NEXT X
    PUTIMAGE=TRUE:X1=GLYPH.X1:Y1=GLYPH.Y1:F$=GLYPH$
    GOSUB BITBLT
SKIPDRAWGLYPH:
    F$="PALSCREEN.DAT":GOSUB SAVESCREEN
   RETURN


SETUPGLYPH:
  BLITWIDTH=80
  BLITLINES=60
  GLYPH.X1=205
  GLYPH.Y1=30
  I$="GLYPHWIDTH":GOSUB GETINIVALUE:IF I$<>"" THEN BLITWIDTH=VAL(I$)
  I$="GLYPHHEIGHT":GOSUB GETINIVALUE:IF I$<>"" THEN BLITLINES=VAL(I$)
  I$="GLYPHX":GOSUB GETINIVALUE:IF I$<>"" THEN GLYPH.X1=VAL(I$)
  I$="GLYPHY":GOSUB GETINIVALUE:IF I$<>"" THEN GLYPH.Y1=VAL(I$)
  GLYPH.X2=GLYPH.X1+BLITWIDTH-1:GLYPH.Y2=GLYPH.Y1+BLITLINES-1
  RETURN


POPUPENTRY:
  XVAL=(PI% AND $0F)
  YVAL=(PI% AND $F0)
  X1=XVAL*10+9
  Y1=INT(PI%/16)*10 + 9
  X2=X1+20
  Y2=Y1+20
  IF XVAL=$F THEN X1=X1-11:X2=X2-11
  IF YVAL=$F0 THEN Y1=Y1-10:Y2=Y2-10
  SVF$=F$
  F$="UNDER.DAT":PUTIMAGE=0:GOSUB BITBLT
  F$=SVF$
  RECT X1,Y1,X2,Y2,WP%
  FRAME X1,Y1,X2,Y2, 11
  C$="$"+HEX$(WP%)
  P1=WP%:GOSUB READPAL
  C=1
  IF B%>13 OR G%>13 OR R%>13 THEN C=11:GOTO DOCHAR
  TOTAL = R% + G% + B%:AVG = TOTAL/3
  IF AVG > 10 THEN C=11
DOCHAR:
  CHAR X1+1,Y1+13,C,C$
  RETURN

DRAWAXIS:
  C=0
  FOR X=0 TO 150 STEP 10
      C$=RIGHT$(HEX$(C),1)
      CHAR X+10,7,1,C$
      C=C+1
  NEXT X
  C=0
  FOR Y= O TO 150 STEP 10
      C$=RIGHT$(HEX$(C),1)
      CHAR 0,Y+16,1,C$
      C=C+1
  NEXT Y
  RETURN

PALMENU:
   IF SM% THEN COLOR 1,11
   IF SM% THEN GOTO SKIP2
   COLOR 0,0:CLS:RECT 2,171,318,238,$10:RETURN
SKIP2:
   RECT 4,172,198,218,11
   FRAME 3,171,199,219,1
   Y=23
   FOR I=1 TO 3
       LOCATE Y,2:PRINT CH$(I);
       Y=Y+2
   NEXT I
   IF SM% THEN COLOR 11,1
   ON CH GOTO C1,C2,C3
C1:
   LOCATE 23,2:PRINT CH$(1);:GOTO PMENUEND
C2:
   LOCATE 25,2:PRINT CH$(2);:GOTO PMENUEND
C3:
   LOCATE 27,2:PRINT CH$(3);
PMENUEND:
   LOCATE 29,4
   IF SM% THEN COLOR 11,1:PRINT "<ENTER>";:COLOR 1,11:PRINT " - CHOOSE";
   LOCATE 30,6
   IF SM% THEN COLOR 11,1:PRINT "<ESC>";:COLOR 1,11:PRINT " - EXIT";
   LOCATE 30,25
   IF SM% THEN COLOR 11,1:PRINT "<F1>";:COLOR 1,11:PRINT "-SHOW PAL";
   IF SM% THEN COLOR 1,0
   RETURN


GETFILENAME:
   COLOR 1,0:CLS
   COLOR 1,11
   X=3:Y=25:W=35:H=3
   LOCATE 24,4:PRINT " ENTER FILENAME: ";
   GOSUB TEXTBOX
   IT=3:ML=32:IX=4:IY=26:GOSUB STRINGGET
   F$=IS$
   RETURN

CLRBTMSCREEN:
   COLOR 1,0
   FOR X = 0 TO 6:LOCATE 23+X,1:PRINT RPT$(32,40);:NEXT X
   LOCATE 30,1:PRINT RPT$(32,39);
   RETURN


TEXTBOX:
     LOCATE Y,X
     PRINT CHR$($6F);RPT$($A3,W-2);CHR$($70);
     IF H=2 THEN SKIPMID
     FOR II = 1 TO H-2
         LOCATE Y+II,X:PRINT CHR$($A5);RPT$(32,W-2);CHR$($A7);
     NEXT II
SKIPMID:
     LOCATE Y+H-1,X:PRINT CHR$($6C);RPT$($A4,W-2);CHR$($BA);
     RETURN

REM PUSHES INDX P1
PUSHINDXCOL:
    GOSUB READPAL
    IR%=R%:IG%=G%:IB%=B%
    RETURN

REM POPS INDX P1
POPINDXCOL:
    R%=IR%:G%=IG%:B%=IB%
    GOSUB RGBPAL
    RETURN

PUSHFF:
   P3=P1
   P1=$FF
   GOSUB READPAL
   FR%=R%:FG%=G%:FB%=B%
   P1=P3
   RETURN

POPFF:
   P3=P1
   P1=$FF
   R%=FR%:G%=FG%:B%=FB%
   GOSUB RGBPAL
   P1=P3
   RETURN

PUSHUICOLOR:
    P1=1:GOSUB READPAL
    TR%=R%:TG%=G%:TB%=B%
    P1=11:GOSUB READPAL
    BR%=R%:BG%=G%:BB%=B%
    RETURN

POPUICOLOR:
   P1=1:R%=TR%:G%=TG%:B%=TB%:GOSUB RGBPAL
   P1=11:R%=BR%:G%=BG%:B%=BB%:GOSUB RGBPAL
   RETURN

PUSHPALCOL:
    P1=1:GOSUB READPAL
    R1%=R%:G1%=G%:B1%=B%
    P1=11:GOSUB READPAL
    R2%=R%:G2%=G%:B2%=B%
    RETURN

POPPALCOLOR:
   P1=1:R%=R1%:G%=G1%:B%=B1%:GOSUB RGBPAL
   P1=11:R%=R2%:G%=G2%:B%=B2%:GOSUB RGBPAL
   RETURN

REM SET OF GOSUBS FOR DIRECT VERA PALLETTE MANIPULATION
REM USES VPOKE & VPEEK
REM FOR THE OTHER ROUTINES TO WORK RELIABLY SHOULD GOSUB 45000
REM FIRST.    ALSO GOSUB 45000 IS USED AT ANY TIME TO RESET
REM THE VERA PALLETTE TO DEFAULT VALUES.
REM ..
REM ...
REM WHEN THE VERA IS INITIALLY SET TO GRAPHICS MODE IT USES THE
REM DEFAULT PALLETTE BUT IF YOU USE VPEEK TO READ IT RETURNS
REM RANDOM GARBAGE...    AFTER YOU VPOKE THEM IT ALL WORKS
REM AS EXPECTED.
REM .
REM ..
REM ...
REM THIS CODE DOES ABSOLUTELY NO ERROR CHECKING !!!!!!
REM IF USING R%,G% OR B% VALUES SHOULD ALWAYS BE BETWEEN
REM 0-15
REM .
REM ..
REM ...
REM WHEN USING P1 AND P2 TO POINT AT PALLETTE ENTRYS THEY SHOULD
REM ALWAYS BE BETWEEN 0 AND 255
REM I HAD ERROR CHECKING CODE WHEN WRITING THESE ROUTINES
REM BUT ERROR CHECKING TAKES CPU CYCLES....   JUST KEEP THE VALUES
REM CORRECT BEFORE CALLING.
REM .
REM ..
REM ..
REM GOSUB SETDEFPAL..   POKES IN THE DEFAULT PALLETTE VALUES
REM                 SHOULD BE CALLED AT INIT.   AND THEN ANY TIME
REM                 TO RESET THE VERA TO DEFAULT VALUES
REM ..
REM GOSUB RGBPAL..   SETS PALLETTE ENTRY P1 TO R%,G%,B%
REM ..
REM GOSUB READPAL..   READS VALUES AT P1 RETURNS IN R%,G%,B%
REM ..
REM GOSUB PAL2PALFADE..   CHANGES THE PALLETTE COLOR P2 TO P1. BUT DIFFERENT THAN 41000
REM                       41000 CHANGES IT FAST.   40200 IMPLEMENTS A FADE WITH SPEED
REM                       CONTROLLED BY THE VALUE OF J (BIGGER VALUE=SLOWER)
REM                       ACTUALLY MOST OF THE WORK DONE BY GOSUB TO 40300
REM ..
REM GOSUB PALFADE   FADES PALLETTE COLOR AT P1 TO R%,G%,B%
REM                 SPEED CONTROLLED BY THE VALUE OF J.    1 TO 10
REM                 IS SO FAR BEST FOR ME BUT I DIDN'T RESTRICT VALUES
REM                 THE BIGGER J IS.. THE SLOWER THE FADE.
REM ..
REM GOSUB SWAPPAL     SWAPS THE PALLETTE VALUES BETWEEN P1 AND P2
REM                   IF AND ITS A BIG IF...  I MAKE FURTHER CHANGES
REM                   THE NEXT ROUTINE I MAKE WILL BE TO DO THIS AS A
REM                  ..FADE.. USING A SIMILIAR ALGORITHM I USED IN GOSUB 40300
REM ..
REM GOSUB COPYPAL   COPYS PALLETTE ENTRY P1 TO P2.   P1 IS UNCHANGED
REM ..
REM ..
REM GOSUB PAL2BLACK ... SETS THE PALLETTE TO ALL BLACK.   ABOUT THE RIGHT SPEED FOR A FADE SCREEN

REM SET PALLETTE ENTRY P1 TO R%,G%,B%
RGBPAL:
      A=P1*2:GB%=(G%*16)+B%
      A=A+$FA00
      SLEEP:VPOKE 1,A,GB%
      A=A+1
      SLEEP:VPOKE 1,A,R%
      RETURN

REM READ PALLETTE ENTRY AT P1
READPAL:
      A1=$FA00+(P1*2)
      R%=VPEEK(1,A1+1)
      GB%=VPEEK(1,A1)
      G%=GB%/16
      B%=GB% AND $0F
      RETURN

REM FADE P2 FROM CURRENT COLOR TO P1 COLOR, J IS JIFFY DELAY
PAL2PALFADE:
      GOSUB READPAL
      P3=P1:P1=P2
      GOSUB PALFADE
      P1=P3
      RETURN

REM FADE P1 TO R%,G%,B%, J IS JIFFY DELAY
PALFADE:
      DR%=R%:DG%=G%:DB%=B%
      GOSUB READPAL
      RI=1:IF DR%<R% THEN RI=-1
      GI=1:IF DG%<G% THEN GI=-1
      BI=1:IF DB%<B% THEN BI=-1
INCRGB:
      IF DR%<>R% THEN R%=R%+RI
      IF DG%<>G% THEN G%=G%+GI
      IF DB%<>B% THEN B%=B%+BI
      GOSUB RGBPAL
      SLEEP J
      IF DR%=R% AND DG%=G% AND DB%=B% THEN FADEDONE
      GOTO INCRGB
FADEDONE:
      RETURN

REM SWAP PALLETTE COLORS AT P1 & P2
SWAPPAL:
      A1=$FA00+(P1*2):A2=$FA00+(P2*2)
      B1=VPEEK(1,A1):B2=VPEEK(1,A1+1):B3=VPEEK(1,A2):B4=VPEEK(1,A2+1)
      VPOKE 1,A1,B3:VPOKE 1,A1+1, B4
      VPOKE 1,A2,B1:VPOKE 1,A2+1, B2
      RETURN

REM COPY P1 PALLETTE ENTRY TO P2.. P1 IS LEFT UNCHANGED.
COPYPAL:
      VPOKE 1,$FA00+(P2*2),VPEEK(1,$FA00+(P1*2))
      VPOKE 1,$FA00+(P2*2)+1,VPEEK(1,$FA00+(P1*2)+1)
      RETURN

REM SET THE PALLETTE TO ALL BLACK
PAL2BLACK:
    FOR A=$FA00 TO $FBFF:VPOKE 1,A,0:NEXT A:RETURN

REM SET THE VERA DEFAULT PALETTE USE FILE LOAD IF THERE.
SETDEFPAL:
      F$="DPAL.BIN":GOSUB FILEEXISTS
      IF FE% THEN BVLOAD "DPAL.BIN",8,1,$FA00:RETURN
      RESTORE PALDATA
REM LOOP THROUGH THE PALLETTE ADDRESS SPACE
REM AND POKE THE VERA DEFAULT PALLETTE
      FOR PE = $FA00 TO $FBFE STEP 2
          READ R:READ GB
          VPOKE 1,PE,GB
          VPOKE 1,PE+1, R
      NEXT PE
      RETURN

REM DEFAULT VERA PALLETTE AS DATA. FROM 0 TO 255 (2 BYTES EACH ENTRY)RGB
PALDATA:
    DATA $00,$00,$0F,$FF,$08,$00,$0A,$FE,$0C,$4C,$00,$C5,$00,$0A,$0E,$E7,$0D
    DATA $85,$06,$40,$0F,$77,$03,$33,$07,$77,$0A,$F6,$00,$8F,$0B,$BB,$00,$00
    DATA $01,$11,$02,$22,$03,$33,$04,$44,$05,$55,$06,$66,$07,$77,$08,$88,$09
    DATA $99,$0A,$AA,$0B,$BB,$0C,$CC,$0D,$DD,$0E,$EE,$0F,$FF,$02,$11,$04,$33
    DATA $06,$44,$08,$66,$0A,$88,$0C,$99,$0F,$BB,$02,$11,$04,$22,$06,$33,$08
    DATA $44,$0A,$55,$0C,$66,$0F,$77,$02,$00,$04,$11,$06,$11,$08,$22,$0A,$22
    DATA $0C,$33,$0F,$33,$02,$00,$04,$00,$06,$00,$08,$00,$0A,$00,$0C,$00,$0F
    DATA $00,$02,$21,$04,$43,$06,$64,$08,$86,$0A,$A8,$0C,$C9,$0F,$EB,$02,$11
    DATA $04,$32,$06,$53,$08,$74,$0A,$95,$0C,$B6,$0F,$D7,$02,$10,$04,$31,$06
    DATA $51,$08,$62,$0A,$82,$0C,$A3,$0F,$C3,$02,$10,$04,$30,$06,$40,$08,$60
    DATA $0A,$80,$0C,$90,$0F,$B0,$01,$21,$03,$43,$05,$64,$07,$86,$09,$A8,$0B
    DATA $C9,$0D,$FB,$01,$21,$03,$42,$04,$63,$06,$84,$08,$A5,$09,$C6,$0B,$F7
    DATA $01,$20,$02,$41,$04,$61,$05,$82,$06,$A2,$08,$C3,$09,$F3,$01,$20,$02
    DATA $40,$03,$60,$04,$80,$05,$A0,$06,$C0,$07,$F0,$01,$21,$03,$43,$04,$65
    DATA $06,$86,$08,$A8,$09,$CA,$0B,$FC,$01,$21,$02,$42,$03,$64,$04,$85,$05
    DATA $A6,$06,$C8,$07,$F9,$00,$20,$01,$41,$01,$62,$02,$83,$02,$A4,$03,$C5
    DATA $03,$F6,$00,$20,$00,$41,$00,$61,$00,$82,$00,$A2,$00,$C3,$00,$F3,$01
    DATA $22,$03,$44,$04,$66,$06,$88,$08,$AA,$09,$CC,$0B,$FF,$01,$22,$02,$44
    DATA $03,$66,$04,$88,$05,$AA,$06,$CC,$07,$FF,$00,$22,$01,$44,$01,$66,$02
    DATA $88,$02,$AA,$03,$CC,$03,$FF,$00,$22,$00,$44,$00,$66,$00,$88,$00,$AA
    DATA $00,$CC,$00,$FF,$01,$12,$03,$34,$04,$56,$06,$68,$08,$8A,$09,$AC,$0B
    DATA $CF,$01,$12,$02,$24,$03,$46,$04,$58,$05,$6A,$06,$8C,$07,$9F,$00,$02
    DATA $01,$14,$01,$26,$02,$38,$02,$4A,$03,$5C,$03,$6F,$00,$02,$00,$14,$00
    DATA $16,$00,$28,$00,$2A,$00,$3C,$00,$3F,$01,$12,$03,$34,$05,$46,$07,$68
    DATA $09,$8A,$0B,$9C,$0D,$BF,$01,$12,$03,$24,$04,$36,$06,$48,$08,$5A,$09
    DATA $6C,$0B,$7F,$01,$02,$02,$14,$04,$16,$05,$28,$06,$2A,$08,$3C,$09,$3F
    DATA $01,$02,$02,$04,$03,$06,$04,$08,$05,$0A,$06,$0C,$07,$0F,$02,$12,$04
    DATA $34,$06,$46,$08,$68,$0A,$8A,$0C,$9C,$0F,$BE,$02,$11,$04,$23,$06,$35
    DATA $08,$47,$0A,$59,$0C,$6B,$0F,$7D,$02,$01,$04,$13,$06,$15,$08,$26,$0A
    DATA $28,$0C,$3A,$0F,$3C,$02,$01,$04,$03,$06,$04,$08,$06,$0A,$08,$0C,$09
    DATA $0F,$0B


REM CALL WITH F$=DESIRED FILENAME
REM WILL BE OVERWRITTEN IF IT ALREADY EXISTS
SAVEPAL2FILE:
     FF$="@:"+F$+",S,W"
     OPEN 5,8,2,FF$
     FOR PE=$FA00 TO $FBFE STEP 2
         GB=VPEEK(1,PE)
          R=VPEEK(1,PE+1)
         PRINT#5,CHR$(GB);
         PRINT#5,CHR$(R);
     NEXT PE
     CLOSE 5
     RETURN

SAVESCREEN:
  FF$="@:"+F$ + ",P,W"
  OPEN 2,8,2,FF$
  POKE $30C,2
  POKE $9F25,0
  POKE $9F20,0
  POKE $9F21,0
  POKE $9F22,$10
  SYS $700:CLOSE 2:RETURN

POKEBVSAVE:
   RESTORE BVSAVE
   FOR A = $700 TO $74A
     READ I
     POKE A, I
   NEXT A
   RETURN

BVSAVE:
   DATA $AA,$20,$C9,$FF,$9C,$4B,$07,$A9,$2C,$8D,$4C,$07,$A9,$01,$8D,$4D,$07,$A2
   DATA $23,$A0,$9F,$AD,$4B,$07,$38,$20,$B1,$FE,$B0,$29,$8E,$4E,$07,$AD,$4B,$07
   DATA $38,$ED,$4E,$07,$8D,$4B,$07,$AD,$4C,$07,$8C,$4E,$07,$ED,$4E,$07,$8D,$4C
   DATA $07,$AD,$4D,$07,$E9,$00,$8D,$4D,$07,$0D,$4B,$07,$0D,$4C,$07,$D0,$CA,$20
   DATA $CC,$FF,$60

GETINIVALUE:
   I=1
GETILOOP:
   IF NN$(I)=I$ THEN I$=NV$(I):RETURN
   I=I+1:IF I>NV% THEN I$="":RETURN
   GOTO GETILOOP

READINI:
  NV%=0:FV%=0
  GOSUB FILEEXISTS:IF NOT FE% THEN RETURN
  FF$=F$+ ",S,R":OPEN 4,8,4,FF$
  DOINILOOP:
    LINPUT#4, S$
    IF LEFT$(S$,2)="##" THEN CONTLOOP
    IF LEFT$(S$,3)="REM" THEN CONTLOOP
    GOSUB TRIM:GOSUB UCASE
    IF LEFT$(S$,4)="REM " OR LEFT$(S$,2)="##" OR S$="" OR S$="REM" OR S$="##" THEN CONTLOOP
    PRINT ".";
    GOSUB GETINIVAR
    IF TN$="" THEN CONTLOOP
    IF TV$="ON" OR TV$="YES" THEN TV$="1"
    IF TV$="OFF" OR TV$="NO" THEN TV$="0"
    NV%=NV%+1:NN$(NV%)=TN$:NV$(NV%)=TV$
  CONTLOOP:
  IF ST=0 AND NV%<10 THEN DOINILOOP
  CLOSE 4:FV%=(NV%>0):PRINT:RETURN

GETINIVAR:
  SC$="":TN$="":TV$="":J=1
DOINIPARSE:
  X$=MID$(S$,J,1):IF X$="=" THEN GOTINI
  SC$=SC$+X$:J=J+1:IF J>LEN(S$) THEN ENDINI
  GOTO DOINIPARSE
GOTINI:
  J=J+1:TT$=S$:S$=SC$:SC$=""
  GOSUB RTRIM:TN$=S$:S$=TT$
VALUEPARSE:
  X$=MID$(S$,J,1):SC$=SC$+X$
  J=J+1:IF J>LEN(S$) THEN ENDINI
  GOTO VALUEPARSE
ENDINI:
  TT$=S$:S$=SC$:GOSUB TRIM:TV$=S$:S$=TT$:RETURN

REM SET F$ TO FILENAME:GOSUB FILEEXISTS,FE% IS -1 IF FILE IS THERE.
FILEEXISTS:
      X$=F$:FE%=0:X$=X$+",S,R"
      OPEN 2,8,2,X$
      CLOSE 2
      OPEN 15,8,15
      INPUT#15,X,X$,V,Z
      CLOSE 15
      FE%=(X<=20)
      RETURN

UCASE:
  IF S$="" THEN RETURN
  X$="":FOR I=1 TO LEN(S$):I$=MID$(S$,I,1):X=ASC(I$):IF X>=97 AND X<=122 THEN X=X-32
  X$=X$+CHR$(X):NEXT I:S$=X$:RETURN

TRIM:
  GOSUB LTRIM:GOTO RTRIM

LTRIM:
   IF S$="" THEN RETURN
   I=1:CC=0
DOLOOPT:
   X$=MID$(S$,I,1):X=ASC(X$):IF X > 32 THEN SKIPTRIMLOOP
   CC=CC+1:I=I+1:IF I>LEN(S$) THEN SKIPTRIMLOOP
   GOTO DOLOOPT
SKIPTRIMLOOP:
   IF CC=LEN(S$) THEN S$=""
   IF CC>0 AND CC<LEN(S$) THEN S$=MID$(S$,CC+1,LEN(S$)-CC)
   RETURN

RTRIM:
    IF S$="" THEN RETURN
    Z=LEN(S$):CC=0
DOLOOPR:
    T$=MID$(S$,Z,1)
    X=ASC(T$)
    IF X > 32 THEN RSTR
    CC=CC+1
    Z=Z-1
    IF Z<1 THEN RSTR
    GOTO DOLOOPR
RSTR:
    IF CC=LEN(S$) THEN S$=""
    IF CC>0 AND CC<LEN(S$) THEN S$=MID$(S$,1,LEN(S$)-CC)
    RETURN




REM IY    LOCATE Y LOCATION
REM IX    LOCATE X LOCATION
REM ML    MAX LENGTH OF STRING TO GET (1 TO 80)
REM IT    TYPE OF INPUT 1=ALPHA ONLY, 2=NUMERIC(INCLUDE 1 AND ONLY 1 DECIMAL
REM                                                                  POINT)
REM                     3=ALPHANUMERIC, 4=LINE INPUT(CAN INCLUDE SPACE AND
REM                                                  TAB AND PUNCTUATION MARKS)
REM IS$   THE STRING TO RETURN
REM AC    ADD CHAR 1=YES
REM ID    DECIMAL DONE 1=YES
STRINGGET:
     GET X$:IF X$<>"" THEN STRINGGET
     IS$="":ID=0
     GOSUB AREACLR:IF IS$="" THEN PRINT CHR$(95);
     IF IS$<> "" THEN PRINT IS$;CHR$(95);
GETAKEY3:
     GET X$:IF X$="" THEN GETAKEY3
     C=ASC(X$)
     AC=0
     IF (IT<>2 OR IT=3) AND C>=65 AND C<=90 THEN AC=1
     IF (IT=2 OR IT=4 OR IT=3) AND C>=48 AND C<=57 THEN AC=1
     IF ((IT=2) AND C=46 AND ID=0) OR IT=3 THEN AC=1:ID=1
     IF (IT=4) AND C=32 THEN AC=1: REM ALLOW SPACES WHEN INPUTTING A LINE
     IF (IT=4) AND (C>=35 AND C<=47) THEN AC=1
     IF (IT=4) AND (C>=58 AND C<=63) THEN AC=1  : REM ALLOW PUNCS IN STRING.
     IF C=13 THEN S$=IS$:GOSUB RTRIM:IS$=S$:RETURN
     IF ((AC=1 AND LEN(IS$)<ML) AND C<>20 AND C<>27) THEN IS$=IS$+CHR$(C):FMDRUM 7,26:LOCATE IY,IX:PRINT IS$;CHR$(95);:GOTO GETAKEY3
     IF C<>20 AND C<>27 THEN TOLONG
     AC=0
     IF (IS$="" OR IS$=CHR$(27)) AND C=27 THEN IS$=CHR$(27):RETURN
     IF LEN(IS$)=0 THEN FMDRUM 7,87
     IF LEN(IS$)=1 OR LEN(IS$)=0 THEN IS$="":GOSUB AREACLR:GOTO GETAKEYEND
     I=LEN(IS$)-1
     IF RIGHT$(IS$,1)="." AND IT=2 THEN ID=0
     S$=IS$
     I=LEN(S$)-1
     IS$=MID$(S$,1,I)
GETAKEYEND:
     GOSUB AREACLR:PRINT IS$;CHR$(95);:FMDRUM 7,26:GOTO GETAKEY3
TOLONG:
     FMDRUM 7,87:GOTO GETAKEY3

AREACLR:
     LOCATE IY,IX:PRINT RPT$(32,ML+1);
     LOCATE IY,IX
     RETURN

BITBLT:
  IF PUTIMAGE THEN X$="":S$=",S,R":GOTO SKIPPER
  IF X1>X2 THEN X=X1:X1=X2:X2=X
  IF Y1>Y2 THEN X=Y1:Y1=Y2:Y2=X
  S$=",P,W":X$="@:"
SKIPPER:
  FF$=X$+F$+S$
  IF PUTIMAGE THEN SET.IO=CHKIN:DO.FILEIO=MACPTR:GOTO DOSCREENBLIT
  SET.IO=CHKOUT:DO.FILEIO=MCIOUT:BLITWIDTH=(X2-X1)+1:BLITLINES=(Y2-Y1)+1
DOSCREENBLIT:
  IF Y1+BLITLINES > YLIMIT THEN BLITLINES=YLIMIT-Y1
  OPEN 2,8,2,FF$:POKE X.REG, 2:SYS SET.IO
  IF X1 > 255 THEN BYTESPLIT
  POKE R0L, X1:POKE R0H, 0:GOTO POKEY
BYTESPLIT:
  POKE R0L, X1 AND $00FF:POKE R0H, INT(X1/256)
POKEY:
  POKE R1L, Y1:POKE R1H, 0:SYS FB.CURSOR.POSITION

  FOR Y=1 TO BLITLINES
    I=0
    FOR X=1 TO 3 STEP 0
      BYTES=BLITWIDTH-I:IF BYTES>$FF THEN BYTES=$FF
      POKE A.REG, BYTES:POKE X.REG, $23:POKE Y.REG, $9F:POKE C.REG,1:SYS DO.FILEIO:I=I+PEEK(X.REG):IF I>=BLITWIDTH THEN X=3
    NEXT X
    SYS FB.CURSOR.NEXTLINE
  NEXT Y
  CLOSE 2:SYS CLRCHN:RETURN

SETREGVARS:
  XLIMIT=319:YLIMIT=239
  A.REG=$030C:X.REG=$030D:Y.REG=$030E:C.REG=$030F:R0L=2:R0H=3:R0=R0L:R1L=4:R1H=5:R1=R1L:R15L=$20:R15H=$21:R15=R15L:CHKOUT=$FFC9:CHKIN=$FFC6:CLRCHN=$FFCC:MCIOUT=$FEB1:MACPTR=$FF44
  SET.MEM=$FF99:VERA.DCVIDEO=$9F29:LAYER0.ON=16:LAYER0.OFF=239:LAYER1.ON=32:LAYER1.OFF=223:FB.CURSOR.POSITION=$FEFF:FB.CURSOR.NEXTLINE=$FF02:TRUE=-1:FALSE=0:RETURN

GETFROMMENU:
  RA=PEEK(0):S$="":ADDR=$BF00:BANK LAST.BANK
  FOR I=0 TO 7:S$=S$+CHR$(PEEK(ADDR+I)):NEXT I
  FROM.MENU = (S$="HANGMENU"):IF FROM.MENU THEN FOR I=0 TO 7:POKE ADDR+I,0:NEXT I
  BANK RA:RETURN

FLUSHKEYS:
   GET X$:IF X$<>"" THEN FLUSHKEYS
   RETURN

