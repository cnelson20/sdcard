#CONTROLCODES 1DIM TC%(2,8),AL%(4,26),PC%(8,4),MC$(5),DI$(3),PL%(2,1),PL$(2)GOSUB SETDEFPALPOKE $550, 0GOSUB SETREGVARSGOSUB GETZPSTRINGMY.LOADPROGRAM$=ZP.STRING$F$=MY.LOADPROGRAM$FE%=0FFLAGS=0 IF LEN(F$)>0 THEN GOSUB FILEEXISTS IF FE% THEN STARTFILECHECK    COLOR 5    PRINT    PRINT "HANGMAN FILE CHECKER IS MEANT TO BE CALLED FROM HANGMAN"    PRINT "NOT RUN DIRECTLY.  CALLER NOT FOUND !":PRINT:COLOR 1:ENDCOUNT=0STARTFILECHECK:F$="HANGMAN.INI"CLS:PRINT "{CR}{YEL} F1{GRN} TO EDIT {WHT}";F$:SLEEP 220GET X$:IF ASC(X$)=133 THEN SCREEN 1:GOSUB EDITINI:SCREEN $80:RECT 0,0,319,239,$C2COLOR 1,0:FOR X=1 TO 31:LOCATE 1,1:PRINT CHR$(145):SLEEP 2:NEXTLOCATE 1,1IF COUNT=0 THEN PRINT:PRINT "{YEL}  CHECKING{WHT}: FILE ASSETS{CR}"      F$="HANGMAN.INI"      GOSUB FILEEXISTS      COUNT=COUNT+1      IF NOT FE% AND COUNT<2 THEN GOSUB CREATEHANGINI:CLS:GOTO STARTFILECHECK      IF FE% THEN GOSUB FOUNDMSG:FFLAGS = FFLAGS OR %00000001      IF NOT FE% THEN DM$="MISSING HANGMAN.INI":GOTO ERRORHALT      COUNT=0CHECKCREDITSPRG:      F$="CREDITS.PRG"      GOSUB FILEEXISTS      COUNT=COUNT+1      IF NOT FE% AND COUNT<2 THEN GOSUB CREATCREDITSPRG:GOTO CHECKCREDITSPRG      IF FE% THEN FFLAGS = FFLAGS OR %10000000:GOSUB FOUNDMSG      COUNT=0CHECKDPAL:      F$="DPAL.BIN"      GOSUB FILEEXISTS      COUNT=COUNT+1      IF NOT FE% AND COUNT<2 THEN GOSUB CREATEDPALBIN:GOTO CHECKDPAL      IF FE% THEN FFLAGS = FFLAGS OR %00000010:GOSUB FOUNDMSG      IF NOT FE% THEN DM$="MISSING DPAL.BIN":GOTO ERRORHALT      COUNT=0      FC%=0      GOSUB COUNTWORDFILES      IF FC% >= 1 THEN SKIPHALT      DM$=" HWORD*.DAT FILES ARE MISSING":GOTO ERRORHALTSKIPHALT:     FFLAGS = FFLAGS OR %00001000     PRINT "{YEL}{CR}  WORKING{GRN}.";     GOSUB COUNTEGGFILES     PRINT "{WHT}"     GOSUB GETEGG     GOSUB POKEBVSAVE     FFLAGS = FFLAGS OR %00000100     GOSUB POKEFASTFWD     COUNT=0CHECKSPLASHSCREEN:     F$="SPLASHBACK.IMG":GOSUB FILEEXISTS     IF FE% THEN GOSUB FOUNDMSG     IF NOT FE% THEN GOSUB NOTFOUNDMSG     CHKSPLASH%=FE%     IF FE% THEN FFLAGS = FFLAGS OR %00010000     F$="SPLASH.IMG":GOSUB FILEEXISTS     IF NOT FE% THEN GOSUB NOTFOUNDMSG     IF FE% THEN GOSUB FOUNDMSG     IF FE% THEN FFLAGS = FFLAGS OR %00100000     CHKSPLASH% = CHKSPLASH% AND FE%     COUNT=COUNT+1     IF (NOT CHKSPLASH%) AND (COUNT<2) THEN GOSUB DOSPLASH:COUNT=COUNT+1:GOTO CHECKSPLASHSCREEN## PASS BACK THE NUMBER OF WORD FILES IN R15L      POKE R15L, FC%## PASS BACK THE FOUND FILES FLAGS IN R15H      POKE R15H, FFLAGS## JUST A SIGNATURE TO LET MAIN PROGRAM KNOW THAT THIS WAS RUN## LEFT IN GOLDEN RAM      POKE $400, $FF:POKE $401, $EC:POKE $402, $FF:POKE $403, $FEPRINT:PRINT "{YEL} RETURNING TO: {WHT}";MY.LOADPROGRAM$SLEEP 60LOAD MY.LOADPROGRAM$EDITINI:  EDIT F$:RETURNCOUNTWORDFILES:    FC%=0CNTINC:    SF$=RIGHT$(STR$(FC%+1),LEN(STR$(FC%+1))-1)    SF$=SF$+".DAT":F$="WORDS/HWORDS"+SF$    GOSUB FILEEXISTS:IF FE% THEN GOSUB FOUNDMSG:FC%=FC%+1:GOTO CNTINC    COLOR 7    PRINT:PRINT "{GRN} ";FC%;    COLOR 1:PRINT "{WHT} WORD FILES FOUND!":SLEEP 60:RETURNCOUNTEGGFILES:    EGGCOUNT%=0    SI=TICNTEGG:    SF$=RIGHT$(STR$(EGGCOUNT%+1),LEN(STR$(EGGCOUNT%+1))-1)    SF$=SF$+".ZCM":F$="EGGS/EASTEREGG"+SF$    GOSUB FILEEXISTS:IF FE% THEN PRINT ".";:EGGCOUNT%=EGGCOUNT%+1:GOTO CNTEGG    PRINT:RETURNDOSPLASH:     X=7:Y=9:COLOR 1,11     H=12:W=30     GOSUB TEXTBOX     LOCATE 11,9     PRINT "YOU ARE MISSING {GRN}1{WHT} OR MORE"     LOCATE 13,12     PRINT "OF {GRN}2{WHT} SPLASH IMAGES"     LOCATE 15,9:PRINT "IT TAKES APPROXIMATELY";     LOCATE 16 ,9:PRINT "{GRN}2.5{WHT} MINUTES TO RENDER THESE";     LOCATE 18,9:PRINT "RENDER SPLASH SCREEN: {YEL}Y{WHT}/{YEL}N{WHT}";     GOSUB FLUSHKEYSQUITKEY1:     GET X$:IF X$="" THEN QUITKEY1     IF X$<>"Y" AND X$<>"N" THEN FMDRUM 7,87: GOTO QUITKEY1     IF X$="Y" THEN GOSUB MAKESPLASHSCREEN     GOSUB CLSGRAPH     CLS:RETURNPOKEFASTFWD:   RESTORE FASTFWD650   PRINT "{CR}{YEL} POKING: {WHT}FAST FORWARD ROUTINE{GRN}";   FOR A = $650 TO $680       READ C       PRINT ".";       POKE A, C   NEXT A   PRINT "{CR}":RETURNPOKEBVSAVE:   RESTORE BVSAVE   PRINT "{CR}{YEL} POKING: {WHT}SCREEN SAVE ROUTINE{GRN}";   FOR A = $700 TO $74A       READ I       POKE A, I       PRINT ".";   NEXT A   PRINT"{WHT}":RETURNGETEGG:  F$="FIRSTRUN":GOSUB FILEEXISTS  IF FE% THEN SPLINES  EGG=INT((RND(.)*EGGCOUNT%))+1:GOTO SKIPSPLINESSPLINES:  EGG=9:DOS "S:FIRSTRUN"SKIPSPLINES:  EGGNUM$=RIGHT$(STR$(EGG),LEN(STR$(EGG))-1)  SOURCEFILE$="EGGS/EASTEREGG"+EGGNUM$+".ZCM"  BLOAD SOURCEFILE$,8,2,$A000  POKE $550, $0F  POKE $552, $F0  RETURN  DESTFILE$="EASTEREGG.ZCM"COPYFILE:  OPEN 2,8,2,"@:"+DESTFILE$+",S,W"  OPEN 4,8,4,SOURCEFILE$+",S,R"  FOR I=0 TO 1 STEP 0    BINPUT# 4, X$, 255    J=ST    PRINT# 2, X$;##    BYTESCOPIED=BYTESCOPIED+LEN(X$)    IF (J AND 64) THEN I=1  NEXT I  CLOSE 2:CLOSE 4:RETURNCREATEDPALBIN:   F$="DPAL.BIN":GOSUB NOTFOUNDMSG   GOSUB CREATEMSG   OPEN 5,8,5,"@:"+F$+",S,W"   RESTORE PALDATA   COLOR 5   FOR I = 1 TO 256       READ A       READ B       PRINT# 5, CHR$(B);CHR$(A);       PRINT ".";   NEXT I   COLOR 1   PRINT   CLOSE 5RETURNCREATEHANGINI:   F$="HANGMAN.INI":GOSUB NOTFOUNDMSG   GOSUB CREATEMSG   OPEN 5,8,5,"@:"+F$+",S,W"   RESTORE INIDATA   COLOR 5   FOR I = 1 TO 55       READ L$       PRINT# 5, L$       PRINT ".";   NEXT I   COLOR 1   PRINT   CLOSE 5RETURNCREATCREDITSPRG:   F$="CREDITS.PRG":GOSUB NOTFOUNDMSG   GOSUB CREATEMSG   OPEN 5,8,5,"@:"+F$+",S,W"   RESTORE CREDITSDATA   COLOR 5   FOR I = 1 TO 1182       READ B       PRINT# 5, CHR$(B);       PRINT ".";   NEXT I   COLOR 1:PRINT:CLOSE 5   RETURNGETHIRAM:  POKE C.REG,1:SYS$FF99  HI.BANK = PEEK(A.REG):IF LAST.BANK=0 THEN HI.BANK=255  BANKS.AVAILABLE = HI.BANK-2  NEXT.BANK=2CLRRREGS:   FOR I=R0 TO R14H:POKE I, 0:NEXT I:RETURNPUTZPMSG:   ZP.STRING$=ZP.MSG$   GOSUB PUTZPSTRING   RETURNGETZPSTRING:  ZP1 = $500:ZEND=$500+32  ZP.STRING$=""ZLOOP:  Z=PEEK(ZP1)  IF Z=0 THEN RETURN  ZP.STRING$=ZP.STRING$ + CHR$(Z)  ZP1=ZP1+1  IF ZP1 < ZEND THEN ZLOOPPUTZPSTRING:   IF LEN(ZP.STRING$)<32 AND LEN(ZP.STRING$)>0 THEN DOZPUT   IF LEN(ZP.STRING$)=0 THEN POKE R0, 0:RETURN   PRINT ZP.STRING$   PRINT "{GRN}STRING TO LONG FOR ZERO REGISTERS (MAX 31 CHARS){WHT}":ENDDOZPUT:   ZP1 = $500   FOR I=1 TO LEN(ZP.STRING$)       POKE ZP1, ASC(MID$(ZP.STRING$,I,1))       ZP1=ZP1 + 1   NEXT I   POKE ZP1,0   RETURNSETREGVARS:  A.REG = $030C  X.REG = $030D  Y.REG = $030E  C.REG = $030F  SET.MEM = $FF99  R0L=$02:R0H=$03:R0=R0L  R1L=$04:R1H=$05:R1=R1L  R2L=$06:R2H=$07:R2=R2L  R3L=$08:R3H=$09:R3=R3L  R4L=$A:R4H=$B:R4=R4L  R5L=$C:R5H=$D:R5=R5L  R6L=$E:R6H=$F:R6=R6L  R7L=$10:R7H=$11:R7=R7L  R8L=$12:R8H=$13:R8=R8L  R9L=$14:R9H=$15:R9=R9L  R10L=$16:R10H=$17:R10=R10L  R11L=$18:R11H=$19:R11=R11L  R12L=$1A:R12H=$1B:R12=R12L  R13L=$1C:R13H=$1D:R13=R13L  R14L=$1E:R14H=$1F:R14=R14L  R15L=$20:R15H=$21:R15=R15L  CHKOUT=$FFC9:CHKIN=$FFC6:CLRCHN=$FFCC  MCIOUT=$FEB1:MACPTR=$FF44:  VERA.DATA0=$9F23:VERA.DATA1=$9F24:VERA.CTRL=$9F25  VERA.DCVIDEO=$9F29  LAYER0.ON=16  LAYER0.OFF=239  LAYER1.ON=32  LAYER1.OFF=223  FB.CURSOR.POSITION=$FEFF  FB.CURSOR.NEXTLINE=$FF02  SCREEN.SIZE=$12C00  RETURNFILEEXISTS:   X$=F$:FE%=0:X$=X$+",S,R"   OPEN 2,8,2,X$:CLOSE 2   OPEN 15,8,15:INPUT#15,X,X$,A,B   CLOSE 15:FE%=(X<=20):RETURNNOTFOUNDMSG:  PRINT:PRINT "{WHT}";F$;"{GRN}";:PRINT " NOT FOUND.."  RETURNFOUNDMSG:   PRINT:PRINT "{YEL} FOUND: {WHT}";:PRINT F$;"{WHT}"   RETURNCREATEMSG:   PRINT:PRINT "{YEL}CREATING: {WHT}";:PRINT F$;".";   RETURNERRORHALT:  P1=5:R%=0:G%=14:B%=2:GOSUB RGBPAL:P1=15:R%=2:G%=2:GOSUB RGBPAL  COLOR 5,15:PRINT:PRINT:PRINT " ERROR ENCOUNTERED":PRINT " ";DM$:END## 49 BYTESFASTFWD650:  DATA $E0,$00,$D0,$05,$C0,$00,$F0,$24,$88,$C8,$84,$22,$DA,$AA,$20,$C6,$FF,$7A  DATA $20,$CF,$FF,$C9,$0D,$D0,$07,$88,$D0,$04,$C6,$22,$F0,$0C,$20,$B7,$FF,$29  DATA $40,$F0,$EB,$20,$CC,$FF,$38,$60,$20,$CC,$FF,$18,$60CREDITSDATA:DATA $01,$08,$0D,$08,$01,$00,$CE,$86,$31,$3A,$CE,$8C,$31,$00,$2B,$08,$02,$00DATA $CE,$84,$31,$2C,$24,$46,$41,$30,$43,$2C,$24,$31,$34,$3A,$CE,$84,$31,$2CDATA $24,$46,$41,$30,$44,$2C,$30,$00,$49,$08,$03,$00,$CE,$84,$31,$2C,$24,$46DATA $41,$30,$34,$2C,$24,$46,$30,$3A,$CE,$84,$31,$2C,$24,$46,$41,$30,$35,$2CDATA $30,$00,$51,$08,$04,$00,$99,$3A,$99,$00,$67,$08,$05,$00,$99,$22,$20,$20DATA $1E,$20,$20,$48,$41,$4E,$47,$4D,$41,$4E,$05,$22,$3B,$00,$93,$08,$06,$00DATA $CE,$8D,$31,$3A,$99,$22,$20,$20,$20,$49,$53,$20,$43,$4F,$44,$45,$44,$20DATA $49,$4E,$20,$1E,$43,$4F,$4D,$4D,$4F,$44,$4F,$52,$45,$20,$42,$41,$53,$49DATA $43,$05,$22,$00,$C0,$08,$07,$00,$99,$22,$20,$20,$20,$20,$56,$45,$52,$20DATA $1E,$32,$2E,$30,$05,$20,$57,$49,$54,$48,$20,$1E,$43,$58,$99,$31,$36,$05DATA $20,$45,$58,$54,$45,$4E,$53,$49,$4F,$4E,$53,$22,$00,$F0,$08,$08,$00,$99DATA $22,$20,$20,$20,$20,$99,$32,$30,$32,$33,$05,$2F,$99,$32,$30,$32,$34,$20DATA $20,$1E,$42,$59,$05,$3A,$20,$41,$4E,$54,$48,$4F,$4E,$59,$20,$57,$2E,$20DATA $48,$45,$4E,$52,$59,$22,$00,$F8,$08,$09,$00,$99,$3A,$99,$00,$15,$09,$0ADATA $00,$99,$22,$20,$20,$20,$20,$1C,$4B,$45,$59,$20,$43,$4F,$4E,$54,$52,$49DATA $42,$55,$54,$4F,$52,$53,$22,$00,$36,$09,$0B,$00,$99,$22,$20,$20,$20,$20DATA $9E,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$22DATA $3A,$CE,$8D,$31,$00,$3C,$09,$0C,$00,$99,$00,$58,$09,$0D,$00,$99,$22,$20DATA $20,$20,$20,$1C,$45,$53,$53,$45,$4E,$54,$49,$41,$4C,$20,$54,$4F,$4F,$4CDATA $53,$22,$00,$74,$09,$0E,$00,$99,$22,$20,$20,$20,$20,$9E,$2D,$2D,$2D,$2DDATA $2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$22,$00,$AE,$09,$0F,$00,$99DATA $22,$20,$20,$20,$20,$20,$20,$20,$1E,$42,$41,$53,$4C,$4F,$41,$44,$20,$99DATA $20,$20,$20,$27,$43,$4F,$4D,$50,$49,$4C,$45,$52,$27,$05,$20,$20,$3A,$20DATA $53,$54,$45,$46,$41,$4E,$20,$4A,$41,$4B,$4F,$42,$53,$4F,$4E,$22,$00,$E4DATA $09,$10,$00,$99,$22,$20,$20,$20,$20,$20,$20,$20,$1E,$20,$5A,$53,$4D,$4BDATA $49,$54,$20,$99,$27,$53,$4F,$55,$4E,$44,$20,$4C,$49,$42,$52,$41,$52,$59DATA $27,$05,$3A,$20,$4D,$4F,$4F,$49,$4E,$47,$4C,$45,$4D,$55,$52,$22,$00,$EADATA $09,$11,$00,$99,$00,$14,$0A,$12,$00,$99,$22,$20,$20,$20,$20,$1C,$4D,$41DATA $43,$48,$49,$4E,$45,$20,$4C,$41,$4E,$47,$55,$41,$47,$45,$20,$52,$4F,$55DATA $54,$49,$4E,$45,$53,$22,$3A,$CE,$8D,$37,$00,$3E,$0A,$13,$00,$99,$22,$20DATA $20,$20,$20,$9E,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2DDATA $2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$22,$3A,$CE,$8D,$31,$00,$6CDATA $0A,$14,$00,$99,$22,$20,$20,$20,$20,$20,$20,$20,$20,$20,$1E,$53,$43,$52DATA $45,$45,$4E,$20,$53,$41,$56,$45,$05,$3A,$20,$58,$41,$52,$4B,$20,$26,$20DATA $46,$4F,$58,$57,$4F,$4F,$46,$22,$00,$9A,$0A,$15,$00,$99,$22,$20,$20,$20DATA $20,$20,$20,$20,$20,$20,$20,$20,$1E,$4C,$49,$4E,$45,$20,$53,$4B,$49,$50DATA $05,$3A,$20,$4D,$41,$52,$4B,$54,$48,$45,$53,$54,$52,$41,$4E,$47,$45,$22DATA $00,$A0,$0A,$16,$00,$99,$00,$D1,$0A,$17,$00,$99,$22,$20,$20,$1C,$20,$20DATA $4D,$55,$53,$49,$43,$20,$41,$4E,$44,$20,$53,$4F,$55,$4E,$44,$20,$45,$46DATA $46,$45,$43,$54,$20,$43,$4F,$4E,$54,$52,$49,$42,$55,$54,$49,$4F,$4E,$53DATA $22,$00,$D9,$0A,$18,$00,$CE,$8D,$37,$00,$0E,$0B,$19,$00,$99,$22,$20,$20DATA $9E,$20,$20,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2DDATA $2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2DDATA $2D,$2D,$2D,$22,$3A,$CE,$8D,$31,$00,$3C,$0B,$1A,$00,$99,$22,$20,$20,$05DATA $20,$20,$20,$20,$20,$20,$20,$20,$4D,$4F,$4F,$49,$4E,$47,$4C,$45,$4D,$55DATA $52,$2C,$20,$43,$52,$49,$53,$50,$53,$2C,$20,$47,$54,$52,$33,$51,$51,$22DATA $00,$42,$0B,$1B,$00,$99,$00,$6B,$0B,$1C,$00,$99,$22,$20,$20,$20,$20,$1CDATA $46,$45,$45,$44,$42,$41,$43,$4B,$20,$41,$4E,$44,$20,$42,$55,$47,$20,$52DATA $45,$50,$4F,$52,$54,$53,$22,$3A,$CE,$8D,$37,$00,$94,$0B,$1D,$00,$99,$22DATA $20,$20,$20,$20,$9E,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2DDATA $2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$22,$3A,$CE,$8D,$31,$00,$C3DATA $0B,$1E,$00,$99,$22,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$05,$56,$4FDATA $49,$44,$53,$54,$41,$52,$2C,$54,$4F,$42,$4F,$54,$45,$52,$2C,$44,$45,$53DATA $45,$52,$54,$46,$49,$53,$48,$20,$22,$00,$DE,$0B,$1F,$00,$99,$22,$20,$20DATA $20,$20,$20,$20,$20,$20,$20,$20,$26,$20,$54,$48,$45,$20,$38,$42,$47,$22DATA $00,$F1,$0B,$20,$00,$A1,$41,$24,$3A,$8B,$41,$24,$B3,$B1,$22,$22,$A7,$33DATA $32,$00,$08,$0C,$21,$00,$A1,$41,$24,$3A,$8B,$41,$24,$B2,$22,$22,$AF,$CEDATA $D3,$B2,$30,$A7,$33,$33,$00,$0F,$0C,$22,$00,$CE,$8F,$00,$2B,$0C,$23,$00DATA $41,$30,$B2,$30,$3A,$41,$31,$B2,$30,$3A,$41,$32,$B2,$33,$31,$39,$3A,$41DATA $33,$B2,$32,$33,$39,$00,$36,$0C,$24,$00,$41,$34,$B2,$24,$41,$39,$00,$42DATA $0C,$25,$00,$81,$41,$35,$B2,$31,$A4,$35,$00,$57,$0C,$26,$00,$CE,$89,$41DATA $30,$2C,$41,$31,$2C,$41,$32,$2C,$41,$33,$2C,$41,$34,$00,$6B,$0C,$27,$00DATA $41,$30,$B2,$41,$30,$AA,$31,$3A,$41,$32,$B2,$41,$32,$AB,$31,$00,$7F,$0CDATA $28,$00,$41,$31,$B2,$41,$31,$AA,$31,$3A,$41,$33,$B2,$41,$33,$AB,$31,$00DATA $8B,$0C,$29,$00,$41,$34,$B2,$41,$34,$AB,$31,$00,$93,$0C,$2A,$00,$82,$41DATA $35,$00,$99,$0C,$2B,$00,$8E,$00,$00,$00,$3B,$06REM 1182  BYTES CONVERTEDBVSAVE:   DATA $AA,$20,$C9,$FF,$9C,$4B,$07,$A9,$2C,$8D,$4C,$07,$A9,$01,$8D,$4D,$07,$A2   DATA $23,$A0,$9F,$AD,$4B,$07,$38,$20,$B1,$FE,$B0,$29,$8E,$4E,$07,$AD,$4B,$07   DATA $38,$ED,$4E,$07,$8D,$4B,$07,$AD,$4C,$07,$8C,$4E,$07,$ED,$4E,$07,$8D,$4C   DATA $07,$AD,$4D,$07,$E9,$00,$8D,$4D,$07,$0D,$4B,$07,$0D,$4C,$07,$D0,$CA,$20   DATA $CC,$FF,$60PALDATA:    DATA $00,$00,$0F,$FF,$08,$00,$0A,$FE,$0C,$4C,$00,$C5,$00,$0A,$0E,$E7,$0D    DATA $85,$06,$40,$0F,$77,$03,$33,$07,$77,$0A,$F6,$00,$8F,$0B,$BB,$00,$00    DATA $01,$11,$02,$22,$03,$33,$04,$44,$05,$55,$06,$66,$07,$77,$08,$88,$09    DATA $99,$0A,$AA,$0B,$BB,$0C,$CC,$0D,$DD,$0E,$EE,$0F,$FF,$02,$11,$04,$33    DATA $06,$44,$08,$66,$0A,$88,$0C,$99,$0F,$BB,$02,$11,$04,$22,$06,$33,$08    DATA $44,$0A,$55,$0C,$66,$0F,$77,$02,$00,$04,$11,$06,$11,$08,$22,$0A,$22    DATA $0C,$33,$0F,$33,$02,$00,$04,$00,$06,$00,$08,$00,$0A,$00,$0C,$00,$0F    DATA $00,$02,$21,$04,$43,$06,$64,$08,$86,$0A,$A8,$0C,$C9,$0F,$EB,$02,$11    DATA $04,$32,$06,$53,$08,$74,$0A,$95,$0C,$B6,$0F,$D7,$02,$10,$04,$31,$06    DATA $51,$08,$62,$0A,$82,$0C,$A3,$0F,$C3,$02,$10,$04,$30,$06,$40,$08,$60    DATA $0A,$80,$0C,$90,$0F,$B0,$01,$21,$03,$43,$05,$64,$07,$86,$09,$A8,$0B    DATA $C9,$0D,$FB,$01,$21,$03,$42,$04,$63,$06,$84,$08,$A5,$09,$C6,$0B,$F7    DATA $01,$20,$02,$41,$04,$61,$05,$82,$06,$A2,$08,$C3,$09,$F3,$01,$20,$02    DATA $40,$03,$60,$04,$80,$05,$A0,$06,$C0,$07,$F0,$01,$21,$03,$43,$04,$65    DATA $06,$86,$08,$A8,$09,$CA,$0B,$FC,$01,$21,$02,$42,$03,$64,$04,$85,$05    DATA $A6,$06,$C8,$07,$F9,$00,$20,$01,$41,$01,$62,$02,$83,$02,$A4,$03,$C5    DATA $03,$F6,$00,$20,$00,$41,$00,$61,$00,$82,$00,$A2,$00,$C3,$00,$F3,$01    DATA $22,$03,$44,$04,$66,$06,$88,$08,$AA,$09,$CC,$0B,$FF,$01,$22,$02,$44    DATA $03,$66,$04,$88,$05,$AA,$06,$CC,$07,$FF,$00,$22,$01,$44,$01,$66,$02    DATA $88,$02,$AA,$03,$CC,$03,$FF,$00,$22,$00,$44,$00,$66,$00,$88,$00,$AA    DATA $00,$CC,$00,$FF,$01,$12,$03,$34,$04,$56,$06,$68,$08,$8A,$09,$AC,$0B    DATA $CF,$01,$12,$02,$24,$03,$46,$04,$58,$05,$6A,$06,$8C,$07,$9F,$00,$02    DATA $01,$14,$01,$26,$02,$38,$02,$4A,$03,$5C,$03,$6F,$00,$02,$00,$14,$00    DATA $16,$00,$28,$00,$2A,$00,$3C,$00,$3F,$01,$12,$03,$34,$05,$46,$07,$68    DATA $09,$8A,$0B,$9C,$0D,$BF,$01,$12,$03,$24,$04,$36,$06,$48,$08,$5A,$09    DATA $6C,$0B,$7F,$01,$02,$02,$14,$04,$16,$05,$28,$06,$2A,$08,$3C,$09,$3F    DATA $01,$02,$02,$04,$03,$06,$04,$08,$05,$0A,$06,$0C,$07,$0F,$02,$12,$04    DATA $34,$06,$46,$08,$68,$0A,$8A,$0C,$9C,$0F,$BE,$02,$11,$04,$23,$06,$35    DATA $08,$47,$0A,$59,$0C,$6B,$0F,$7D,$02,$01,$04,$13,$06,$15,$08,$26,$0A    DATA $28,$0C,$3A,$0F,$3C,$02,$01,$04,$03,$06,$04,$08,$06,$0A,$08,$0C,$09    DATA $0F,$0BINIDATA:   DATA "## THIS IS THE HANGMAN INI FILE "   DATA "## SIMILIAR TO WINDOWS INI FILES-DOES NOT SUPPORT SECTIONS"   DATA ""   DATA "## IF USEZSM IS OFF THEN NO MUSIC"   DATA "## WILL BE PLAYED"   DATA "USEZSM=ON"   DATA ""   DATA "## WHERE SOUND EFFECTS ARE FOUND"   DATA "MUSICDIR=MUSIC"   DATA ""   DATA ""   DATA "## A SONG ON PROGRAM STARTUP"   DATA "INTROSONG=CHOPIN2.ZSM"   DATA ""   DATA "BACKGROUNDMUSIC=ON"   DATA ""   DATA "BACKGROUNDTRACK=BACKGROUND1.ZSM"   DATA ""   DATA "LOSSMUSIC=CHOPIN2.ZSM"   DATA ""   DATA ""   DATA ""   DATA "## ONLY PLAYED ON FANCY ANIMATION"   DATA "VICTORYSONG=NONE"   DATA ""   DATA "## TURN SHOWCLUE OFF IF YOU DON'T WANT"   DATA "## TO SEE CLUES,  MAKES THE GAME HARD !!"   DATA "SHOWCLUE=ON"   DATA ""   DATA "## THE DEFAULT PALETTE"   DATA "## THIS AND UNREM ANOTHER "   DATA "## FOR A DIFFERENT COLOR SCHEME"   DATA ""   DATA "PALFILE=DPAL.BIN"   DATA ""   DATA "## MUTED PALETTE ACCORDING TO"   DATA "## DESERTFISH CLOSER TO TRUE C64"   DATA "## PALFILE=ALTPALETTES/C64.PAL"   DATA ""   DATA "## A PALETTE WITH A REDISH HUE"   DATA "## PALFILE=ALTPALETTES/REDISH.PAL"   DATA ""   DATA "## A PALETTE WITH A BLUISH HUE"   DATA "## PALFILE=ALTPALETTES/BLUEISH.PAL"   DATA ""   DATA "## A GRAYSCALE PALETTE"   DATA "## PALFILE=ALTPALETTES/GRAY.PAL"   DATA ""   DATA "## A PARTIAL GRAYSCALE PALETTE"   DATA "## PALFILE=ALTPALETTES/SEMIGRAY.PAL"   DATA ""   DATA "## A DARK PALETTE"   DATA "## PALFILE=ALTPALETTES/DARK.PAL"   DATA ""   DATA ""MAKESPLASHSCREEN:   RECT 0,0,XLIMIT,YLIMIT,$C0   COLOR 1,0:CLS   STARTTIME = TI   GOSUB VARINIT   GOSUB DRAWWAITBOX   GOSUB PLAYDEMO   ENDTIME = TI   TOTALTIME = ENDTIME - STARTTIME   SECONDS = INT(TOTALTIME/60)   JIFFIES = TOTALTIME - (SECONDS*60)   MINUTES = INT(SECONDS/60)   SECONDS = SECONDS - (MINUTES*60)   GOSUB FLUSHKEYS   CLS   X=4:Y=4:COLOR 1,12   H=10:W=27   GOSUB TEXTBOX   LOCATE 5,6:PRINT "SPLASH SCREEN"   LOCATE 7,5:IF MINUTES<10 THEN PRINT " ";   PRINT "RENDERED IN ";MINUTES;   PRINT " MINUTE";:IF MINUTES > 1 OR MINUTES=0 THEN PRINT "S";   LOCATE 8,5   IF SECONDS<10 THEN PRINT " ";   PRINT "            ";SECONDS;" SECOND";   IF SECONDS > 1 OR SECONDS=0 THEN PRINT "S";   LOCATE 9,5   IF JIFFIES<10 THEN PRINT " ";   PRINT "            ";JIFFIES;" JIFFIE";   IF JIFFIES>1 OR JIFFIES=0 THEN PRINT "S";   LOCATE 12,5:COLOR 7   PRINT "PRESS ANY KEY TO CONTINUE"WAITFORIT:   GET X$:IF X$="" THEN WAITFORIT   COLOR 1,0   CLSCLEANUP:   GOSUB HIDEGRAPHICS   GOSUB SETDEFPAL   GOSUB CLSGRAPH   GOSUB SHOWGRAPHICS   RETURN   ENDHIDEGRAPHICS:  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) AND LAYER0.OFF  RETURNSHOWGRAPHICS: POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) OR LAYER0.ON RETURNDRAWTITLE:   RECT 61,183,254,208,$1B:FRAME 61,183,254,208,$12   CHAR 75,194,$C3,CHR$($0C)+CHR$($12)+" THE CLASSIC WORD GAME "   CHAR 62,205,$C4,CHR$($0C)+CHR$($12)+" NOW ON THE COMMANDER X16 "   CHAR 6,222,$01,CHR$($06)+"CODED IN BASIC":CHAR 6,232,$01,CHR$($06)+"2023... ANTHONY HENRY"   CHAR 190,222,$1F,CHR$($06)+"MANY CONTRIBUTORS":CHAR 212,232,$1D,CHR$($06)+"(See Credits)"   VPOKE 1,$FA00,0:VPOKE 1,$FA01,0   COLOR 1,0   GOSUB FRAMESCRN   RETURNPLAYDEMO:   CP%=1:PL$(1)="DEMO HANGMAN":EC$=CHR$(27):GOSUB CLSGRAPH   ## GET X$:IF X$=EC$ THEN ENDDEMO   GOSUB RESETCIRCLE   GOSUB DIMPALETTE   GOSUB SKIPLOAD   GOSUB TICKSND   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRAWGALLOWS   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRAWNOOSE   GOSUB TICKSND   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRAWFACE   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRWTORSO   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRWRIGHTARM   GOSUB TICKSND   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRWLEFTARM   GOSUB TICKSND   GOSUB CHECKQUIT   IF DOQUIT THEN RETURN   GOSUB DRWRIGHTLEG   GOSUB TICKSND   GOSUB CHECKQUIT   GOSUB DRWLEFTLEG   GOSUB TICKSND   DM$="SAVING SPLASH SCREEN":GOSUB PLAINMSG   GOSUB MAKESPLASH   RETURNCHECKQUIT: GET X$:IF X$=CHR$(27) THEN GOSUB ASK2QUIT RETURNDRUMROLL:    FMDRUM 6,25:SLEEP 20:FMDRUM 7,25:SLEEP 40:FMDRUM 5,44:SLEEP 10    FMDRUM 6,49:SLEEP 15:FMDRUM 7,38:RETURNTICKSND:   FMDRUM 2, 50   RETURNDISABLEBTN:     X=AL%(3,A):Y=AL%(4,A):W=14:H=14:C1=$14:C2=$12:C3=$11:C4=$10     L$=CHR$(LL):GOSUB DRAWBTN     AL%(1,A)=1     RETURNLETTERPANL:     DM$="LETTER PANEL":GOSUB DRAWMSG     L=65     X=131:Y=97:W=14:H=14:C1=1:C2=$17:C3=$C2:C4=$1E     FRAME 123,90,261,171,$10     RECT 124,91,260,170,$C5:RECT 126,94,258,168,$C5     SX=X     FOR KK = 1 TO 3         FOR J = 1 TO 7           L$=CHR$(L)           GOSUB DRAWBTN            I=L-64            AL%(1,I)=0            AL%(2,I)=L            AL%(3,I)=X            AL%(4,I)=Y           X = X + W + 4           L=L+1       NEXT J      Y = Y + W + 4:X=SX     NEXT KK     X = SX     FOR JK = 1 TO 5        L$=CHR$(L)        GOSUB DRAWBTN            I=L-64            AL%(1,I)=0            AL%(2,I)=L            AL%(3,I)=X            AL%(4,I)=Y        X = X + W + 4        L=L+1     NEXT JK    RETURNDRAWBTN:     IF H=0 THEN H=W     X1=X+1:XW=X+W:YW=Y+H:Y1=Y+1     Y5=YW-1:X5=XW-1     LINE X,Y,XW,Y,C1:LINE X1,Y1,X5,Y1,C1:LINE XW,Y,XW,YW,C1     LINE X5,Y1,X5,Y5,C1:LINE X,Y,X,YW,C2:LINE X1,Y1,X1,Y5,C2     LINE X,YW,X,YW,C2:LINE X,YW,X5,YW,C2:LINE X,Y5,XW-2,Y5,C2     RECT X+2,Y+2,XW-2,YW-2,C3:CHAR X+3,YW-3,C4,L$     IF H=W THEN H=0    RETURNFRAMESCRN:    X1=0:Y1=0:X2=XLIMIT:Y2=YLIMIT:CC=$1A    FOR J=1 TO 5        FRAME X1,Y1,X2,Y2,CC        X1=X1+1:X2=X2-1:Y1=Y1+1:Y2=Y2-1:CC=CC-2    NEXT J    RETURNBCIRCLE:     WR=RA:X=0: D=2*(1-RA):W=INT(2*320/240)BCLOOP:       IF WR < 0 THEN BCLOOPEND       DX=X*XSQUISH:DY=WR*YSQUISH       ZX=CX-DX       ZY=CY-DY       AX=CX+DX       AY=CY+DY       IF FILL=1 THEN DOFILL         IF ZX<0 OR ZX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q1=0 THEN SKIP4         PSET ZX, ZY, CCSKIP4:         IF AX<0 OR AX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q2=0 THEN SKIP2         PSET AX, ZY, CCSKIP2:         IF ZX<0 OR ZX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q3=0 THEN SKIP3         PSET ZX, AY, CCSKIP3:         IF AX<0 OR AX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q4=0 THEN SKIPFILL         PSET AX, AY, CC       GOTO SKIPFILLDOFILL:       X1=ZX:X2=AX       IF (Q1=0 AND Q2=O) OR X1>XLIMIT THEN FILL2       IF ZY<0 OR ZY>YLIMIT THEN FILL2       IF X1<0 THEN X1=0       IF X2>XLIMIT THEN X2=XLIMIT       IF Q1=0 THEN X1=CX       IF Q2=0 THEN X2=CX          LINE X1,ZY,X2,ZY,CCFILL2:       IF (Q3=0 AND Q4=0) OR ZX>XLIMIT THEN SKIPFILL       IF AY<0 OR AY>YLIMIT THEN SKIPFILL       IF ZX<0 THEN ZX=0       IF AX>XLIMIT THEN AX=XLIMIT       IF Q3=0 THEN ZX=CX       IF Q4=0 THEN AX=CX          LINE ZX,AY,AX,AY,CCSKIPFILL:       IF (D+RA)>0 THEN WR=WR-1:D=D-W*WR-1       IF X>D THEN X=X+1:D=D+2*X+1       GOTO BCLOOPBCLOOPEND:       RETURNCCIRCLE:     WR=RA:G=0: D=2*(1-RA):W=INT(2*320/200)REM  WHILE WR<0CCLOOP:       IF WR < 0 THEN CCDONE         LINE CX-G,CY-WR,CX+G,CY-WR,CC         LINE CX-G,CY+WR,CX+G,CY+WR,CC       IF (D+RA)>0 THEN WR=WR-1:D=D-W*WR-1       IF G>D THEN G=G+1: D=D+2*G+1       GOTO CCLOOPREM WENDCCDONE:    RETURNRESETCIRCLE:  XSQUISH=1:YSQUISH=1:Q1=1:Q2=1:Q3=1:Q4=1:FILL=0:RETURNTEXTBOX:     LOCATE Y,X     PRINT CHR$($6F);RPT$($A3,W-2);CHR$($70);     IF H=2 THEN SKIPMID     FOR II = 1 TO H-2         LOCATE Y+II,X         PRINT CHR$($A5);RPT$(32,W-2);CHR$($A7);     NEXT IISKIPMID:     LOCATE Y+H-1,X     PRINT CHR$($6C);RPT$($A4,W-2);CHR$($BA);     RETURNMAKESPLASH:     GOSUB LETTERPANL     GOSUB DRAWTITLE     F$="SPLASH.IMG"     GOSUB SAVESCREEN     RETURNFLUSHKEYS:   GET X$:IF X$<>"" THEN FLUSHKEYS   RETURNBBACKGROUND:     F$="HANGBG.DAT":GOSUB FILEEXISTS     IF NOT FE% THEN SKIPLOAD     BVLOAD F$,8,0,0     GOTO BGENDSKIPLOAD:     SUN=$50     SKY=$C3     J=3:XLIMIT=319:YLIMIT=239:XSQUISH=1:YSQUISH=1     P1=SKY:P2=$F2:GOSUB COPYPALET     R%=0:G%=0:B%=1:GOSUB RGBPAL     DM$="THE SKY":GOSUB DRAWMSG     RECT 0,0, XLIMIT, YLIMIT, SKY     P1=$F2:P2=SKY:GOSUB PAL2PALFADE     P1=SKY:P2=$10:GOSUB COPYPALET     P1=SUN:P2=$F1:GOSUB COPYPALET     P1=SKY:P2=C:GOSUB COPYPALET     CX=5:CY=4:CC=$10:FILL=1:XSQUISH=1:YSQUISH=1:Q1=1:Q2=1     Q3=1:Q4=1:RA=32:GOSUB BCIRCLE     CC=SUN:CX=5:CY=4:RA=30:FILL=1     RA=30:GOSUB BCIRCLE:FILL=0     LINE 2,37,2,44,SUN:LINE 6,37,6,44,SUN:LINE 9,37,10,44,SUN     LINE 12,36,14,43,SUN:LINE 15,35,17,42,SUN:LINE 18,34,21,41,SUN     LINE 20,33,24,39,SUN:LINE 22,31,27,37,SUN:LINE 24,28,29,35,SUN     LINE 27,25,32,32,SUN:LINE 30,23,35,29,SUN:LINE 32,21,37,26,SUN     LINE 33,19,39,23,SUN:LINE 35,17,41,20,SUN:LINE 36,15,43,17,SUN     LINE 37,12,44,14,SUN:LINE 38,10,45,11,SUN:LINE 39,7,45,8,SUN     LINE 39,4,45,5,SUN:LINE 39,1,46,2,SUN     P1=0:P2=$10:J=3:GOSUB PAL2PALFADE:P1=$F1:P2=SUN:GOSUB PAL2PALFADE          DM$="GRASS":GOSUB DRAWMSG     P1=105:P2=$F2:GOSUB COPYPALET:P2=P1:P1=$C0:GOSUB COPYPALET     P1=$85:P2=$F3:GOSUB COPYPALET:P2=P1:P1=$C0:GOSUB COPYPALET     RECT 0,180,XLIMIT,YLIMIT,$85     FOR Y=161 TO 179         LINE 0,Y,40,179,105     NEXT Y     FOR Y=180 TO 150 STEP -1         LINE 288,179,XLIMIT,Y,105     NEXT Y     J=5:P2=$85:P1=$F3:GOSUB PAL2PALFADE     P2=105:P1=$F2:GOSUB PAL2PALFADE     COLOR 1     FOR I=1 TO 550         X1=INT(RND(.)*310)+5       NEWY:         Y1=INT(RND(.)*60)+180:IF Y1>YLIMIT THEN NEWY         GOSUB GRASSCLUMP     NEXT I     GOSUB FRAMESCRN     DM$="SAVING SPLASH BACKGROUND"     GOSUB PLAINMSG     GOSUB DRUMROLL     F$="SPLASHBACK.IMG":GOSUB SAVESCREEN     GOSUB DRWCLOUDS:GOSUB DRWCLOUDS:GOSUB DRWCLOUDS     GOSUB FRAMESCRNBGEND:     RETURNDIMPALETTE:   DM$="DIMMING THE PALETTE":GOSUB PLAINMSG   FOR P1=2 TO 6       GOSUB READPAL       R%=R%/6       IF R%>1 THEN R%=R%-1       G%=G%/4       IF G%>1 THEN G%=G%-1       B%=B%/6       IF B%>1 THEN B%=B%-1       GOSUB RGBPAL  NEXT P1  FOR P1=8 TO 255       GOSUB READPAL       R%=R%/6       IF R%>1 THEN R%=R%-1       G%=G%/4       IF G%>1 THEN G%=G%-1       B%=B%/6       IF B%>1 THEN B%=B%-1       GOSUB RGBPAL  NEXT P1  P1=10:R%=8:G%=13:B%=10:GOSUB RGBPAL  RETURNSAVESCREEN:    DM$="SAVING: "+F$:GOSUB PLAINMSG    IF F$="BACKGROUND SCREEN" THEN FF$="@:HANGBG.DAT,P,W":GOTO DOIT    FF$="@:"+F$ + ",P,W"DOIT:    OPEN 2,8,2,FF$    POKE $30C,2:POKE$9F25,0:POKE$9F20,0:POKE$9F21,0:POKE$9F22,$10    SYS$700    CLOSE 2:RETURNGRASSCLUMP:     GOSUB GRASSCOLOR     LINE X1,Y1,X1-4,Y1-5,GC:GOSUB GRASSCOLOR     LINE X1,Y1,X1-3,Y1-3,GC:GOSUB GRASSCOLOR     LINE X1,Y1,X1,Y1-5,GC:GOSUB GRASSCOLOR     LINE X1,Y1,X1+3,Y1-3,GC:GOSUB GRASSCOLOR     LINE X1,Y1,X1+4,Y1-5,GC     RETURNGRASSCOLOR:     GC=INT(RND(.)*24)+$60:RETURNDRWCLOUDS:     DM$="CLOUDS":GOSUB DRAWMSG     H = INT(RND(.)*(200))+ 45     HL = INT(RND(.)*30)+30     V = INT(RND(.)*30) + 6     VB = INT(RND(.)*11) + 7     FOR Y = V TO V+VB STEP 3         FOR X = H TO H + HL STEP 4           TRYCLOUD:             RA = INT(RND(.)*5)+3             CC = INT(RND(.)*4)+ $1C             CX=X             CY= INT(RND(.)*4) + (Y-4):IF (CY - RA) < 0 THEN TRYCLOUD             GOSUB CCIRCLE         NEXT X     NEXT Y     RETURNDRAWGALLOWS:     DM$="THE GALLOWS":GOSUB DRAWMSG     FRAME 189,195,285,208,$10     FRAME 188,194,285,211,$10     LINE  189,210,285,210,$10     PSET  189,209,$10     PSET  284,206,$10     PSET  284,209,$10     FRAME 275,21,285,207,$10     FRAME 276,22,284,205,$10     FRAME 67,20,285,30,$10     FRAME 68,21,284,29,$10     RECT  71,30,79,33,$10     RECT  190,196,283,209,$52     RECT  277,23,283,209,$52     RECT  69,22,283,28,$52     RETURNDRAWNOOSE:     DM$="THE NOOSE":GOSUB DRAWMSG     FILL=0:XSQUISH=1     LINE 73,33,73,53,16     LINE 77,33,77,53,16     RECT 74,34,76,53,87     FOR Y=38 TO 53 STEP 3         LINE 73, Y, 77, Y - 3, $10     NEXT Y     FRAME 71,53,80, 68, 16     RECT 72,54,79,68,87     FOR Y=56 TO 68 STEP 4         LINE 72,Y,79, Y-4, $10     NEXT Y     RA=24:CX=75:CY=79:CC=$10     YSQUISH=.38     Q1=1:Q2=1:Q3=1:Q4=1:YSQUISH=.38     GOSUB BCIRCLE:RA=25:GOSUB BCIRCLE     RA=24:GOSUB BCIRCLE:RA=23:GOSUB BCIRCLE     RA=19:GOSUB BCIRCLE:RA=18:GOSUB BCIRCLE     CC=87     FOR X=20 TO 23 STEP .6         RA=X:GOSUB BCIRCLE     NEXT X     RETURNDRAWFACE:     DM$="A TROUBLED FACE":GOSUB DRAWMSG     CX=58:CY=60:RA=6:XSQUISH=.4:YSQUISH=1:CC=$10     Q1=1:Q2=0:Q3=1:Q4=0:FILL=0     GOSUB BCIRCLE:RA=RA-1:GOSUB BCIRCLE:RA=RA-1:GOSUB BCIRCLE     FILL=1:CC=$25:GOSUB BCIRCLE     FILL=0:CX=90:RA=6:CC=$10     Q1=0:Q2=1:Q3=0:Q4=1     GOSUB BCIRCLE:RA=RA-1:GOSUB BCIRCLE:RA=RA-1:GOSUB BCIRCLE     FILL=1:CC=$25:GOSUB BCIRCLE     LINE 93,58,93,62,$10     Q1=1:Q2=Q1:Q3=Q1:Q4=Q1     LINE 67,76,67,84,$10:LINE 66,76,66,84,$10     LINE 67,87,67,90,$10:LINE 66,87,66,90,$10:LINE 82,76,82,84,$10     LINE 83,76,83,84,$10:LINE 82,87,82,90,$10:LINE 83,87,83,90,$10     RECT 68,76,81,84,$25:RECT 68,89,81,90,$25     RA=20:XSQUISH=.8:FILL=1     CC=$10:CX=74:CY=63     GOSUB BCIRCLE:RA = RA - 1:GOSUB BCIRCLE     RA=RA-2:CY=CY+1:CC=$FF:FILL=1:GOSUB BCIRCLE     XSQUISH=1:YSQUISH = XSQUISH     CY=CY-6:CX = CX-6:RA=3:CC=$FE:GOSUB CCIRCLE     PSET CX+4,CY,$FF:GOSUB PUPILS     CX=CX+12:GOSUB CCIRCLE     PSET CX+4,CY,$FF:GOSUB PUPILS:CX = 74:CY = 63     LINE CX-1,CY, CX-2, CY + 6, $10:LINE CX+1,CY,CX+2,CY+6,$10     LINE CX,CY,CX-1, CY + 6, $23:LINE CX,CY,CX+1,CY+6,$23     LINE CX,CY+3,CX,CY+6,$22     Q3=0:Q4=0:CC=$10:CY=CY+13:YSQUISH=.35:RA=6:FILL=0     GOSUB BCIRCLE     CY=CY+1:CC=$31:GOSUB BCIRCLE     CY=CY+1:CC=$10:GOSUB BCIRCLE     Q3=1:Q4=1:YSQUISH=1     RETURNPUPILS:     PSET CX,CY,$10:PSET CX-1,CY,$10:PSET CX,CY+1,$10:PSET CX-1,CY+1,$10     RETURNDRWTORSO:      P1=8:P2=$DF:GOSUB COPYPALET      DM$="TORSO":GOSUB DRAWMSG      LINE 82,90,105,93,$10:LINE 83,91,105,94,$10      LINE 68,90,42,93, $10:LINE 69,91,42,94, $10      LINE 67,90,74,105,$10:LINE 83,90,74,105,$10      FOR X=81 TO 68 STEP -1          LINE 75,103,X, 90, $25      NEXT X      LINE 74,105,72,110,$10:LINE 72,110,72,141,$10      LINE 72,141,53,144,$10:LINE 53,144,53,108,$10      RECT 71,140,54,103,$DF:LINE 54,141,68,141,$DF      LINE 54,142,62,142,$DF:LINE 54,143,56,143,$DF      PSET 65,91,$10      LINE 72,102,72,108,$DF:LINE 73,104,73,106,$DF      PSET 74,109,$DF      RECT 47,107,68,94,$DF:RECT 69,96,69,99,$DF      RECT 42,107,48,95,$DF:LINE 56,93,67,93, $DF:PSET 55,92,$10:PSET 64,91,$10      LINE 65,92,67,92, $DF:RECT 68,100,71,102,$DF:LINE 70,98,70,100, $DF      RECT 73,110,91,140,$DF:RECT 75,105,91,109,$DF:RECT 88, 94, 101, 106, $DF      RECT 81, 95, 105, 106, $DF:LINE 80, 96, 80, 105, $DF      LINE 79,98,79,105, $DF:LINE 78,100,78,105,$DF:LINE 77,101,77,105,$DF      LINE 76,103,76,105,$DF:LINE 74,103,75,103, $10      PSET 76,101,$10:PSET 73,101,$10:PSET 72,99,$10:PSET 71,97,$10      PSET 70,95,$10:PSET 69,93,$10:PSET 81,92,$10:PSET 80,94,$10      PSET 80,96,$10:PSET 78,97,$10:PSET 77,99,$10      LINE 76,100,76,103,$10:RECT 82, 94, 93, 93, $DF:LINE 83, 92, 86, 92, $DF      LINE 74, 107,74, 108,$DF:PSET 73,109,$10:PSET 73,141,$10:LINE 76,141,91,141,$DF      LINE 81,142,91,142,$DF:LINE 89,143,91,143,$DF:LINE 74,141,92,144,$10      LINE 92,144,92,107,$10:PSET 73,141,$10      CC = 16:RA = 1.2:CX=75:FILL=1      FOR CY=113 TO 143 STEP 8          GOSUB BCIRCLE      NEXT CY      LINE 58,108,68,108,$10:LINE 58,108,58,116,$10      LINE 68,108,68,116,$10:Q1=0:Q2=0:Q3=1:Q4=1:RA=4.5:XSQUISH=1:YSQUISH=.6      CX=63:CY=116:CC=$10:FILL=0      GOSUB BCIRCLE      X$="P-"+RIGHT$(STR$(CP%),LEN(STR$(CP%))-1)      CHAR 57,106,$10,X$      RETURNDRWLEFTARM:      Q1=0:Q2=1:Q3=0:Q4=0:FILL = 0      DM$="LEFT ARM":GOSUB DRAWMSG      XSQUISH=.52      RA=16:CC=$10      CY=116:CX=92      GOSUB BCIRCLE:RA=RA+.6      GOSUB BCIRCLE      RA=RA-1:GOSUB BCIRCLE      XSQUISH=.28:CX = 106:CY = 105:FILL=0      GOSUB BCIRCLE      FOR L=1 TO 3:RA=RA+.5:GOSUB BCIRCLE:NEXT L      CC=$DF:Q1=0:Q2=1:Q3=0:Q4=0:FILL=1:RA=RA-2.5      GOSUB BCIRCLE      RECT CX-1,CY-3,CX+2,CY-7,$DF      LINE 99,113,99,133,$10      LINE 111,102,111,133,$10      RECT 100,102,110,133,$DF      LINE 99,107,99,109,$DF      LINE 98,108,101,108,$DF      LINE 97,107,100,107,$DF :PSET 94,107,$C2      LINE 99,134,111,134,$10      LINE 101,134,101,143,$10:LINE 101,143,103,143,$10      LINE 102,142,102,139,$25:LINE 103,144,103,140,$10      LINE 103,145,105,145,$10:LINE 104,144,104,139,$25      LINE 105,146,105,140,$10:LINE 105,146,107,146,$10      LINE 106,145,106,139,$25:LINE 107,146,107,140,$10      LINE 107,145,109,145,$10:LINE 108,144,108,139,$25      LINE 109,145,109,134,$10:RECT 102,139,108,135,$25      RETURNDRWRIGHTARM:      Q1=1:Q2=0:Q3=0:Q4=0:FILL=0      XSQUISH=.52      RA=16:CC=$10      CY=118:CX=54      DM$="RIGHT ARM":GOSUB DRAWMSG      GOSUB BCIRCLE:RA=RA+.6      GOSUB BCIRCLE      RA=RA-1:GOSUB BCIRCLE      LINE 54,107,54,109,$DF       XSQUISH=.43:CX = 42:CY = 105:FILL=0       GOSUB BCIRCLE       FOR L=1 TO 3:RA=RA+.3:GOSUB BCIRCLE:NEXT L       CC=$DF:Q1=1:Q2=0:Q3=0:Q4=0:FILL=1:RA=RA-3       GOSUB BCIRCLE:FILL=0       RECT CX-4,CY-8,CX+3,CY+6,$DF       RECT CX-4,CY-4,CX,CY+6,$DF       LINE 34,102,34,133,$10       LINE 46,115,46,133,$10       RECT 35,102,45,133,$DF       LINE 34,134,46,134,$10       LINE 46,CY,46,CY+6,$DF       LINE 47,CY,47,CY+5,$DF       RECT 47,CY,49,CY+3,$DF       LINE 51,CY+4,52,CY+4,$C2       PSET 48,CY+4, $DF      LINE 44,134,44,143,$10:LINE 44,143,42,143,$10      LINE 43,142,43,139,$25:LINE 42,140,42,145,$10      LINE 42,145,40,145,$10:LINE 41,144,41,139,$25      LINE 40,146,40,140,$10:LINE 40,146,38,146,$10      LINE 39,145,39,139,$25:LINE 38,146,38,140,$10      LINE 38,145,36,145,$10:LINE 37,144,37,139,$25      LINE 36,145,36,134,$10:RECT 43,139,37,135,$25      RETURNDRWRIGHTLEG:      DM$="RIGHT LEG":GOSUB DRAWMSG      Q1=1:Q2=0:Q3=0:Q4=0:FILL=0      CC=$10:CX=74:CY=159:RA=8:XSQUISH=.43:YSQUISH=.6      GOSUB BCIRCLE      LINE 70,159,70,192,$10:LINE 55,145,53,192,$10      LINE 53,193,70,193,$10:RECT 56,145,69,192,$46      LINE 55,157,55,192,$46:LINE 54,181,54,192,$46      LINE 57,144,71,144,$46:RECT 69,142,71,154,$46      RECT 72,142,73,153,$46:LINE 63,143,68,143,$46:PSET 70,155,$46      Q1=1:Q2=1:Q3=1:Q4=1:RA=20:XSQUISH=.35:CC=$10:FILL=1:CX=62:CY=208      GOSUB BCIRCLE:RA=RA+1:FILL=0:CC=$12:GOSUB BCIRCLE:FILL=1      XSQUISH=.38:CY=204:CC=$1C:RA=11:GOSUB BCIRCLE      RA = RA+1:CC=$12:FILL=0:GOSUB BCIRCLE      LINE 57,193,57,202,$10:LINE 66,193,66,202,$10      RECT 58,194,65,200,$1C      RETURNDRWLEFTLEG:      Q1=0:Q2=1:Q3=0:Q4=0      CC=$10:CX=74:CY=159:RA=8      DM$="LEFT LEG":GOSUB DRAWMSG:GOSUB BCIRCLE      LINE 77,157,77,192,$10:LINE 90,145,92,192,$10      LINE 77,193,92,193,$10:RECT 78,145,89,192,$46      LINE 90,157,90,192,$46:LINE 91,181,91,192,$46      LINE 74,144,88,144,$46:RECT 76,143,79,155,$46      RECT 74,142,76,153,$46:LINE 74,143,82,143,$46      LINE 77,154,77,156,$46      Q1=1:Q2=1:Q3=1:Q4=1:RA=20:XSQUISH=.35:CC=$10:FILL=1      CX=85:CY=208      GOSUB BCIRCLE      RA=RA+1:FILL=0:CC=$12:GOSUB BCIRCLE:FILL=1      XSQUISH=.38:CY=204:CC=$1C:RA=11:GOSUB BCIRCLE      RA = RA+1:CC=$12:FILL=0:GOSUB BCIRCLE      LINE 80,193,80,202,$10:LINE 89,193,89,202,$10      RECT 81,194,88,200,$1C      RETURNASK2QUIT:     P1=1:DOQUIT=0     GOSUB READPAL     R1%=R%:G1%=G%:B1%=B%     R%=15:G%=15:B%=15 : GOSUB RGBPAL     P1=8     GOSUB READPAL     R2%=R%:G2%=G%:B2%=B%     R%=2:G%=2:B%=2 : GOSUB RGBPAL     COLOR 1,0:CLS     X=7:Y=9:COLOR 1,8     H=11:W=30     GOSUB TEXTBOX     LOCATE 11,14     PRINT "IF YOU QUIT NOW"     LOCATE 13,9     PRINT "IMAGES WILL BE INCOMPLETE"     LOCATE 15,10:PRINT "HIT <ESC> AGAIN TO QUIT";     LOCATE 17 ,9:PRINT "ANY OTHER KEY TO CONTINUE";     GOSUB FLUSHKEYSQUITKEY2:     GET X$:IF X$="" THEN QUITKEY2     R%=R1%:G%=G1%:B%=B1%:P1=1     GOSUB RGBPAL     R%=R2%:G%=G2%:B%=B2%:P1=8     GOSUB RGBPAL     COLOR 1,0:CLS:GOSUB DRAWWAITBOX     IF X$=CHR$(27) THEN DOQUIT=-1     RETURNDRAWWAITBOX:   X=8:Y=18:COLOR 1,12   H=7:W=28   GOSUB TEXTBOX   LOCATE 19,18   PRINT "{YEL}RENDERING{WHT}"   LOCATE 21,12   PRINT "HANGMAN SPLASH SCREEN"   COLOR 1,0   RETURNDRAWMSG:      DM$="DRAWING: {GRN}"+DM$PLAINMSG:      COLOR 7,12:GOSUB CLRMSG      LOCATE 23,9:PRINT DM$;      COLOR 1,0      RETURNCLRMSG:      LOCATE 23,9:PRINT RPT$(32,25);      RETURNRGBPAL:      A=(P1*2)+$FA00      GB%=(G%*16)+B%:VPOKE 1,A,GB%      VPOKE 1,A+1,R%:RETURNREADPAL:      A1=$FA00+(P1*2)      R%=VPEEK(1,A1+1)      GB%=VPEEK(1,A1)      G%=GB%/16      B%=GB% AND $0F      RETURNPAL2PALFADE:      GOSUB READPAL      P3=P1:P1=P2      GOSUB PALFADE      P1=P3      RETURNPALFADE:      DR%=R%:DG%=G%:DB%=B%      GOSUB READPAL      RI=1:IF DR%<R% THEN RI=-1      GI=1:IF DG%<G% THEN GI=-1      BI=1:IF DB%<B% THEN BI=-1INCRGB:      IF DR%<>R% THEN R%=R%+RI      IF DG%<>G% THEN G%=G%+GI      IF DB%<>B% THEN B%=B%+BI      GOSUB RGBPAL      SLEEP J      IF DR%=R% AND DG%=G% AND DB%=B% THEN FADEDONE      GOTO INCRGBFADEDONE:      RETURNSWAPPALET:      A1=$FA00+(P1*2):A2=$FA00+(P2*2)      B1=VPEEK(1,A1):B2=VPEEK(1,A1+1):B3=VPEEK(1,A2):B4=VPEEK(1,A2+1)      VPOKE 1,A1,B3:VPOKE 1,A1+1, B4      VPOKE 1,A2,B1:VPOKE 1,A2+1, B2      RETURNCOPYPALET:      VPOKE 1,$FA00+(P2*2),VPEEK(1,$FA00+(P1*2))      VPOKE 1,$FA00+(P2*2)+1,VPEEK(1,$FA00+(P1*2)+1)      RETURNPAL2BLACK:      FOR A=$FA00 TO $FBFF:VPOKE 1,A,0:NEXT A:RETURNSETDEFPAL:      F$="DPAL.BIN":GOSUB FILEEXISTS      IF NOT FE% THEN GOSUB CREATEDPALBIN      BVLOAD "DPAL.BIN",8,1,$FA00:RETURNCONTROLS:      DATA 32,40,192,48,32,55,238,62,32,72,143,80,32,88,143,96,32,104,214,110      DATA 28,155,62,170,201,195,219,207,226,195,244,207VARINIT:      GOSUB SETREGVARS      FMINIT:XLIMIT=319:YLIMIT=239:UC%=-1      Q1=1:Q2=1:Q3=1:Q4=1:XSQUISH=1:YSQUISH=1:MW%=20:MC%=35      GOSUB INITALPHA      TRUE=-1:FALSE=0      PUTIMAGE=FALSE      LEGCOLOR=$46      BLACK2=$10      RESTORE CONTROLS      FOR I=1 TO 8:FOR C=1 TO 4:READ PC%(I,C):NEXT C:NEXT ISETDRAWPAL:      P1=$25:P2=$FF:GOSUB COPYPALET      P1=1:P2=$FE:GOSUB COPYPALET      P1=$3B:P2=$FD:GOSUB COPYPALET      P1=$C0:P2=5:GOSUB COPYPALET      P1=$10:P2=4:GOSUB COPYPALET      P1=$1A:P2=12:GOSUB COPYPALET      RETURNINITALPHA:      FOR I=65 TO 90        AL%(1,I-64)=0:AL%(2,I-64)=I      NEXT I      RETURNAWAITKEY:      GET X$:IF X$<>"" THEN AWAITKEYGETIT:      GET X$:IF X$="" AND MB=0 THEN GETIT      RETURNCLSGRAPH:      COLOR 1,0:RECT 0,0,XLIMIT,YLIMIT,$10:RETURN