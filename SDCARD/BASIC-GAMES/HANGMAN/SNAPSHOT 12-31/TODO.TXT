HANGMAN GAME TODO LIST.   This list must be completed before I call it Version 1.0LEFT TODO:  4,10,12,13 & 14.    GETTING CLOSE.  10,12,13 & 14 are all ZSM related.                                4 is optional and can be done AFTER code released.                                I'm currently at a total of 844 words.             10 is almost completely done and 13 is pretty close.              The main issue delaying Sound and Music implementation is deciding             how to manage Hi-Ram on Machines that only have 512kb of Hi-Ram.               I am leaning to just loading sound from disk right before play.  I             am probably going to implement that first.   Then if the performance            is acceptable I may just ignore Hi-Ram >512kb or possibly utilize            it to improve BitBlt performance.               I IMPLEMENTED A FEATURE THAT WASN'T ON THE LIST :)            NOW THE HANGMAN DRAWING IS SAVED TO DISC WHEN 1ST DRAWN            AND LOADED FROM DISC DURING GAME PLAY.  MUCH SNAPPIER            GAME RESPONSE FROM THIS.   X.  	XXXXX***Implement a working DEMO Mode***XXXXX  **THIS IS DONE**X.  	XXXXX*** Make sure I’m flushing The Keyboard buffer after any point in the        program that I might have a 	user hit a key from sheer boredom.       (Specifically after drawing Hangman body parts,  review DISCORD         conversation thread with Toboter before checking this one off)        ***XXXXX   **THIS IS DONE**X.      XXXXX***Implement a animated Won a Round screen ( everything below is                  optional )		    a.  See if I can get my fireworks program to run a little faster		    b.  Work on the source files for my CEL animation, reduce or                 eliminate flicker. 		    c.  Decide on Banner colors for a BIGWORD “You Won !” Banner,   also,                Palette animation or Solid or shaded colors ?		    d.  One WON screen for each game or based on either number of wins or                 Random ??? ***XXXXX   This is done.  Though I'm open to suggestions.            ***XXXX  ** THIS IS DONE **4.	    Build at least HWORDS3.DAT for a minimum of 900 words.   If time allows        before SD to be	finalized then an HWORDS4.DAT for 1200 words for         version 1.0    (ALTERED HWORD.DAT FORMAT...   NOW THEY DON'T NEED 300 WORDS        AND AS MATTER OF FACT CAN NOW HOLD MORE, THOUGH 300 REMAINS THE RECOMMENDED        MAXIMUM DUE TO SEQUENTIAL I/O CONSTRAINTS.   NOW THE FIRST LINE IS THE ASCII        STRING IN NUMERIC FORMAT THAT FED TO VAL(X$) WILL GIVE THE NUMBER OF WORDS IN        THAT FILE.)   *** STILL NEED MORE WORDS ***     ANY VOLUNTEERS ?? :)XXXXX***X(a)    Note: Just realized a corrupted .DAT file could hose my program.   I already        did an error halt if the header is wrong.   SO: Implement code to truncate        any line thats to long.   You might have a nonsense word and clue but it        won't really screw up the display that way. * CHANGED BACK TO LINPUT FOR R45 *#***XXXXX ** THIS IS DONE **X. 	    XXXXX*** Prompt the player before exiting the Game on ESC, to confirm they really        want to go back to 	the Main Menu. ***XXXXX   THIS IS DONE. X.	    XXXXX*** Tighten up on Mouse Polling.   Game is occasionally missing Mouse        clicks on wait for user input routines. ***XXXXX **THIS IS DONE.**X.	    XXXXX***Redo The ENTER and Difficulty Controls on the Game Parameter screen as        Graphical Buttons. Implement 3-D press effect on activation. ***XXXXX        THIS IS DONE !!X.	    XXXXX*** Closely coupled to Item 7.   Implement Mouse support on the Game         parameter Screen. ***XXXXX  **THIS IS DONE !!**X.      XXXXX*** Build Graphical Background on the Intro Screen Instead of Doing RECT         and CHAR, and 	drawing a Stick Figure Hangman.   (This is in progress        at the moment.)   BIGWORD  Hangman Banner and Background Music to         remain. This may require rebuilding the Palette 	and Palette        animation for the Banner.   XX IN PROGRESS XX   .. Did a bit more..***XXXXX        BARRING COMMENTS FOR IMPROVEMENT FROM PLAYERS.  THIS IS DONE !!!10.	    Study the documentation I’ve printed out for ZSMKIT from @MooingLemur.        Build a set of 	BASIC GOSUBS for every procedure in the ZSMKIT library.        Not directly for ZSMKIT but 	when I’m doing this finalize how I         want to interface with the SYS call that determines how much Banked Ram        we have.  After I’ve written this dump it into the HANGMAN source and        check Memory usage to determine if some support must be omitted.X.	    XXXXX*** Build .INI file system for HANGMAN for end user preferences for the         GAME. Decide whats going to be configurable via the .INI file.***XXXXX12.     10,11,12,13 & 14 are closely coupled. Decide on what sound effects I want to        be customizable in	the INI file. Decide on final versions of sound         effects and tune them for ones to be done with 	BASIC commands.13. 	Finalize a set of ZSM’s for initial sound effect & music        +Possibly 1 alternate set. (I may have more than 2 files available        for some of these :) )14.	    Implement the code in HANGMAN to manage the ZSM’s I’ve chosen.          Closely coupled to Item	#10. XX.	    I THINK THAT’S IT FOR NOW.  I’LL REMAIN OPEN TO USER SUGGESTIONS TO        ADD TO THE TODO FOR MAYBE A WEEK AFTER I FIRST POST IT.    I WROTE         THIS	FILE TO IMPOSE SOME CODING DISCIPLINE ON MYSELF.   TO OFTEN        I GO OUT ON	TANGENTS.  SO UNLESS A BUG IN THE CODE CROPS UP (Bug         Fixes will be pursued too).  I’M GOING TO DO MY VERY BEST TO BE         DISCIPLINED AND STAY FOCUSED ON THIS LIST.    AFTER 1 WEEK FROM         POST I’M CLOSING THIS LIST TO SUGGESTIONS.	