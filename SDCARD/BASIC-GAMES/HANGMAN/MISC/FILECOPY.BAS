#CONTROLCODES 1

DEF FN UW(W)=W-65536*(W<0)
DEF FN LB(X)=(X+65536*(X>32767))AND $OOFF
DEF FN HB(X)=INT(FNUW((X+65536*(X>32767)))/256)

GOSUB SETREGVARS
CLS:PRINT
INPUT "{GRN}ENTER SOURCE FILE{WHT}:";SOURCEFILE$
PRINT
INPUT "{GRN}ENTER DESTINATION FILE{WHT}:";DESTFILE$
PRINT:PRINT
OHB=PEEK(0)
F$=SOURCEFILE$:GOSUB FILEEXISTS
IF FE% THEN PRINT SOURCEFILE$;" FOUND":PRINT
GOSUB GETFILESIZE
PRINT "{GRN}FILE SIZE:{WHT} ";FILESIZE:PRINT:PRINT:PRINT
F$=DESTFILE$:GOSUB FILEEXISTS
IF FE% THEN PRINT DESTFILE$;" EXISTS !!!":PRINT " ABORTING !{CR}{CR}":END
GOSUB MAKEFILE
IF CF% THEN PRINT DESTFILE$;"{GRN} SUCCESSFULLY CREATED{WHT}{CR}{CR}"
PRINT "{YEL}COPYING{CR}{CR}"
STARTTIME=TI
GOSUB COPYFILE
ENDTIME=TI
PRINT "{WHT}";BYTESCOPIED;"{GRN}TO {WHT}";DESTFILE$
PRINT:PRINT "{GRN}TIME{WHT}:";ENDTIME-STARTTIME
PRINT:PRINT:PRINT
END

FILEEXISTS:
   X$=F$:FE%=0:X$=X$+",S,R"
   OPEN 2,8,2,X$:CLOSE 2
   OPEN 15,8,15:INPUT#15,X,X$,A,B
   CLOSE 15:FE%=(X<=20):RETURN

MAKEFILE:
   X$=F$:FE%=0:X$="@:"+X$+",S,W"
   OPEN 2,8,2,X$:CLOSE 2
   OPEN 15,8,15:INPUT#15,X,X$,A,B
   CLOSE 15:CF%=(X<=20):RETURN


GETFILESIZE:
  OPEN 1,8,0,"$"+F$
  FOR I=1 TO 6: GET#1, X$: NEXT I: REM SKIP HEADER
SIZELOOP:
  GET#1, X$: IF ASC(X$) THEN SIZELOOP: REM SKIP VOLUME LABEL
  GET#1, X$: GET#1, X$: REM SKIP LINE LINK
  GET#1, L$: GET#1, H$: REM GET SIZE
  CLOSE 1
  BS=ASC(L$)+256*ASC(H$)
  FILESIZE=BS*256
  RETURN


COPYFILE:
  BYTESCOPIED=0
  OPEN 2,8,2,"@:"+DESTFILE$+",S,W"
  OPEN 4,8,4,SOURCEFILE$+",S,R"
  FOR I=0 TO 1 STEP 0
      BINPUT# 4, X$, 255
      J=ST
      PRINT# 2, X$;
      BYTESCOPIED=BYTESCOPIED+LEN(X$)
      IF (J AND 64) THEN I=1
  NEXT I
  CLOSE 2:CLOSE 4
  RETURN



COPYFILE2:
  EOF=0:BYTESREAD=0
  OPEN 2,8,2,"@:"+DESTFILE$+",S,W"
  POKE X.REG, 2
  SYS CHKOUT
  OPEN 4,8,4,SOURCEFILE$+",S,P"
  POKE X.REG, 4
  SYS CHKIN
  FOR L=0 TO 2 STEP 0
    GOSUB FILLBUFFER
    GOSUB WRITEBUFFER
    IF EOF OR BYTESWRITTEN=>FILESIZE THEN L=2
  NEXT L
  CLOSE 2
  CLOSE 4
  SYS CLRCHN
  IF BYTESWRITTEN=FILESIZE THEN PRINT "SUCCESS !"
  RETURN


WRITEBUFFER:
  BANK2
  ADDR=$A000
  FOR X=1 TO 3 STEP 0
      BYTES=BYTESTOWRITE-BR:IF BYTES>$FF THEN BYTES=$FF
      POKE A.REG, BYTES
      POKE X.REG, FN LB(ADDR)
      POKE Y.REG, FN HB(ADDR)
      POKE C.REG, $01
      SYS MCIOUT
      GOTBYTES=PEEK(X.REG)
      BR=BR+GOTBYTES
      ADDR=ADDR+GOTBYTES
      IF EOF OR BR=BUFFSIZE THEN X=3
   NEXT X

FILLBUFFER:
  BANK 2
  ADDR=$A000
  BUFFSIZE=8190:BR=0
  FOR X=1 TO 3 STEP 0
      BYTES=BUFFSIZE-BR:IF BYTES>$FF THEN BYTES=$FF
      POKE A.REG, BYTES
      POKE X.REG, FN LB(ADDR)
      POKE Y.REG, FN HB(ADDR)
      POKE C.REG, $01
      SYS MACPTR
      EOF=ST
      GOTBYTES=PEEK(X.REG)
      BR=BR+GOTBYTES
      BYTESREAD=BR+BYTESREAD
      ADDR=ADDR+GOTBYTES
      IF EOF OR BR=BUFFSIZE THEN X=3
   NEXT X
   RETURN


















SETREGVARS:
  A.REG = $030C
  X.REG = $030D
  Y.REG = $030E
  C.REG = $030F
  SET.MEM = $FF99
  R0L=$02:R0H=$03:R0=R0L
  R1L=$04:R1H=$05:R1=R1L
  R2L=$06:R2H=$07:R2=R2L
  R3L=$08:R3H=$09:R3=R3L
  R4L=$A:R4H=$B:R4=R4L
  R5L=$C:R5H=$D:R5=R5L
  R6L=$E:R6H=$F:R6=R6L
  R7L=$10:R7H=$11:R7=R7L
  R8L=$12:R8H=$13:R8=R8L
  R9L=$14:R9H=$15:R9=R9L
  R10L=$16:R10H=$17:R10=R10L
  R11L=$18:R11H=$19:R11=R11L
  R12L=$1A:R12H=$1B:R12=R12L
  R13L=$1C:R13H=$1D:R13=R13L
  R14L=$1E:R14H=$1F:R14=R14L
  R15L=$20:R15H=$21:R15=R15L
  CHKOUT=$FFC9:CHKIN=$FFC6:CLRCHN=$FFCC
  MCIOUT=$FEB1:MACPTR=$FF44:
  VERA.DATA0=$9F23:VERA.DATA1=$9F24:VERA.CTRL=$9F25
  VERA.DCVIDEO=$9F29
  LAYER0.ON=16
  LAYER0.OFF=239
  LAYER1.ON=32
  LAYER1.OFF=223
  FB.CURSOR.POSITION=$FEFF
  FB.CURSOR.NEXTLINE=$FF02
  SCREEN.SIZE=$12C00
  RETURN
