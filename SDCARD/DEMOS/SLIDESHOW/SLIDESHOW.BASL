DIM NV$(20), NN$(20),NV%,FV%
SCREEN 1
REM SET THIN FONT
POKE$30C,4:SYS$FF62
F$="SLIDESHOW.INI"
COLOR 1,0:CLS
PRINT
PRINT " READING: ";F$;" ..";
GOSUB READINI
PRINT
IF NV%=0 THEN PRINT "SLIDESHOW.INI NOT FOUND...":PRINT:PRINT:END
I$="MANUALSETUP":GOSUB GETINIVALUE
IF I$="ON" THEN GOTO STARTMAN:
I$="MUSIC":GOSUB GETINIVALUE
IF I$="OFF" THEN SKIPZSM
REM SET $8C00 AS TOP OF BASIC RAM. THIS IS WHERE ZSMKIT LIB WILL GO
REM FETCH BANK COUNT IN ".A" REGISTER
STARTMAN:
   PRINT " LOADING ZSMKIT...."
   POKE $30F,1: SYS $FF99
   POKE $30D,$00:POKE $30E,$8C:POKE $30F,0:SYS $FF99
REM CLEAR VARIABLES, WHICH RE-READS MEMTOP
   CLR
   REM LOAD ZSMKIT LIB
   BLOAD"ZSMKIT8C00.BIN",8,1,$8C00
REM VV HOLDS CURRENT VOLUME LEVEL, RESERVED !!
   VV=63
SKIPZSM:
    DEF FN INC(X) = X+1
    IF I$="OFF" THEN SKIPRELOAD
    F$="SLIDESHOW.INI"
    PRINT
    PRINT " RELOADING ";F$;" (AFTER CLR)..";
    GOSUB READINI
SKIPRELOAD:
    I$="MANUALSETUP":GOSUB GETINIVALUE
    IF I$="ON" THEN CONTINUEMAN

    I$="IMAGEDIR":GOSUB GETINIVALUE
    ID$="DATA"
    IF I$<>"" THEN ID$=I$

    I$="IMAGECOUNT":GOSUB GETINIVALUE
    NI=VAL(I$)

    I$="MUSIC":GOSUB GETINIVALUE
    IF I$="ON" OR I$="YES" THEN GOSUB ZSMINIT
    IF I$="ON" OR I$="YES" THEN MU$="Y"

    IF MU$<> "Y" THEN SKIPIT
    I$="MUSICFILE":GOSUB GETINIVALUE
    MF$=I$
    GOSUB LOADZSM
    GOSUB STARTMUSIC

SKIPIT:
    I$="FASTSHOW":GOSUB GETINIVALUE
    ID=1750
    IF I$="OFF" OR I$="NO" THEN ID=1750
    IF I$="ON" OR I$="YES" THEN ID=350

    I$="SHOWFILENAME":GOSUB GETINIVALUE
    FS$="N"
    IF I$="ON" OR I$="YES" THEN FS$="Y"

    I$="RANDOM":GOSUB GETINIVALUE
    IF I$="ON" OR I$="YES" THEN C=1:GOTO STARTSHOW

    I$="LOOP":GOSUB GETINIVALUE
    IF I$="ON" OR I$="YES" THEN C=2:GOTO STARTSHOW
    C=3:GOTO STARTSHOW

CONTINUEMAN:
   I$="IMAGECOUNT":GOSUB GETINIVALUE
   NI=VAL(I$)
   I$="IMAGEDIR":GOSUB GETINIVALUE
   ID$="DATA"
   IF I$<>"" THEN ID$=I$
REM INITIALIZE ZSMKIT
   GOSUB ZSMINIT

SHOWMENU:
    CLS:PRINT
    PRINT "SET UP SLIDE SHOW VARIABLES":PRINT
    COLOR 5:PRINT "     1.";:COLOR 1:PRINT "   RANDOM IMAGES"
    COLOR 5:PRINT "     2.";:COLOR 1:PRINT "   SEQUENTIAL IMAGES THEN LOOP"
    COLOR 5:PRINT "     3.";:COLOR 1:PRINT "   SEQUENTIAL IMAGES THEN END"
    COLOR 5:PRINT "     4.";:COLOR 1:PRINT "   END NOW AND ABORT"
    PRINT:PRINT:COLOR 1

GETCHOICE:
    PRINT:INPUT "CHOICE: ";C
    IF C=1 OR C=2 OR C=3 THEN GOTCHOICE
    IF C=4 THEN RESET
    FMDRUM 7,87:GOTO SHOWMENU
GOTCHOICE:
    PRINT:PRINT:PRINT
    INPUT "PLAY MUSIC  Y/N";MU$
    IF LEN(MU$)>1 THEN MU$=LEFT$(MU$,1)
    IF MU$="Y" OR MU$="N" THEN GOTMUSIC
    PRINT "INVALID CHOICE !";CHR$(7):GOTO GETCHOICE
GOTMUSIC:
    IF MU$="Y" THEN MUSICMENU
    GOTO CHOOSESPEED

MUSICMENU:
    CLS:PRINT:PRINT
    PRINT "CHOOSE SOUNDTRACK":PRINT
    PRINT "    1. CANYON.ZSM"
    PRINT "    2. SB_INTRO.ZSM"
    PRINT "    3. STAGE.ZSM":
    PRINT "    4. ENTER YOUR OWN ZSM FILE NAME.  (NO ERROR CHECKING)"
    PRINT:PRINT
    COLOR 7
    PRINT "CANYON.ZSM":COLOR 5:PRINT
    PRINT " IS FROM THE CX16-DEV SD, AUDIO DEMOS"

    PRINT:PRINT:COLOR 7
    PRINT "SB_INTRO.ZSM":COLOR 5:PRINT:PRINT "                PROVIDED BY: ";
    COLOR 7
    PRINT "NICCO1690":COLOR 5
    PRINT " ORIGINAL MUSIC COMPOSED BY: ";:COLOR 7
    PRINT "TERO & TONI HILIPNEN":PRINT:PRINT
    COLOR 1
    INPUT "SOUNDTRACK CHOICE: ";MC
    IF MC<> 1 AND MC<> 2 AND MC<> 3 AND MC<> 4 THEN BADCHOICE

    IF MC=1 THEN MF$="CANYON.ZSM"
    IF MC=2 THEN MF$="SB_INTRO.ZSM"
    IF MC=3 THEN MF$="STAGE.ZSM"
    IF MC=4 THEN PRINT;:INPUT "ENTER ZSM FILE NAME:";MF$
    COLOR 1:LOCATE 2,2:CLS
    GOSUB LOADZSM
    GOSUB STARTMUSIC
    I1 = 0
    D0=0
    DT=0:GOTO CHOOSESPEED
BADCHOICE:
    PRINT "INVALID CHOICE";CHR$(7):SLEEP 90:GOTO MUSICMENU

CHOOSESPEED:
    PRINT:PRINT
SPDCHOICE:
    INPUT "FAST MODE (MINIMAL DELAY) Y/N";X$
    IF X$<>"" THEN X$=LEFT$(X$,1)
    IF X$="Y" OR X$="N" THEN SHOWFILENAME
    PRINT CHR$(7):GOTO SPDCHOICE

SHOWFILENAME:
    PRINT:PRINT:COLOR 5
    PRINT "WILL NOT BE VISIBLE ON ALL IMAGES":COLOR 1
    INPUT "SHOW IMAGE FILE NAME   Y/N";FS$
    IF FS$<>"" THEN FS$=LEFT$(FS$,1)
    IF FS$="Y" OR FS$="N" THEN SETSPEED
    PRINT CHR$(7):GOTO SHOWFILENAME

REM ID IS IMAGE DELAY
SETSPEED:
    ID=1750:IF X$="Y" THEN ID=350
STARTSHOW:
    SCREEN $80:SLEEP 0:RECT 0,0,319,239,$10
    REM REPEAT
REM SELECT IMG NUMBER
GETIMGNUMBER:
    IF C=1 THEN I1=INT(RND(0)*NI)+1
    IF C=1 AND I1=LR THEN GETIMGNUMBER
    LR=I1
    IF C=1 THEN BLDFILENAME
SEQFILE:
    I1= FNINC(I1):DT=0
    IF I1=NI+1 AND C=3 THEN D0=1:GOTO SKIPLOOP
    IF I1=NI+1 THEN I1=0:GOTO SEQFILE
BLDFILENAME:
    SF$=RIGHT$(STR$(I1),LEN(STR$(I1))-1)
    IF LEN(SF$)<3 THEN SF$= RPT$(ASC("0"),3-LEN(SF$))+SF$
    SF$=SF$+".BIN"
    IM$=ID$+"/"+"IMG"+SF$
    PA$=ID$+"/"+"VPAL"+SF$
    GOSUB PAL2BLACK
    GOSUB GETPLAYKEY
    BVLOAD IM$,8,0,0
    BVLOAD PA$,8,1,$FA00
    IF FS$="N" THEN SKIPNAME
    COLOR 1,0
    LOCATE 2,2:PRINT "                                        ";
    LOCATE 2,2:PRINT IM$;
SKIPNAME:
    GOSUB GETPLAYKEY
    IF DT < ID THEN SKIPNAME
SKIPLOOP:
    DT=0
REM UNTIL D0<>0
    IF D0=0 THEN GETIMGNUMBER
    EL=32
CLEANUP:
    IF EL > 30 THEN SLEEP 150
    R%=15:G%=15:B%=15:P1=1:GOSUB RGBPAL
    R%=4:G%=4:B%=4:P1=10:GOSUB RGBPAL
    COLOR 1,10
    LOCATE 30,1:PRINT " ENDING";
    FOR I= 1 TO EL:SLEEP 18:PRINT ".";:NEXT I
    RESET

GETPLAYKEY:
     GET Z$
     Z=ASC(Z$)
     IF Z=32 THEN GOSUB TOGGLEPLAY
     IF Z=17 THEN GOSUB VOLDOWN
     IF Z=145 THEN GOSUB VOLUP
     DT=DT+1
     IF Z=27 THEN GOSUB ASK2QUIT
     RETURN

ASK2QUIT:
     P1=1
     GOSUB READPAL
     R1%=R%:G1%=G%:B1%=B%
     R%=15:G%=15:B%=15 : GOSUB RGBPAL
     P1=8
     GOSUB READPAL
     R2%=R%:G2%=G%:B2%=B%
     R%=2:G%=2:B%=2 : GOSUB RGBPAL
     X=7:Y=10:COLOR 1,8
     H=9:W=30
     GOSUB TEXTBOX
     LOCATE 12,9
     PRINT "DO YOU REALLY WANT TO QUIT?";
     LOCATE 14,9:PRINT " HIT <ESC> AGAIN TO RESET";
     LOCATE 16 ,9:PRINT " ANY OTHER KEY TO CONTINUE";
QUITKEY:
     GET X$:IF X$="" THEN QUITKEY
     R%=R1%:G%=G1%:B%=B1%:P1=1
     GOSUB RGBPAL
     R%=R2%:G%=G2%:B%=B2%:P1=8
     GOSUB RGBPAL
     COLOR 1,0:CLS
     IF X$=CHR$(27) THEN EL=6:GOTO CLEANUP
     RETURN

REM FLIP PLAYSTATE
TOGGLEPLAY:
     IF PS=1 THEN GOSUB PAUSEMUSIC:RETURN
     GOSUB STARTMUSIC
     RETURN


REM INITIALIZE ZSMKIT
REM RAM BANK 1 IS GIVEN TO ZSMKIT
REM ZSM-INIT-ENGINE
ZSMINIT:
     POKE $30C,1
     SYS $8C00
REM SET UP THE DEFAULT INTERRUPT HANDLER
REM ZSMKIT-SETISR
     SYS $8C54
REM NOW ZSMKIT IS ALL SET UP TO PLAY MUSIC
     RETURN

REM LOAD THE DEFAULT SONG. ZSMKIT OWNS BANK 1, SO LOAD SONG
REM STARTING IN BANK 2
LOADZSM:
    PRINT
    PRINT " LOADING: ";MF$
    BLOAD MF$,8,2,$A000
REM NOW TELL ZSMKIT WHERE THE SONG LIVES
REM USE ZSMKIT PRIORITY (SLOT) 0
     BANK 2:POKE$30D,0:POKE$30C,$00:POKE$30E,$A0
REM ZSM-SETMEM
     SYS $8C1E
REM NOW WE'RE CLEAR TO START SONG PLAYBACK
     RETURN

REM START PLAYBACK
REM PRIORITY (SLOT) 0, THEN ZSM-PLAY
STARTMUSIC:
     POKE$30D, 0
     PS=1
     SYS $8C06
     RETURN

REM PAUSE PLAYBACK
REM PRIORITY (SLOT) 0, THEN ZSM-STOP
PAUSEMUSIC:
     POKE$30D,0
     SYS $8C09
     PS=0
     RETURN

REM VOLUME DOWN
VOLDOWN:
     IF VV=0 THEN RETURN
     VV=VV-1
     FOR VC=0 TO 7
         FMVOL VC, VV
         PSGVOL VC, VV
     NEXT VC
     FOR VC=8 TO 15
       PSGVOL VC, VV
     NEXT VC
     RETURN

REM VOLUME UP
VOLUP:
IF VV=63 THEN RETURN
     VV=VV+1
     FOR VC=0 TO 7
         FMVOL VC, VV
         PSGVOL VC, VV
     NEXT VC
     FOR VC=8 TO 15
       PSGVOL VC, VV
     NEXT VC
     RETURN

REM DRAW TEXT BOX WITH BORDER.  COPIED FROM HANGMAN
TEXTBOX:
     LOCATE Y,X
     PRINT CHR$($6F);RPT$($A3,W-2);CHR$($70);
     IF H=2 THEN SKIPCENTER
     FOR II = 1 TO H-2
         LOCATE Y+II,X
         PRINT CHR$($A5);RPT$(32,W-2);CHR$($A7);
     NEXT II
SKIPCENTER:
     LOCATE Y+H-1,X
     PRINT CHR$($6C);RPT$($A4,W-2);CHR$($BA);
     RETURN

REM SET OF GOSUBS FOR DIRECT VERA PALLETTE MANIPULATION
REM USES VPOKE & VPEEK
REM FOR THE OTHER ROUTINES TO WORK RELIABLY SHOULD GOSUB SETDEFPAL
REM FIRST.    ALSO GOSUB SETDEFPAL IS USED AT ANY TIME TO RESET
REM THE VERA PALLETTE TO DEFAULT VALUES.
REM ..
REM ...
REM WHEN THE VERA IS INITIALLY SET TO GRAPHICS MODE IT USES THE
REM DEFAULT PALLETTE BUT IF YOU USE VPEEK TO READ IT RETURNS
REM RANDOM GARBAGE...    AFTER YOU VPOKE THEM IT ALL WORKS
REM AS EXPECTED.
REM .
REM ...
REM THIS CODE DOES ABSOLUTELY NO ERROR CHECKING !!!!!!
REM IF USING R%,G% OR B% VALUES SHOULD ALWAYS BE BETWEEN
REM 0-15
REM .
REM ...
REM WHEN USING P1 AND P2 TO POINT AT PALLETTE ENTRYS THEY SHOULD
REM ALWAYS BE BETWEEN 0 AND 255
REM I HAD ERROR CHECKING CODE WHEN WRITING THESE ROUTINES
REM BUT ERROR CHECKING TAKES CPU CYCLES....   JUST KEEP THE VALUES
REM CORRECT BEFORE CALLING.
REM .
REM ..
REM GOSUB SETDEFPAL POKES IN THE DEFAULT PALLETTE VALUES
REM                 SHOULD BE CALLED AT INIT.   AND THEN ANY TIME
REM                 TO RESET THE VERA TO DEFAULT VALUES
REM ..
REM GOSUB RGBPAL..   SETS PALLETTE ENTRY P1 TO R%,G%,B%
REM ..
REM GOSUB READPAL..   READS VALUES AT P1 RETURNS IN R%,G%,B%
REM ..
REM GOSUB PAL2PALFADE..   CHANGES THE PALLETTE COLOR P2 TO P1. BUT DIFFERENT THAN COPYPAL
REM                       COPYPAL CHANGES IT FAST.   PAL2PALFADE IMPLEMENTS A FADE WITH SPEED
REM                       CONTROLLED BY THE VALUE OF J (BIGGER VALUE=SLOWER)
REM                       ACTUALLY MOST OF THE WORK DONE BY GOSUB TO FADEPAL
REM ..
REM GOSUB FADEPAL     FADES PALLETTE COLOR AT P1 TO R%,G%,B%
REM                 SPEED CONTROLLED BY THE VALUE OF J.    1 TO 10
REM                 IS SO FAR BEST FOR ME BUT I DIDN'T RESTRICT VALUES
REM                 THE BIGGER J IS.. THE SLOWER THE FADE.
REM ..
REM GOSUB SWAPPAL..   SWAPS THE PALLETTE VALUES BETWEEN P1 AND P2
REM                 IF AND ITS A BIG IF...  I MAKE FURTHER CHANGES
REM                 THE NEXT ROUTINE I MAKE WILL BE TO DO THIS AS A
REM                 ..FADE.. USING A SIMILIAR ALGORITHM I USED IN GOSUB FADEPAL
REM ..
REM GOSUB COPYPAL..   COPYS PALLETTE ENTRY P1 TO P2.   P1 IS UNCHANGED
REM ..
REM .
REM GOSUB 44500..   SETS THE PALLETTE TO ALL BLACK.  CAN DRAW STUFF ON SCREEN
REM                 OR LOAD AN IMAGE UNSEEN.   THEN LOAD A PALLETTE TO REVEAL IT.
REM ..
REM ...



      REM SET PALLETTE ENTRY P1 TO R%,G%,B%
RGBPAL:
      VPOKE 1,$FA00+(P1*2),(G%*16) + B%
      VPOKE 1,$FA00+((P1*2)+1),R%
      RETURN

REM READ PALLETTE ENTRY AT P1
REM RETURNED IN %R,%G,%B
READPAL:
      A1 = $FA00+(P1*2)
      R% = VPEEK(1,A1+1)
      GB%= VPEEK(1,A1)
      G% = GB%/16
      B% = GB% AND $0F
      RETURN

      FADE P2 FROM CURRENT COLOR TO P1 COLOR, J IS JIFFY DELAY
PAL2PALFADE:
      GOSUB READPAL
      P3=P1
      P1=P2
      GOSUB FADEPAL
      P1=P3
      RETURN
      REM FADE P1 TO R%,G%,B%, J IS JIFFY DELAY
FADEPAL:
      DR%=R%:DG%=G%:DB%=B%
      GOSUB READPAL
      RI=1:IF DR%<R% THEN RI=-1
      GI=1:IF DG%<G% THEN GI=-1
      BI=1:IF DB%<B% THEN BI=-1
FADELOOP:
      IF DR%<>R% THEN R%=R%+RI
      IF DG%<>G% THEN G%=G%+GI
      IF DB%<>B% THEN B%=B%+BI
      GOSUB RGBPAL
      SLEEP J
      IF DR%=R% AND DG%=G% AND DB%=B% THEN ENDFADE
      GOTO FADELOOP
ENDFADE:
      RETURN


      REM SWAP PALLETTE COLORS AT P1 & P2
SWAPPAL:
      A1 = $FA00+(P1*2)
      A2 = $FA00+(P2*2)
      B1 = VPEEK (1,A1)
      B2 = VPEEK (1,A1+1)
      B3 = VPEEK (1,A2)
      B4 = VPEEK (1,A2+1)
      VPOKE 1, A1, B3
      VPOKE 1, A1+1, B4
      VPOKE 1, A2, B1
      VPOKE 1, A2+1, B2
      RETURN

REM COPY P1 PALLETTE ENTRY TO P2.. P1 IS LEFT UNCHANGED.
COPYPAL:
      VPOKE 1,$FA00+(P2*2), VPEEK(1, $FA00+(P1*2))
      VPOKE 1,$FA00+(P2*2)+1, VPEEK(1, $FA00+(P1*2)+1)
      RETURN

REM SET THE PALLETTE TO ALL BLACK
PAL2BLACK:
      FOR A=$FA00 TO $FBFF
          VPOKE 1,A,0
      NEXT A
      RETURN

SETDEFPAL:
      RESTORE PALDATA
      REM LOOP THROUGH THE PALLETTE ADDRESS SPACE
      REM AND POKE THE VERA DEFAULT PALLETTE
      FOR PE = $FA00 TO $FBFE STEP 2
          READ R:READ GB
          VPOKE 1,PE,GB
          VPOKE 1,PE+1, R
      NEXT PE
      RETURN

      REM DEFAULT VERA PALLETTE AS DATA. FROM 0 TO 255 (2 BYTES EACH ENTRY)RGB
PALDATA:
      DATA $00,$00,$0F,$FF,$08,$00,$0A,$FE,$0C,$4C,$00,$C5,$00,$0A,$0E,$E7,$0D
      DATA $85,$06,$40,$0F,$77,$03,$33,$07,$77,$0A,$F6,$00,$8F,$0B,$BB,$00,$00
      DATA $01,$11,$02,$22,$03,$33,$04,$44,$05,$55,$06,$66,$07,$77,$08,$88,$09
      DATA $99,$0A,$AA,$0B,$BB,$0C,$CC,$0D,$DD,$0E,$EE,$0F,$FF,$02,$11,$04,$33
      DATA $06,$44,$08,$66,$0A,$88,$0C,$99,$0F,$BB,$02,$11,$04,$22,$06,$33,$08
      DATA $44,$0A,$55,$0C,$66,$0F,$77,$02,$00,$04,$11,$06,$11,$08,$22,$0A,$22
      DATA $0C,$33,$0F,$33,$02,$00,$04,$00,$06,$00,$08,$00,$0A,$00,$0C,$00,$0F
      DATA $00,$02,$21,$04,$43,$06,$64,$08,$86,$0A,$A8,$0C,$C9,$0F,$EB,$02,$11
      DATA $04,$32,$06,$53,$08,$74,$0A,$95,$0C,$B6,$0F,$D7,$02,$10,$04,$31,$06
      DATA $51,$08,$62,$0A,$82,$0C,$A3,$0F,$C3,$02,$10,$04,$30,$06,$40,$08,$60
      DATA $0A,$80,$0C,$90,$0F,$B0,$01,$21,$03,$43,$05,$64,$07,$86,$09,$A8,$0B
      DATA $C9,$0D,$FB,$01,$21,$03,$42,$04,$63,$06,$84,$08,$A5,$09,$C6,$0B,$F7
      DATA $01,$20,$02,$41,$04,$61,$05,$82,$06,$A2,$08,$C3,$09,$F3,$01,$20,$02
      DATA $40,$03,$60,$04,$80,$05,$A0,$06,$C0,$07,$F0,$01,$21,$03,$43,$04,$65
      DATA $06,$86,$08,$A8,$09,$CA,$0B,$FC,$01,$21,$02,$42,$03,$64,$04,$85,$05
      DATA $A6,$06,$C8,$07,$F9,$00,$20,$01,$41,$01,$62,$02,$83,$02,$A4,$03,$C5
      DATA $03,$F6,$00,$20,$00,$41,$00,$61,$00,$82,$00,$A2,$00,$C3,$00,$F3,$01
      DATA $22,$03,$44,$04,$66,$06,$88,$08,$AA,$09,$CC,$0B,$FF,$01,$22,$02,$44
      DATA $03,$66,$04,$88,$05,$AA,$06,$CC,$07,$FF,$00,$22,$01,$44,$01,$66,$02
      DATA $88,$02,$AA,$03,$CC,$03,$FF,$00,$22,$00,$44,$00,$66,$00,$88,$00,$AA
      DATA $00,$CC,$00,$FF,$01,$12,$03,$34,$04,$56,$06,$68,$08,$8A,$09,$AC,$0B
      DATA $CF,$01,$12,$02,$24,$03,$46,$04,$58,$05,$6A,$06,$8C,$07,$9F,$00,$02
      DATA $01,$14,$01,$26,$02,$38,$02,$4A,$03,$5C,$03,$6F,$00,$02,$00,$14,$00
      DATA $16,$00,$28,$00,$2A,$00,$3C,$00,$3F,$01,$12,$03,$34,$05,$46,$07,$68
      DATA $09,$8A,$0B,$9C,$0D,$BF,$01,$12,$03,$24,$04,$36,$06,$48,$08,$5A,$09
      DATA $6C,$0B,$7F,$01,$02,$02,$14,$04,$16,$05,$28,$06,$2A,$08,$3C,$09,$3F
      DATA $01,$02,$02,$04,$03,$06,$04,$08,$05,$0A,$06,$0C,$07,$0F,$02,$12,$04
      DATA $34,$06,$46,$08,$68,$0A,$8A,$0C,$9C,$0F,$BE,$02,$11,$04,$23,$06,$35
      DATA $08,$47,$0A,$59,$0C,$6B,$0F,$7D,$02,$01,$04,$13,$06,$15,$08,$26,$0A
      DATA $28,$0C,$3A,$0F,$3C,$02,$01,$04,$03,$06,$04,$08,$06,$0A,$08,$0C,$09
      DATA $0F,$0B

FILEEXISTS:
      X$=F$:FE%=0:X$=X$+",S,R"
      OPEN 2,8,2,X$:CLOSE 2
      OPEN 15,8,15:INPUT#15,X,X$
      CLOSE 15:FE%=(X<=20):RETURN

GETINIVALUE:
   I=1
GETILOOP:
   IF NN$(I)=I$ THEN I$=NV$(I):RETURN
   I=I+1
   IF I>NV% THEN I$="":RETURN
   GOTO GETILOOP

READINI:
    NV%=0:FV%=0
    GOSUB FILEEXISTS
    IF NOT FE% THEN RETURN
    FF$=F$+ ",S,R"
    OPEN 4,8,4,FF$
    DOINILOOP:
        LINPUT#4, S$
        GOSUB TRIM
        GOSUB UCASE
        IF LEFT$(S$,4)="REM " OR S$="" OR S$="REM" THEN CONTLOOP
        PRINT ".";
        GOSUB GETINIVAR
        IF TN$="" THEN CONTLOOP
        NV%=NV%+1
        NN$(NV%)=TN$:NV$(NV%)=TV$
    CONTLOOP:
       IF ST=0 AND NV%<20 THEN DOINILOOP
    CLOSE 4
    FV%=(NV%>0)
    PRINT:RETURN

GETINIVAR:
       SC$="":TN$="":TV$=""
       J=1
  DOINIPARSE:
       T$=MID$(S$,J,1)
       IF T$="=" THEN GOTINI
       SC$=SC$+T$
       J=J+1:IF J>LEN(S$) THEN ENDINI
       GOTO DOINIPARSE
GOTINI:
       J=J+1
       TT$=S$
       S$=SC$
       SC$=""
       GOSUB RTRIM
       TN$=S$
       S$=TT$
  VALUEPARSE:
       T$=MID$(S$,J,1)
       SC$=SC$+T$
       J=J+1:IF J>LEN(S$) THEN ENDINI
       GOTO VALUEPARSE
ENDINI:
     TT$=S$
     S$=SC$
     GOSUB TRIM
     TV$=S$
     S$=TT$
  RETURN

UCASE:
   IF S$="" THEN RETURN
   SC$=""
   FOR I=1 TO LEN(S$)
       T$=MID$(S$,I,1)
       C1=ASC(T$)
       IF C1>=97 AND C1<=122 THEN C1=C1-32
       SC$=SC$+CHR$(C1)
   NEXT I
   S$=SC$
   RETURN

TRIM:
  GOSUB LTRIM
  GOSUB RTRIM
  RETURN

LTRIM:
    IF S$="" THEN RETURN
    I=1:C1=0
DOLOOP:
    T$=MID$(S$,I,1)
    X=ASC(T$)
    IF X > 32 THEN LSTR
    C1=C1+1
   I=I+1
   IF I>LEN(S$) THEN LSTR
   GOTO DOLOOP
LSTR:
   IF C1=LEN(S$) THEN S$=""
   IF C1>0 AND C1<LEN(S$) THEN S$=MID$(S$,C1+1,LEN(S$)-C1)
   RETURN

RTRIM:
    IF S$="" THEN RETURN
    I=LEN(S$):C1=0
DOLOOPR:
    T$=MID$(S$,I,1)
    X=ASC(T$)
    IF X > 32 THEN RSTR
    C1=C1+1
    I=I-1
    IF I<1 THEN RSTR
    GOTO DOLOOPR
RSTR:
    IF C1=LEN(S$) THEN S$=""
    IF C1>0 AND C1<LEN(S$) THEN S$=MID$(S$,1,LEN(S$)-C1)
    RETURN

EDITINI:
      BANK PEEK(0), 0
      RV=PEEK($FF80)
      IF RV>=45 THEN DOIT3
      IF RV<=-45 THEN DOIT3
      RETURN
DOIT3:
      EDIT F$
      RETURN





