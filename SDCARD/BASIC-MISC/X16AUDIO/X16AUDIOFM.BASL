REM X16 SAMPLE PROGRAM TO EXERCISE FM BASIC COMMANDS
REM VOIDSTAR SEPT 2023

REM NOTE: BASLOAD TARGET LABEL LENGTH LIMIT IS 12 CHARACTERS
  R = RND(-TI)

REM SETUP ALL VARIABLES
  CC = 0:REM CURRENT CHANNEL (0-7 FOR FM BASIC COMMANDS; ARRAYS WILL USE 1-8)
  CM = 0:REM CURR. MODE (0=FREQ,1=NOTE,2=DRUM,3=INST,4=PAN,5=VOL,6=SLEEP,6=FMVIB) 
	CU = 0:REM CURRENT AUDIO MODE (0=FREQ,1=NOTE,2=DRUM) [NOT ARRAY]
	CH = 0:REM HOLDS CH. INDEX (AS OPPOSED TO ARRAY INDEXES GO 1 TO N, CH GO 0-7)	
	AU = 0:REM AUTO MODE (0 OFF, ANY OTHER VALUE ENABLE AUTO PLAY)
	
	REM OTHER VARIABLES USED:
	REM ZZ = USED AS A GENERAL PURPOSE FUNTION RESULT INTEGER
	REM NN = USED AS ACTUAL INCREMENT VALUE IN DIAL UP/DOWN (NON ARRAY)
  REM CZ = NEW TARGET CHANNEL (HELPS UPDATE DISPLAY FROM CURR TO NEW)
  REM MZ = NEW TARGET MODE CHANGE (HELPS UPDATE DISPLAY FROM CURR TO NEW)
	REM U1 = STARTING CHANNEL TO UPDATE DURING UPDATEDISP
	REM U2 = ENDING CHANNEL TO UPDATE DURING UPDATEDISP
	REM F$ = FILENAME VARIABLE DURING SAVE/LOAD
	REM I  = GENERAL LOOP INDEX VARIABLE
	REM C  = COMPUTED COLUMN INDEX
	REM A$ AND A = KEYBOARD INPUT POLL (A FOR ASCII)
	
	REM B$ = VERSION BANNER STRING
	REM BL = BANNER LENGTH	
		
	REM LOAD THE SHORT BANNER VALUES...
	BL = 0
	DIM B$(20):REM RESERVE UP TO 20 BYTES
NEXTREAD:		  
	READ ZZ
	B$(BL) = CHR$(ZZ)
	IF (ZZ=0) GOTO DONEBANNER
	BL = BL + 1
	GOTO NEXTREAD
	
DONEBANNER:	
  DIM MR(8):REM MODE ROWS
  MR(0) = 3:REM ROW OF FMFREQ
  MR(1) = 4:REM ROW OF FMNOTE
  MR(2) = 5:REM ROW OF FMDRUM
  MR(3) = 7:REM ROW OF FMINST
  MR(4) = 9:REM ROW OF FMPAN
  MR(5) = 10:REM ROW OF FMVOL
	MR(6) = 12:REM ROW OF SLEEP
	MR(7) = 14:REM ROW OF FMVIB
	
	REM ---------------------------
	DIM NN(8):REM FAST INCREMENT AMOUNTS VARY BY MODE
	NN(0) = 100
	NN(1) = 16
	NN(2) = 8
	NN(3) = 5
	NN(4) = 1
	NN(5) = 4
	NN(6) = 3
	NN(7) = 10
	REM ---------------------------

  DIM CA(8):REM CHANNEL ACTIVE (0 = INACTIVE, ANY OTHER VALUE IS ACTIVE)

  DIM CF(8):REM CURRENT FREQUENCY (FOR FMFREQ)
	DIM CN(8):REM CURRENT NOTE (FMNOTE)

  DIM CD(8):REM CURRENT DRUM (FOR FMDRUM)
  DIM CI(8):REM CURRENT INSTR. (FOR FMINST)
	
  DIM CP(8):REM CURRENT PAN (FOR FMPAN)
  DIM CV(8):REM CURRENT VOLUME (FOR FMVOL)
	
	DIM CS(8):REM CURRENT SLEEP BETWEEN CHANNELS

  FOR I = 1 TO 8	  
		
    CA(I) = 0:REM DEFAULT TO OFF
		
    CF(I) = 100:REM FREQ
		CN(I) = 10:REM NOTE
		
    CD(I) = 87:REM DRUM
    CI(I) = 10:REM INSTRUMENT
		
    CP(I) = 3:REM PAN (BOTH)
    CV(I) = 63:REM VOLUME
		
		CS(I) = 2
		
  NEXT I
  CA(1) = NOT CA(1):REM EXCEPT CH. 1, SET TO ON

  FS = 200:REM CURRENT SPEED (FOR FMVIB)
  FD = 30 :REM CURRENT DEPTH (FOR FMVIB)
	
LOADRESTART:	

  FMINIT:REM SILENCE ANY CURRENT FM AUDIO AND RESET TO DEFAULTS
  
  FOR I = 1 TO 8
		REM INITIALIZE THE FM TO MATCH THE DEFAULTS ABOVE
		CH = I-1
		FMVOL CH,CV(I)
		FMPAN CH,CP(I)
		FMINST CH,CI(I)				
	NEXT I
	FMVIB FS,FD

REM KEYBOARD SCAN CODES
REM 133 = F1
REM 137 = F2
REM 134 = F3
REM 138 = F4
REM 135 = F5
REM 139 = F6
REM 136 = F7
REM 140 = F8
REM 48  = 0
REM 49  = 1
REM 57  = 9
REM 145 = UP ARROW
REM 17  = DOWN ARROW
REM 157 = LEFT ARROW
REM 29  = RIGHT ARROW
REM 130 = PG UP
REM 2   = PG DOWN
REM 93  = ]
REM 91  = [
REM 32  = SPACE
REM 27  = ESCAPE
REM 13  = ENTER
REM 65  = A  (AUTO)
REM 66  = B
REM 67  = C  (COPY)
REM 68  = D
REM 69  = E
REM 70  = F
REM 71  = G
REM 72  = H
REM 73  = I  (INVERT)
REM 74  = J
REM 75  = K
REM 76  = L  (LOAD)
REM 77  = M
REM 78  = N
REM 79  = O
REM 80  = P
REM 81  = Q
REM 82  = R
REM 83  = S  (SAVE)
REM 84  = T  (TOGGLE)
REM 85  = U
REM 86  = V
REM 87  = W
REM 88  = X  (EXPORT)
REM 89  = Y
REM 90  = Z  (SILENCE)

  COLOR 1,6:REM WHITE ON BLUE
	SCREEN 1:REM 80 X 30    

  GOSUB DRAWOVERLAYM	
	
	REM UPDATE ALL THE CHANNELS DURING INITIAL STARTUP
	U1 = 1
	U2 = 8
	GOSUB UPDATEDISP
	
	GOSUB UPDATECURAUD
	GOSUB DRAWHELP

MAINLOOP:

  REM GET USER KEYBOARD INPUT
  GET A$
  A=ASC(A$):REM CONVERT TO "PETSCII" CODE (SOME OVERLAP WITH ASCII)
	
	REM ONLY UPDATE ON THE CURRENT SELECTED COLUMN/CHANNEL
	U1 = CC+1
	U2 = U1
	
  IF A = 49  THEN CZ=0:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH1
  IF A = 50  THEN CZ=1:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH2
  IF A = 51  THEN CZ=2:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH3
  IF A = 52  THEN CZ=3:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH4
  IF A = 53  THEN CZ=4:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH5
  IF A = 54  THEN CZ=5:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH6
  IF A = 55  THEN CZ=6:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH7
	IF A = 56  THEN CZ=7:U1=1:U2=8:GOSUB UPDATEDISP:IF (CA(CC+1)=0) THEN A=84:REM CH8
	
	IF A = 88  THEN GOSUB EXPORTAUDIO

  IF A = 145 THEN MZ=MZ-1:GOSUB UPDATEDISP:REM UP ARROW
  IF A = 17  THEN MZ=MZ+1:GOSUB UPDATEDISP:REM DOWN ARROW
	
	IF A = 67  THEN GOSUB COPYMODE:U1=1:U2=8:GOSUB UPDATEDISP:REM C COMMAND FOR COPY A CHANNEL
	
	IF A = 93  THEN NN=NN(CM):GOSUB DIALUP:GOSUB UPDATEDISP:REM ] FAST UP
	IF A = 91  THEN NN=NN(CM):GOSUB DIALDOWN:GOSUB UPDATEDISP:REM [ FAST DOWN
	
	IF A = 130 THEN FD=FD+1:GOSUB VALIDATEVIB:GOSUB UPDATEDISP:REM PG UP
	IF A = 2   THEN FD=FD-1:GOSUB VALIDATEVIB:GOSUB UPDATEDISP:REM PG DOWN
	
	IF A = 65  THEN AU=NOT AU:REM TOGGLE AUTO MODE
	
	REM SPACEBAR (ALSO SETS THE CURRENT AUDIO MODE)
	IF (A = 32) AND (CM<3)  THEN CU=CM:GOSUB UPDATECURAUD:GOSUB MAKENOISE
	REM SPACEBAR (JUST PLAY CURRENT AUDIO SETTINGS)
	IF (A = 32) AND (CM>=3) THEN GOSUB MAKENOISE
	
	IF A = 73  THEN GOSUB INVERTCHANLS:GOTO LOADRESTART:REM INVERT
	IF A = 84  THEN GOSUB TOGGLECHANL:GOSUB UPDATEDISP:REM T - TOGGLE CURRENT CH
	
	IF A = 157 THEN NN=1:GOSUB DIALDOWN:GOSUB UPDATEDISP:REM LEFT ARROW
	IF A = 29  THEN NN=1:GOSUB DIALUP:GOSUB UPDATEDISP:REM RIGHT ARROW	
	
	IF A = 90  THEN GOSUB SILENCE:REM Z
	
	IF A = 83  THEN GOSUB SAVEALL
	IF A = 76  THEN GOTO LOADALL
	
	IF A = 27  THEN GOTO TERMINATE:REM ESCAPE	
	
	IF (AU <> 0) THEN GOSUB MAKENOISE

REM *** MODEL SOME KIND OF MAIN ACTIVITY TO DO INLINE WITH THE AUDIO ***********
  I = RND(1)*BL
	ZZ = INT(RND(1)*100)
	LOCATE 1,64+I
	IF (ZZ > 50) THEN COLOR 7,6:GOTO GLINTBANNER
	REM IF (ZZ > 33) THEN COLOR 7,6:GOTO GLINTBANNER
	IF (ZZ > 0) THEN COLOR 1,6	
GLINTBANNER:	
	PRINT B$(I)	
	COLOR 1,6
REM ****************************************************************************	

  GOTO MAINLOOP
	
SILENCE:	
  FOR I = 0 TO 7
	  FMFREQ I,0
	NEXT I
	AU = 0:REM MAKE SURE AUTO MODE IS OFF
	RETURN

MAKENOISE:
  FOR I = 1 TO 8 
		
	  CH = I - 1
		
	  IF (CA(I)=0) THEN GOTO MAKEQUIET
		REM ELSE CA(I) IS ON/ACTIVE...
		
		REM FLASH THE CURRENT CHANNEL TO BE MANIPULATED
	  LOCATE  2,7*CH+10
		COLOR 4,6
    PRINT I;					
		
    IF (CM=5) THEN FMVOL CH,CV(I) :REM VOLUME
		IF (CM=4) THEN FMPAN CH,CP(I) :REM PAN
		IF (CM=3) THEN FMINST CH,CI(I):REM INSTRUMENT
		
		IF (CU=0) THEN FMFREQ CH,CF(I):SLEEP CS(I)
	  IF (CU=1) THEN FMNOTE CH,CN(I):SLEEP CS(I)
	  IF (CU=2) THEN FMDRUM CH,CD(I):SLEEP CS(I)

		GOTO SKIPQUIET
		
MAKEQUIET:
    REM DISABLE/SILENT THIS INACTIVE CHANNEL
    FMFREQ CH,0
		FMVOL  CH,0

SKIPQUIET:
    LOCATE  2,7*CH+10
		COLOR 1,6
    PRINT I;	    
  NEXT I			
	
  RETURN
	
COPYMODE:
  LOCATE 25,2
	PRINT "COPY WHICH CH (1-8)?";
	LOCATE 26,2
	PRINT "OR ESC TO CANCEL";
		
	A = 0:REM CANCEL PRIOR KEY, THIS IS NEW INPUT
COPYMODELOOP:
  GET A$
  A=ASC(A$)
	
	REM ALTERNATIVE TO THE LONG LIST BELOW:
	REM IF (A>=49) AND (A<=56) THEN ZZ=AA-48:GOTO COPYMODEDO
	
	REM BUT I PREFER TO BE MORE EXPLICIT (IT'S ONLY 8 OPTIONS)...
  IF A = 49  THEN ZZ=1:GOTO COPYMODEDO:REM CH1
  IF A = 50  THEN ZZ=2:GOTO COPYMODEDO:REM CH2
  IF A = 51  THEN ZZ=3:GOTO COPYMODEDO:REM CH3
  IF A = 52  THEN ZZ=4:GOTO COPYMODEDO:REM CH4
  IF A = 53  THEN ZZ=5:GOTO COPYMODEDO:REM CH5
  IF A = 54  THEN ZZ=6:GOTO COPYMODEDO:REM CH6
  IF A = 55  THEN ZZ=7:GOTO COPYMODEDO:REM CH7
	IF A = 56  THEN ZZ=8:GOTO COPYMODEDO:REM CH8
	
	IF A = 27  THEN GOTO COPYMODEEXIT:REM IF USER PRESS ESC TO ABORT COPY
	
	GOTO COPYMODELOOP:REM POLL AGAIN FOR INPUT
	
COPYMODEDO:REM MEANT "DO COPY MODE"
  CH = CC+1
    	
	CF(CH) = CF(ZZ)
	CN(CH) = CN(ZZ)
	
	CD(CH) = CD(ZZ)
	CI(CH) = CI(ZZ)
	
	CP(CH) = CP(ZZ)
	CV(CH) = CV(ZZ)
	
	CS(CH) = CS(ZZ)
	
  ZZ=CU:REM MAKE BACKUP COPY OF CU
	CU=-1:REM NEEDED SO THAT MAKENOISE JUST UPDATES SETTINGS ONLY
	GOSUB MAKENOISE:REM UPDATE NEW AUDIO SETTING INSTANTLY
	CU=ZZ:REM RESTORE THE BACKUP COPY		
	
COPYMODEEXIT:
  REM ERASE THE BRIEF COPY INSTRUCTIONS
  LOCATE 25,2
	PRINT "                    ";
	LOCATE 26,2
	PRINT "                ";
	
	A = 0:REM MAKE SURE KEY (LIKE ESC) DOESN'T PASS TO MAINLOOP

  RETURN	
	
TOGGLECHANL:
  CH=CC+1
  IF (CA(CH)=0) THEN CA(CH)=NOT CA(CH):FMVOL CC,CV(CH):GOTO TOGGLECHEXIT
  IF (CA(CH)<>0) THEN CA(CH)=0	
TOGGLECHEXIT:	
  RETURN	
	
VALIDATENOTE:REM RETURNS ZZ = 0 (INVALID), ZZ=1(VALID)  
  IF (CN(CH)<3) THEN CN(CH)=124
	IF (CN(CH)>124) THEN CH(CH)=3
  A$=RIGHT$(HEX$(CN(CH)),1)
	ZZ=1:REM DEFAULT AS VALID
	IF (A$ = "D") THEN ZZ=0
	IF (A$ = "E") THEN ZZ=0
	IF (A$ = "F") THEN ZZ=0
	IF (A$ = "0") THEN ZZ=0
  RETURN	
	
VALIDATEVIB:
  IF (FS > 255) THEN FS = 0
	IF (FS < 0) THEN FS = 255
	IF (FD > 127) THEN FD = 0
	IF (FD < 0) THEN FD = 127	
	FMVIB FS,FD
  RETURN	
	
DIALDOWN:
  CH=CC+1
	
	IF (CM=7) THEN FS=FS-NN:GOSUB VALIDATEVIB:REM SPEED
	IF (CM=6) THEN CS(CH)=CS(CH)-NN:REM SLEEP
  IF (CM=5) THEN CV(CH)=CV(CH)-NN:REM VOLUME
	IF (CM=4) THEN CP(CH)=CP(CH)-NN:REM PAN
	IF (CM=3) THEN CI(CH)=CI(CH)-NN:REM INSTRUMENT
		
	IF (CM=0) THEN CF(CH)=CF(CH)-NN:REM FREQ
	IF (CM=1) THEN CN(CH)=CN(CH)-NN:GOSUB VALIDATENOTE:IF(ZZ=0)THEN GOTO DIALDOWN
	IF (CM=2) THEN CD(CH)=CD(CH)-NN:REM DRUM
	
	IF (CS(CH) < 0) THEN CS(CH) = 99
	IF (CV(CH) < 0) THEN CV(CH) = 63
	IF (CP(CH) < 1) THEN CP(CH) = 3
	IF (CI(CH) < 0) THEN CI(CH) = 162
	IF (CF(CH) < 17) THEN CF(CH) = 4434
	IF (CN(CH) < 3) THEN CN(CH) = 124
	IF (CD(CH) < 25) THEN CD(CH) = 87
	
	ZZ=CU:REM MAKE BACKUP COPY OF CU
	CU=-1:REM NEEDED SO THAT MAKENOISE JUST UPDATES SETTINGS ONLY
	IF (CM>2) THEN GOSUB MAKENOISE:REM UPDATE NEW AUDIO SETTING INSTANTLY
	CU=ZZ:REM RESTORE THE BACKUP COPY

  RETURN
		
DIALUP:
  CH=CC+1
	
	IF (CM=7) THEN FS=FS+NN:GOSUB VALIDATEVIB:REM SPEED
	IF (CM=6) THEN CS(CH)=CS(CH)+NN:REM SLEEP
  IF (CM=5) THEN CV(CH)=CV(CH)+NN:REM VOLUME
	IF (CM=4) THEN CP(CH)=CP(CH)+NN:REM PAN
	IF (CM=3) THEN CI(CH)=CI(CH)+NN:REM INSTRUMENT
	
	IF (CM=0) THEN CF(CH)=CF(CH)+NN:REM FREQ
	IF (CM=1) THEN CN(CH)=CN(CH)+NN:GOSUB VALIDATENOTE:IF(ZZ=0)THEN GOTO DIALUP
	IF (CM=2) THEN CD(CH)=CD(CH)+NN:REM DRUM
	
	IF (CS(CH) > 99) THEN CS(CH) = 0
	IF (CV(CH) > 63) THEN CV(CH) = 0
	IF (CP(CH) > 3) THEN CP(CH) = 1
	IF (CI(CH) > 162) THEN CI(CH) = 0
	
	IF (CF(CH) > 4434) THEN CF(CH) = 17
	IF (CN(CH) > 124) THEN CN(CH) = 3
	IF (CD(CH) > 87) THEN CD(CH) = 25	
	
	ZZ=CU:REM MAKE BACKUP COPY OF CU
	CU=-1:REM NEEDED SO THAT MAKENOISE JUST UPDATES SETTINGS ONLY
	IF (CM>2) THEN GOSUB MAKENOISE:REM UPDATE NEW AUDIO SETTING INSTANTLY
	CU=ZZ:REM RESTORE THE BACKUP COPY	
	
  RETURN
	
INVERTCHANLS:
  FOR I = 0 TO 8
	  CA(I) = NOT CA(I)
  NEXT I
  RETURN	
	
EXPORTAUDIO:
  OPEN 1,8,2,"@:X16AUDIOFM.TXT,S,W"
	ZZ = 1000
	PRINT#1,ZZ;" FMINIT":ZZ=ZZ+10
	PRINT#1,ZZ;" FMVIB ";FS;",";FD:ZZ=ZZ+10
	FOR I = 1 TO 8
	
	  IF (CA(I)=0) GOTO SKIPTHISONE
		REM ELSE CA(I)<>0, CHANNEL IS ACTIVE
		
		CH = I-1
		
		PRINT#1,ZZ;" REM FM CHANNEL ";CH:ZZ=ZZ+10
		PRINT#1,ZZ;" FMINST ";CH;",";CI(I);":FMPAN ";CH;",";CP(I);":FMVOL ";CH;",";CV(I):ZZ=ZZ+10		
		
		IF (CU=0) THEN PRINT#1,ZZ;" FMFREQ ";CH;",";CF(I):ZZ=ZZ+10
		IF (CU=1) THEN PRINT#1,ZZ;" FMNOTE ";CH;",$";HEX$(CN(I)):ZZ=ZZ+10
		IF (CU=2) THEN PRINT#1,ZZ;" FMDRUM ";CH;",";CD(I):ZZ=ZZ+10
		
		IF (CS(I) > 0) THEN PRINT#1,ZZ;" SLEEP ";CS(I):ZZ=ZZ+10
		
SKIPTHISONE:
	NEXT I	
	CLOSE 1
  RETURN

SAVEALL:
  FOR I = 24 TO 30
    LOCATE I,1
REM        12345678901234567890123456789012345678901234567890123456789012345678901234567890
	  PRINT "                                                                               ";
	NEXT I
	
	F$ = ""
	LOCATE 24,1
	PRINT "(DO NOT PREPEND '@:' - THAT WILL BE DONE AUTOMATICALLY) [USING DEV 8]"
	PRINT "SAVE FILENAME (ENTER=X16AUDIOFM.DAT)";
	INPUT F$
	IF LEN(F$) = 0 THEN F$ = "X16AUDIOFM.DAT"
	F$ = "@:" + F$ + ",S,W":REM SEQUENTIAL WRITE
	
  OPEN 1,8,2,F$
	PRINT "OPEN STATUS = ";ST;" / ";
	
  PRINT#1,CC
	PRINT#1,CM
	PRINT#1,CU
	PRINT#1,CH
	PRINT#1,AU
	PRINT#1,ZZ
	PRINT#1,NN
	PRINT#1,CZ
	PRINT#1,MZ
	PRINT#1,FS
	PRINT#1,FD
	FOR I = 0 TO 8
	  PRINT#1,CA(I);",";CF(I);",";CN(I);",";CD(I);",";CI(I);",";CP(I);",";CV(I);",";CS(I)
	NEXT I	
	PRINT "WRITE STATUS = ";ST;" / ";
  CLOSE 1
	PRINT "CLOSE STATUS = ";ST
  RETURN

LOADALL:
  FOR I = 24 TO 30
    LOCATE I,1
REM        12345678901234567890123456789012345678901234567890123456789012345678901234567890
	  PRINT "                                                                               ";
	NEXT I
	LOCATE 24,1	
	PRINT "LOAD FILENAME (ENTER=X16AUDIOFM.DAT)";
	INPUT F$
	IF LEN(F$) = 0 THEN F$ = "X16AUDIOFM.DAT"
	F$ = F$ + ",S,R":REM SEQUENTIAL READ

  OPEN 1,8,2,F$
  INPUT#1,CC
	INPUT#1,CM
	INPUT#1,CU
	INPUT#1,CH
	INPUT#1,AU
	INPUT#1,ZZ
	INPUT#1,NN
	INPUT#1,CZ
	INPUT#1,MZ
	INPUT#1,FS
	INPUT#1,FD
	FOR I = 0 TO 8
	  INPUT#1,CA(I),CF(I),CN(I),CD(I),CI(I),CP(I),CV(I),CS(I)
	NEXT I
  CLOSE 1
  GOTO LOADRESTART
	
DRAWOVERLAYM:REM THIS IS MAX LABEL LENGTH (M = MAIN)

	LOCATE 1,64
	FOR I = 0 TO BL-1
	  PRINT B$(I);
	NEXT I
  
  LOCATE  2,2:PRINT "CH       1      2      3      4      5      6      7      8";
  LOCATE MR(0),2:PRINT "FMFREQ ";
  LOCATE MR(1),2:PRINT "FMNOTE ";
  LOCATE MR(2),2:PRINT "FMDRUM ";
	
  LOCATE MR(3),2:PRINT "FMINST ";

  LOCATE MR(4),2:PRINT "FMPAN  ";
  LOCATE MR(5),2:PRINT "FMVOL  ";
	
	LOCATE MR(6),2:PRINT "SLEEP  ";

  LOCATE MR(7),2:PRINT "FMVIB  ";	
	LOCATE MR(7),24:PRINT "<-- APPLIES TO ONLY CERTAIN INSTRUMENTS";
	
  RETURN
	
DRAWHELP:REM         1234567890123456789012345678901234567890
  COLOR 15,6:REM GRAY ON BLUE
		
  LOCATE 16, 2:PRINT "1-8         SELECT CHANNEL";
	LOCATE 17, 2:PRINT "UP/DOWN     SELECT ADJUSTMENT MODE";
	LOCATE 18, 2:PRINT "LEFT/RIGHT  SINGLE STEP ADJUST VALUE";
	LOCATE 19, 2:PRINT "[  OR  ]    FAST ADJUSTMENT MODE";	
	LOCATE 20, 2:PRINT "PGUP/PGDN   ADJUST FMVIB DEPTH UP/DOWN";
	LOCATE 21, 2:PRINT "SPACEBAR    SELECT/PLAY AUDIO MODE";
	
	LOCATE 23, 2:PRINT "ESC         EXIT";	
	
	LOCATE 16,42:PRINT "A   TOGGLE AUTO MODE";	
	LOCATE 17,42:PRINT "C   COPY ANOTHER CHANNEL";
	LOCATE 18,42:PRINT "I   INVERT CURRENT ACTIVE CHANNELS";
	LOCATE 19,42:PRINT "L   LOAD SETTINGS FROM FILE";
	LOCATE 20,42:PRINT "S   SAVE SETTINGS TO FILE";
	LOCATE 21,42:PRINT "T   TOGGLE CHANNEL ON/OFF";
	LOCATE 22,42:PRINT "X   EXPORT BASIC TO X16AUDIO.TXT";
	LOCATE 23,42:PRINT "Z   SILENCE ALL AUDIO";		
	
  RETURN	
	
UPDATECURAUD:REM UPDATE THE CURRENT AUDIO MODE SETTING
	REM SHOW THE CURRENT AUDIO MODE TYPE
	IF (CU=0) THEN COLOR 13,6
  LOCATE MR(0),2:PRINT "FMFREQ";
	COLOR 1,6
	IF (CU=1) THEN COLOR 13,6
  LOCATE MR(1),2:PRINT "FMNOTE";
	COLOR 1,6
	IF (CU=2) THEN COLOR 13,6
  LOCATE MR(2),2:PRINT "FMDRUM";
	RETURN
	
UPDATEDISP:
  REM ERASE THE OLD CHANNEL INDICATOR
	C = 7*CC+11
  LOCATE  1,C
  PRINT " ";
	LOCATE MR(6)+1,C
	PRINT " ";
	REM UPDATE TO THE NEW ONE AND INDICATE IT
  CC=CZ
	C = 7*CC+11
  LOCATE  1,C
  PRINT "*";
	LOCATE MR(6)+1,C
	PRINT "*"
	
  REM ERASE THE OLD MODE INDICATOR
  LOCATE  MR(CM),1
  PRINT " ";
  REM CHECK MODE RANGES
  IF MZ > 7 THEN MZ=0
  IF MZ < 0 THEN MZ=7
	
	REM UPDATE TO THE NEW ONE AND INDICATE IT
  CM=MZ
  LOCATE  MR(CM),1
  PRINT ">";
	
  REM UPDATE ALL PARAMETERS FOR THE CURRENT ROW	
	FOR I = U1 TO U2
	  C = 7*(I-1)+10
		IF (CA(I) = 0) THEN COLOR 0,6:REM BLACK ON BLUE (SHOW DISABLED)
		IF (CA(I) <> 0) THEN COLOR I+7,6:REM WHITE ON BLUE (NORMAL/ACTIVE)
		
		LOCATE MR(0),C:PRINT "     ";:REM FREQUENCY
	  LOCATE MR(0),C:PRINT CF(I);
		
		LOCATE MR(1),C+2:PRINT HEX$(CN(I));:REM NOTE
		LOCATE MR(1),C+1:PRINT"$";
		
		LOCATE MR(2),C:PRINT CD(I);:REM DRUM
		
		LOCATE MR(3),C+2:PRINT HEX$(CI(I));:REM INSTRUMENT
		LOCATE MR(3),C+1:PRINT"$";
		
		LOCATE MR(4),C:PRINT CP(I);:REM PAN
		
		LOCATE MR(5),C+2:PRINT HEX$(CV(I));:REM VOLUME
		LOCATE MR(5),C+1:PRINT"$";
		
		LOCATE MR(6),C:PRINT "   ";:REM SLEEP
		LOCATE MR(6),C:PRINT CS(I);
	NEXT I
	COLOR 1,6:REM RESTORE "NORMAL" COLOR IN CASE LAST CH. DISABLED
	
  LOCATE MR(7),9:PRINT "           ";
	LOCATE MR(7),9:PRINT FS;:PRINT",";:PRINT FD;	

  RETURN
	
TERMINATE:
  FMINIT:REM RESET AND TURN OFF ANY CURRENT AUDIO
  LOCATE 26,1
  END


REM ***************************************************
REM  V  E  R  S  I  O  N     1  .  0        V  *
DATA 86,69,82,83,73,79,78,32,49,46,49,32,32,86,42,00
