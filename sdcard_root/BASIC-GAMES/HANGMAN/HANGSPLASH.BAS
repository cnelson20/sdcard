#CONTROLCODES 1
#SYMFILE "@:HANGSPLASH.SYM"

STARTUP:
DIM S$,F$,DCHAR%(9),NV$(18),NN$(18),NV%,FV%,TC%(2,8),AL%(4,26),PC%(8,4),MC$(5),DI$(3),PL%(2,1),PL$(2),WN%(2)
DIM MUSIC.NAME$(3),ZNUM%(3),USING.LST%(3),ZSM.RANDOM%(3),MUSIC.PAUSED%(3):LS%=-1:X=RND(-RND(.))
GOSUB SETREGVARS:GOSUB SETUPTEXTMODE:GOSUB THINFONT:POKE C.REG,1:SYS $FF99:LAST.BANK = PEEK(A.REG):IF LAST.BANK=0 THEN LAST.BANK=256
LAST.BANK=LAST.BANK-1:BANKS.AVAILABLE=LAST.BANK-11:NEXT.BANK=2


## HERE I'M GETTING THE COMMUNICATION SIGNATURES FROM MY
## SUB MODULES.
GOSUB GETFROMMENU:ZADDR=$500:GOSUB GETZPSTRING:I=PEEK($400):X=PEEK($401):C=PEEK($402):J=PEEK($403):C1=(I=$FF)AND(X=$EC)AND(C=$FF)AND(J=$FE)

## FILESCHECKED=TRUE MEANS I'VE BEEN LOADED BACK FROM
## FILECHECKER R15H IS A BIT ENCODED VARIABLE
## TELLING ME WHAT FILES ARE PRESENT
## R15L WILL HOLD COUNT OF WORD FILES
## ONLY SET THE GRAPHICS MODE ON THE FIRST RUN
IF C1 THEN FFLAGS=PEEK(R15H):FC%=PEEK(R15L)
POKE C.REG,1:SYS $FF5F:IF PEEK(A.REG)<>$80 THEN SCREEN $80:RECT 0,0,319,239,$C1

IF NOT C1 THEN F$="CHECKLOAD":GOTO LOADER

F$="HANGMAN.INI"
PASS2=(LEFT$(ZP.STRING$,3)="ZSM"):GOTO MAIN



MAIN:
  IF NOT PASS2 THEN CLS:PRINT "{CR}{YEL} INITIALIZATION{GRN}...{CR}{CR}";FC%;"{WHT} WORD FILES{CR}{CR} FFLAGS: {GRN}";BIN$(FFLAGS);"{WHT}"
  MOUSE 1:PRINT "{CR} {YEL}READING: {WHT}";F$;"{GRN}";:GOSUB READINI:GOSUB VARINIT:GOSUB INITMUSICFILES
  I$="USEZSM":GOSUB GETINIVALUE:IF I$="0" THEN UZSM%=0:GOTO MAIN2
  UZSM%=(ZP.STRING$="ZSMLOADED"):GOTO MAIN2


MAIN2:
  PF$="DPAL.BIN":I$="PALFILE":GOSUB GETINIVALUE:F$=I$:GOSUB FILEEXISTS:IF FE% THEN PF$=I$:GOSUB SETDEFPAL:IN.GAME=0

  I$="FORCEPETSCII":GOSUB GETINIVALUE:IF I$="1" THEN PRINT "{ISO OFF}{UPPER}":GOTO SKIPISOLOAD
  I$="FORCEISO":GOSUB GETINIVALUE:IF I$="1" THEN PRINT "{ISO ON}"

SKIPISOLOAD:
## CLEAR OUR FLAGS STUFF OUT OF GOLDENRAM
  GOSUB SETUPTEXTMODE
  CLS:ZP.STRING$="GOGOGO":ZADDR=$525:GOSUB PUTZPSTRING
  IF UZSM% THEN ZS=1:GOSUB PLAYSONG:LOOP.ON=0:GOSUB SETZSMLOOP
  GOSUB SETDEFPAL:GOSUB SETDRAWPAL:P1=$4E:P2=$DF:GOSUB COPYPALET:GOSUB INTROPAL:GOSUB BLOCKFROWN
  DC$=CHR$(255):GOSUB HBANNER:S$="{YEL}<{WHT}ESC{YEL}>{WHT} Skips Intro":GOSUB PLAINMSG:GOSUB PALANIMST

  GOSUB FLUSHKEYS:FOR I=1 TO 75:GOSUB PALANIM1:GET X$:IF X$<>"" OR MB>0 THEN I=75
  NEXT I:IF X$=CHR$(27) THEN ENDINTRO

  IF (FFLAGS OR %00010000) <> FFLAGS THEN RECT 0,0,XLIMIT,YLIMIT,$C3:GOTO SKIPBACK
  GOSUB HIDEGRAPHICS:BVLOAD "SPLASHBACK.IMG",8,0,0
SKIPBACK:
  GOSUB HIDETEXT:GOSUB SHOWGRAPHICS:GOSUB CLRMSG:GET X$:IF X$="{ESC}" THEN ENDINTRO
  IF (FFLAGS OR %00100000) <> FFLAGS THEN SKIPSPLASH1
  F$="SPLASH.IMG":X1=0:Y1=0:PUTIMAGE=TRUE:BLITWIDTH=320:BLITLINES=240:GOSUB BITBLT:GOTO ENDSPLASH
SKIPSPLASH1:
  GOSUB DRAWGALLOWS:P1=$C0:P2=$F2:GOSUB COPYPALET:P1=$C3:P2=$C0:GOSUB COPYPALET:GOSUB DRAWNOOSE:GOSUB CLRMSG
ENDSPLASH:
  SLEEP 60:GOSUB SHOWTEXT:ZTIMER=TI+1590

CONTINTRO:
   FOR I=0 TO 1 STEP 0:IF X$="{ESC}" THEN I=1:GOTO SKIPINTROLOOP
    GOSUB PALANIM1:X=MB:GET X$:IF ZTIMER<TI OR X$<>"" OR MB>0 THEN I=1
SKIPINTROLOOP:
  NEXT I
  IF X$="{ESC}" THEN ENDINTRO

SCROLL:
  GOSUB FLUSHKEYS:FOR I=1 TO 31:LOCATE 1,1:PRINT CHR$(145):GET X$:GOSUB PALANIM1:IF X$="{ESC}" THEN I=31
  NEXT I

ENDINTRO:
  GOSUB CLSGRAPH:GOSUB SETDRAWPAL:GOSUB POKEINIVALUES
  POKE R15L,FC%:POKE R15H,FFLAGS:GOSUB SHOWTEXT:LOAD "HANGMAN.PRG"

PALANIMST:
  P1=13
PALANIM1:
  P2=P1-1
SKIP1:
  GOSUB SWAPPALET:P1=P1-1:IF P1<3 THEN P1=13
  SLEEP 5:RETURN

HBANNER:
  X=5:Y=5:UC=1:WD$="Hang":GOSUB BIGWORD:X=8:Y=14:WD$="Man":GOTO BIGWORD

INTROPAL:
  P1=$3B:P2=13
PLOOP1:
  GOSUB COPYPALET:P2=P2-1:P1=P1-1:IF P2>1 THEN PLOOP1
  P1=$34:P2=10:GOSUB COPYPALET:P1=1:P2=11:GOSUB COPYPALET:P1=$C7:P2=12:GOSUB COPYPALET:FOR I=2 TO 9:TC%(2,I-1)=0:TC%(1,I-1)=I:NEXT I:RETURN


BLOCKFROWN:
  FBASE=$F2F0:IF ISO.ON THEN FBASE=$F7F8
  VPOKE 1,FBASE,$3C:VPOKE 1,FBASE+1,$7E:VPOKE 1,FBASE+2,$DB:VPOKE 1,FBASE+3,$FF:VPOKE 1,FBASE+4,$C3:VPOKE 1,FBASE+5,$BD:VPOKE 1,FBASE+6,$7E:VPOKE 1,FBASE+7,$3C:RETURN

BLOCKSMILE:
  VPOKE 1,FBASE+4,$BD:VPOKE 1,FBASE+5,$C3:RETURN

DRAWGALLOWS:
     GOSUB CLRMSG:FRAME 189,195,285,208,$10:FRAME 188,194,285,211,$10:LINE  189,210,285,210,$10:PSET 189,209,$10:PSET 284,206,$10:PSET 284,209,$10:FRAME 275,21,285,207,$10
     FRAME 276,22,284,205,$10:FRAME 67,20,285,30,$10:FRAME 68,21,284,29,$10:RECT 71,30,79,33,$10:RECT 190,196,283,209,$53:RECT 277,23,283,209,$53:RECT 69,22,283,28,$53:RETURN

DRAWNOOSE:
  S$="The  NOOSE":GOSUB DRAWMSG:F$="NOOSE.DAT":GOSUB FILEEXISTS:IF FE% AND (NOT FORCEDRAW) THEN NOOSEFACEBLIT
  LINE 73,33,73,53,16:LINE 77,33,77,53,16:RECT 74,34,76,53,87:FOR Y=38 TO 53 STEP 3:LINE 73,Y,77,Y-3,BLACK2:NEXT Y:FRAME 71,53,80, 68,16:RECT 72,54,79,68,87
  FOR Y=56 TO 68 STEP 4:LINE 72,Y,79, Y-4,BLACK2:NEXT Y: FILL=0:XSQUISH=1:RA=24:CX=75:CY=79:CC=BLACK2:YSQUISH=.38:Q1=1:Q2=1:Q3=1:Q4=1:YSQUISH=.38:GOSUB BCIRCLE:RA=25:GOSUB BCIRCLE
  RA=24:GOSUB BCIRCLE:RA=23:GOSUB BCIRCLE:RA=19:GOSUB BCIRCLE:RA=18:GOSUB BCIRCLE:CC=87:FOR RA=20 TO 23 STEP .6:GOSUB BCIRCLE:NEXT RA:PUTIMAGE=FALSE

NOOSEFACEBLIT:
  BLITWIDTH=57:BLITLINES=75:X1=46:Y1=33:X2=102:Y2=107:GOTO GRAPHBLITIMAGE

BCIRCLE:
  C1=RA:X=0:D=2*(1-RA):W=INT(2*320/240)
##     IF XSQUISH<0 OR XSQUISH>1 THEN XSQUISH=1
##     IF YSQUISH<0 OR YSQUISH>1 THEN YSQUISH=1
FOR J=0 TO 3 STEP 0:DX=X*XSQUISH:DY=C1*YSQUISH:ZX=CX-DX:ZY=CY-DY:AX=CX+DX:AY=CY+DY:IF FILL=1 THEN DOFILL
  IF ZX<0 OR ZX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q1=0 THEN SKIP4
  PSET ZX,ZY,CC
SKIP4:
  IF AX<0 OR AX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q2=0 THEN SKIP2
  PSET AX,ZY,CC
SKIP2:
  IF ZX<0 OR ZX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q3=0 THEN SKIP3
  PSET ZX,AY,CC
SKIP3:
  IF AX<0 OR AX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q4=0 THEN SKIPFILL
  PSET AX,AY,CC:GOTO SKIPFILL
DOFILL:
  X1=ZX:X2=AX:IF (Q1=0 AND Q2=O) OR X1>XLIMIT THEN FILL2
  IF ZY<0 OR ZY>YLIMIT THEN FILL2
  IF X1<0 THEN X1=0
  IF X2>XLIMIT THEN X2=XLIMIT
  IF Q1=0 THEN X1=CX
  IF Q2=0 THEN X2=CX
  LINE X1,ZY,X2,ZY,CC
FILL2:
  IF (Q3=0 AND Q4=0) OR ZX>XLIMIT THEN SKIPFILL
  IF AY<0 OR AY>YLIMIT THEN SKIPFILL
  IF ZX<0 THEN ZX=0
  IF AX>XLIMIT THEN AX=XLIMIT
  IF Q3=0 THEN ZX=CX
  IF Q4=0 THEN AX=CX
  LINE ZX,AY,AX,AY,CC
SKIPFILL:
  IF (D+RA)>0 THEN C1=C1-1:D=D-W*C1-1
  IF X>D THEN X=X+1:D=D+2*X+1
  IF C1<0 THEN J=3
NEXT J
BCLOOPEND:
  RETURN

ADJUSTPETLOWER:
 IF CC>=193 AND CC<=218 THEN CC=CC-128:X$=CHR$(CC)
 RETURN

SETVOLUME:
##  Inputs: .X = priority, .A = attenuation value
  IF UZSM% THEN DOZVOLUME
  RETURN
DOZVOLUME:
  IF VOLUME < 0 THEN VOLUME=0:RETURN
  IF VOLUME > 100 THEN VOLUME=100:RETURN
  GOSUB SHOWVOLUME
SETITNOW:
  ZCVOLUME=INT((VOLUME/100)*12+.5)
  POKE X.REG, ZNUM%(ZS):POKE A.REG, 63-INT((VOLUME/100*63)+.5):SYS $8C21:RETURN

SHOWVOLUME:
   IF VVIS THEN SKIPFRAME
   FRAME 295,7,301,208,BLACK2:RECT 293,208,303,210,BLACK2
SKIPFRAME:
   Y1=(100-VOLUME)*2:Y2=VOLUME*2:IF Y1>0 THEN RECT 296,8,300,7+Y1,$C0
   IF Y2>0 THEN RECT 296,8+Y1,300,207,$37
   LOCATE 21,29:PRINT "    ";:VVIS=TRUE:LOCATE 21,29:PRINT "{YEL}";MID$(STR$(VOLUME),2);"%";:VTIMER=TI+300:RETURN

HIDEVOLUME:
  VVIS=FALSE:RECT 295,2,301,166,$C0:LOCATE 21,29:PRINT "    ";:X1=290:Y1=166:BLITLINES=46:BLITWIDTH=15:F$="UNDER.DAT":GOTO GRAPHBLITIMAGE

GAMEMSG:
  COLOR 4,6:X=16:Y=12:H=11:W=18:GOSUB TEXTBOX:COLOR 7,4:X=17:Y=13:H=9:W=16:GOTO TEXTBOX


DRUMROLL:
  ZCM.NUMBER=0:GOTO ZCMPLAY


FRAMESCRN:
  X1=0:Y1=0:X2=XLIMIT:Y2=YLIMIT:CC=$1A:FOR J=1 TO 5:FRAME X1,Y1,X2,Y2,CC:X1=X1+1:X2=X2-1:Y1=Y1+1:Y2=Y2-1:CC=CC-2:NEXT J:RETURN

  TEXTBOX:
     LOCATE Y,X:PRINT CHR$(DCHAR%(1));RPT$(DCHAR%(2),W-2);CHR$(DCHAR%(3));:IF H=2 THEN SKIPMID
     FOR RA=1 TO H-2:LOCATE Y+RA,X:PRINT CHR$(DCHAR%(4));RPT$(32,W-2);CHR$(DCHAR%(5));:NEXT RA
SKIPMID:
     LOCATE Y+H-1,X:PRINT CHR$(DCHAR%(6));RPT$(DCHAR%(7),W-2);CHR$(DCHAR%(8));:RETURN

SETUPTEXTMODE:
  GOSUB GETCHARMODE:IF NOT ISO.ON THEN SKIPISO
ISOFONTS:
  PETSCII=FALSE:GOSUB LOADFONTS:F$=FONT1$:GOSUB FILEEXISTS:F=FE%:F$=FONT2$:GOSUB FILEEXISTS:F2=FE%
  IF NOT (F2 OR F) THEN PETSCIIMODE
  IF F AND (NOT F2) THEN FONT2$=FONT1$
  IF F2 AND (NOT F) THEN FONT1$=FONT2$
  FONTFILE$=FONT1$:GOTO LOADISOFONT

LOADFONTS:
  RESTORE DEFAULTFONTS:I$="FONT1":GOSUB GETINIVALUE:IF I$="" THEN READ FONT1$:GOTO TNEXTFONT
  FONT1$="FONTS/"+I$
TNEXTFONT:
  I$="FONT2":GOSUB GETINIVALUE:IF I$="" THEN READ FONT2$:RETURN
  FONT2$="FONTS/"+I$
FONTEND2:
  RETURN

DEFAULTFONTS:
  "THIN8X8.PF","VGAROM.PF"

SKIPISO:

PETSCIIMODE:
  PETSCII=TRUE:PRINT "{ISO OFF}{UPPER}":GOSUB PETDRAW:ISO.ON=FALSE:GOTO THINFONT

SETISOMODE:
  PRINT "{ISO ON}":ISO.ON=TRUE:GOTO ISODRAW

LOADISOFONT:
  BVLOAD FONTFILE$,8,1,$F000:GOSUB FIXCURSOR:GOTO COPYDIAMOND

COPYDIAMOND:
 OB=PEEK(1):BANK PEEK(0),6:CA=$C2D0:VA=$F748:FOR I=0 TO 7:VPOKE 1,VA+I,PEEK(CA+I):NEXT I:BANK PEEK(0),OB:RETURN

FIXCURSOR:
  FBASE=$9F*8+$F000
  FOR X=0 TO 5:VPOKE 1,FBASE+X,0:NEXT X
  VPOKE 1,FBASE+6,$FF:VPOKE 1,FBASE+7,$FF

SETDRAWCHARS:
  IF ISO.ON THEN ISODRAW
  GOTO PETDRAW

ISODRAW:
  RESTORE ISODATA:GOTO READCHAR

PETDRAW:
  RESTORE PETDATA
READCHAR:
  FOR I=1 TO 9:READ DCHAR%(I):NEXT I:RETURN

PETDATA:
  DATA $6F,$A3,$70,$A5,$A7,$6C,$A4,$BA,$7A

ISODATA:
  DATA $C9,$CD,$BB,$BA,$BA,$C8,$CD,$BC,$E9

GETCHARMODE:
   ISO.ON=(PEEK($372) AND %01000000) <> 0:RETURN




STRINGGET:
  GOSUB FLUSHKEYS:I$="":ID=0:GOSUB AREACLR
GETAKEY:
  GET X$:CC=ASC(X$):GOSUB ADJUSTPETLOWER:IF X$="" THEN GETAKEY
  C=ASC(X$):AC=0
  IF (IT<>2 OR IT=3) AND C>=65 AND C<=90 THEN AC=TRUE
  IF ISO.ON THEN IF (IT<>2 OR IT=3) AND C>=97 AND C<=122 THEN AC=TRUE
  IF (IT=2 OR IT=4 OR IT=3) AND C>=48 AND C<=57 THEN AC=TRUE
  IF (IT=2) AND C=46 AND ID=0 THEN AC=TRUE:ID=1
  IF (IT=4) AND C=32 THEN AC=TRUE: REM ALLOW SPACES WHEN INPUTTING A LINE
  IF (IT=4) AND (C>=35 AND C<=47) THEN AC=TRUE
  IF (IT=4) AND (C>=58 AND C<=63) THEN AC=TRUE  : REM ALLOW PUNCS IN STRING.
  IF C=13 THEN RETURN
  IF AC AND LEN(I$)<ML THEN PRINT CHR$(C);:I$=I$+CHR$(C):GOSUB CLICK:GOTO GETAKEY
  IF C<>20 THEN TOLONG
  IF LEN(I$)=0 THEN GOSUB BOING
  IF LEN(I$)=1 OR LEN(I$)=0 THEN I$="":GOSUB AREACLR:GOTO GETAKEY
  I=LEN(I$)-1:IF RIGHT$(I$,1)="." AND IT=2 THEN ID=0
  I$=LEFT$(I$,I):GOSUB AREACLR:PRINT I$;:GOSUB CLICK:GOTO GETAKEY
TOLONG:
  GOSUB BOING:GOTO GETAKEY

AREACLR:
  LOCATE Y,X:PRINT RPT$(32,ML);:LOCATE Y,X:RETURN

CLICK:
  IF UZSM% THEN ZCM.NUMBER=2:GOTO ZCMPLAY
  FMDRUM 7,26:RETURN

BOING:
  IF UZSM% THEN ZCM.NUMBER=1:GOTO ZCMPLAY
  FMDRUM 7,87:RETURN

FLUSHKEYS:
   GET X$:IF X$<>"" THEN FLUSHKEYS
   RETURN


MANAGEMUSIC:
  IF (NOT UZSM%) OR (ZTIMER>TI) THEN RETURN
  ZTIMER=0:IF MUSIC.PAUSED%(ZS) THEN RETURN
  GOSUB ZSMGETSTATE:IF ZSM.IS.PLAYING THEN RETURN
  IF USING.LST%(ZS) THEN GOSUB GETZSMFROMLIST:GOSUB ZSMCLOSE:GOSUB DOLOADZSM:GOTO STARTMUSIC
  GOSUB ZSMREWIND:GOTO STARTMUSIC

SWAPSONGTO:
  GOSUB PUSHSONG:ZS=NEWZS:GOSUB LOADZSM:GOTO STARTMUSIC

ZCMSETMEM:
  POKE A.REG, 0:POKE Y.REG, $A0
ZCMSETMEM2:
  BANK ZCM.BANK:POKE X.REG, ZCM.NUMBER:SYS $8C4B:RETURN

PUSHSONG:
  WAS.PAUSED=MUSIC.PAUSED%(ZS):GOSUB PAUSEMUSIC:OLDZS=ZS:ZSAVENAME$=ZSMNAME$:IF USING.LST%(ZS) THEN SAVEZ=CURRENTZSM
  RETURN

SWAPSONGBACK:
  GOSUB PAUSEMUSIC:GOSUB ZSMCLOSE:GOSUB POPSONG:ZTIMER=TI+90:RETURN

POPSONG:
  CK=ZS:ZS=OLDZS:ZSMNAME$=ZSAVENAME$:IF USING.LST%(ZS) THEN CURRENTZSM=SAVEZ
  MUSIC.PAUSED%(ZS)=WAS.PAUSED:IF ZNUM%(CK)=ZNUM%(ZS) THEN GOSUB DOLOADZSM:GOTO POPSKIP
  BLOAD ZSMNAME$,8,2,$A000
POPSKIP:
  IF NOT MUSIC.PAUSED%(ZS) THEN SLEEP 5:GOSUB STARTMUSIC
  RETURN

PLAYSONG:
  IF NOT UZSM% THEN RETURN
  IF ZS=LASTZS THEN GOTO MANAGEMUSIC
  X=ZS:ZS=LASTZS:GOSUB PAUSEMUSIC:GOSUB ZSMCLOSE:ZS=X:MUSIC.FILENAME$=MUSIC.NAME$(ZS):F$=MUSIC.FILENAME$:GOSUB FILEEXISTS:IF NOT FE% THEN RETURN
  IF ZS<>LASTZS THEN GOSUB LOADZSM
  GOSUB STARTMUSIC:LASTZS=ZS:RETURN

STARTMUSIC:
   MUSIC.PAUSED%(ZS)=0:ZSM.ON%=TRUE:POKE X.REG, ZNUM%(ZS):SYS $8C06
   IF USING.LST%(ZS) THEN LOOP.ON=0:GOSUB SETZSMLOOP
   GOTO SETITNOW

SETZSMLOOP:
  IF LOOP.ON THEN LOOP.ON=1
  POKE X.REG, ZNUM%(ZS):POKE C.REG,LOOP.ON:SYS $8C33:RETURN

PAUSEMUSIC:
  MUSIC.PAUSED%(ZS)=-1:POKE X.REG,ZNUM%(ZS):SYS $8C09:RETURN

LOADZSM:
  USING.LST%(ZS)=0:MUSIC.FILENAME$=MUSIC.NAME$(ZS)
  IF RIGHT$(MUSIC.FILENAME$,4)=".LST" THEN GOSUB GETZSMFROMLIST:USING.LST%(ZS)=-1:GOTO DOLOADZSM
  ZSMNAME$=MUSIC.FILENAME$
DOLOADZSM:
  BLOAD ZSMNAME$,8,2,$A000:NEXT.BANK=PEEK(0)+1
## NOW TELL ZSMKIT WHERE THE SONG LIVES
ZSMSETMEM:
  BANK 2:POKE $30C,ZNUM%(ZS):POKE $30D,0:POKE $30E,$A0:SYS $8C1E:RETURN

ZSMCLOSE:
  POKE $30D, ZNUM%(ZS):SYS $8C0F:ZSM.ON%=0:RETURN

GETZSMFROMLIST:
  F$=MUSIC.NAME$(ZS):GOSUB FILEEXISTS:IF NOT FE% THEN RETURN
  MUSIC.FILENAME$=MUSIC.NAME$(ZS)
RETRYLST:
  IF CURRENTZSM<=0 THEN CURRENTZSM=1
  OPEN 10,8,10,MUSIC.FILENAME$ + ",S,R":INPUT# 10,ZCNT$:ZSM.COUNT=VAL(ZCNT$)
  ENDZSM=CURRENTZSM:IF ENDZSM>ZSM.COUNT THEN ENDZSM=ZSM.COUNT

  IF ZSM.RANDOM%(ZS) THEN ENDZSM=INT(RND(1)*ZSM.COUNT)+1

## DEBUG OUTPUT  S$ = "ZS: "+STR$(ZS)+" "+MUSIC.FILENAME$+" ENDZSM"+STR$(ENDZSM):GOSUB PLAINMSG:SLEEP 450

  IF ENDZSM=1 THEN SKIPZSMLOOP
  FOR I = 1 TO ENDZSM
    INPUT# 10, X$:X=ST
    IF X<>0 THEN I=ENDZSM
  NEXT I
## DEBUG OUTPUT S$="LIST LOOP DONE":GOSUB PLAINMSG
  IF X<>0 THEN CLOSE 10:CURRENTZSM=0:GOTO RETRYLST
  GOTO SETZSMPOS
SKIPZSMLOOP:
  INPUT# 10, X$
SETZSMPOS:
  CURRENTZSM=CURRENTZSM+1:IF CURRENTZSM > ZSM.COUNT+1 THEN ZSM.RANDOM%(ZS)=TRUE
  ZSMNAME$=MUSIC.DIR$+X$:CLOSE 10:RETURN

ZSMGETSTATE:
  POKE X.REG, ZNUM%(ZS):SYS $8C2A:ZSM.IS.PLAYING=PEEK(C.REG) AND 1:ZSM.LOOPS=PEEK(PEEK(Y.REG))+PEEK(PEEK(X.REG))*256:RETURN

ZSMREWIND:
  POKE X.REG, ZNUM%(ZS):SYS $8C0C:RETURN

ZCMPLAY:
  POKE X.REG, ZCM.NUMBER:POKE A.REG,ZCVOLUME:SYS $8C4E:RETURN

## BITBLIT IS CALLED WITH PUTIMAGE = 0 (FALSE) TO GET THE IMAGE
## IMAGE IS BUFFERED TO FILE PASSED IN F$
## SCREEN RECTANGLE TO CAPTURE IS PASSED IN X1, Y1, X2, Y2
## X2 and Y2  ** MUST ** be greater than/= X1,Y1.  IF < FUNNY
## THINGS WILL HAPPEN
##
## BITBLIT IS CALLED WITH PUTIMAGE = -1 (TRUE) TO PUT THE IMAGE
## ON THE SCREEN F$ WILL HOLD FILE NAME.
## PUT STARTING AT X1, Y1
##
## BLITWIDTH AND BLITLINES NEED TO BE SET TO THE WIDTH AND HEIGHT
## OF THE IMAGE RESPECTIVELY, NO SUCH INFO IS IN THE FILE.
##
## IF IMMEDIATELY FOLLOWING A BITBLIT GETIMAGE CALL THEN
## BLITWIDTH AND BLITLINES WILL ALREADY BE SET.
## IN THAT INSTANCE ONLY X1, Y1 NEED TO BE CHANGED
##
## X1 AND Y1 CAN BE LEFT UNCHANGED IF THE USE IS SAVING A
## SECTION OF SCREEN TO RESTORE AFTER SOMETHING ELSE IS DRAWN
##
##
## FOR THAT CASE CALL BITBLIT WITH PUTIMAGE = FALSE
## DO YOUR SCREEN STUFF
## SET PUTIMAGE TO TRUE,  CALL BITBLIT AGAIN TO RESTORE ALREADY

GRAPHBLITIMAGE:
 TARGET.BANK = LAST.BANK-11
GRAPHBLITIMG:
 BLOAD F$,8,TARGET.BANK,$A000
BLITIMAGE:
 IF X1 > 255 THEN BYTESPLIT2
  POKE R0L, X1:POKE R0H, 0:GOTO POKEY2
 BYTESPLIT2:
   POKE R0L, X1 AND $00FF:POKE R0H, 1
 POKEY2:
   POKE R1L, Y1:POKE R1H, 0
 IF BLITWIDTH>255 THEN BYTESPLIT3
    POKE R3L, BLITWIDTH:POKE R3H,0:GOTO POKEY3
 BYTESPLIT3:
    POKE R3L, BLITWIDTH AND $00FF:POKE R3H, 1
 POKEY3:
    POKE R4L, BLITLINES:POKE R4H, 0
    POKE R2L,0:POKE R2H, $A0
    BANK TARGET.BANK:SYS GRAPH.DRAW.IMAGE:RETURN

BITBLT:
  IF PUTIMAGE THEN X$="":S$=",S,R":GOTO SKIPPER
  IF X1>X2 THEN X=X1:X1=X2:X2=X
  IF Y1>Y2 THEN X=Y1:Y1=Y2:Y2=X
  S$=",P,W":X$="@:"
SKIPPER:
  FF$=X$+F$+S$
  IF PUTIMAGE THEN SET.IO=CHKIN:DO.FILEIO=MACPTR:GOTO DOSCREENBLIT
  SET.IO=CHKOUT:DO.FILEIO=MCIOUT:BLITWIDTH=(X2-X1)+1:BLITLINES=(Y2-Y1)+1
DOSCREENBLIT:
  IF Y1+BLITLINES > YLIMIT THEN BLITLINES=YLIMIT-Y1
  OPEN 2,8,2,FF$:POKE X.REG, 2:SYS SET.IO
  IF X1 > 255 THEN BYTESPLIT
  POKE R0L, X1:POKE R0H, 0:GOTO POKEY
BYTESPLIT:
  POKE R0L, X1 AND $00FF:POKE R0H, INT(X1/256)
POKEY:
  POKE R1L, Y1:POKE R1H, 0:SYS FB.CURSOR.POSITION

  FOR Y=1 TO BLITLINES
    I=0
    FOR X=1 TO 3 STEP 0
      BYTES=BLITWIDTH-I:IF BYTES>$FF THEN BYTES=$FF
      POKE A.REG, BYTES:POKE X.REG, $23:POKE Y.REG, $9F:POKE C.REG,1:SYS DO.FILEIO:I=I+PEEK(X.REG):IF I>=BLITWIDTH THEN X=3
    NEXT X
    SYS FB.CURSOR.NEXTLINE
  NEXT Y
  CLOSE 2:SYS CLRCHN:RETURN

FILEEXISTS:
  X$=F$:FE%=0:X$=X$+",S,R":OPEN 2,8,2,X$:CLOSE 2:OPEN 15,8,15:INPUT#15,X,X$:CLOSE 15:FE%=(X<=20):RETURN

DRAWMSG:
  S$=" DRAWING: "+S$
PLAINMSG:
##  S$="FRE:"+STR$(FRE(0))+"  "+S$
  IF LEN(S$)>38 THEN S$=LEFT$(S$,38)
  COLOR 1,0:GOSUB CLRMSG:IF IN.GAME THEN COLOR 1,4
  LOCATE 29,2:GOSUB PETCHK:IF IN.GAME THEN COLOR 1,0
  RETURN

CLRMSG:
  LOCATE 29,2:PRINT RPT$(32,38);:RETURN

BIGWORD:
  L=LEN(WD$):SX=X
  OB=PEEK(1):BANK PEEK(0),6
  FOR K=1 TO L
    CC=ASC(MID$(WD$,K,1))
    IF (CC>=64 AND CC<=90) THEN AA=64:GOTO SKIP0
    IF (CC>=97 AND CC<=122) THEN AA=-32:GOTO SKIP0
    AA=0
SKIP0:
    CA=$C000+8*(CC-AA)
    FOR I=1 TO 8
      CM(I)=PEEK(CA+(I-1)):CM$(I)=""
    NEXT I
    IF DC$="" THEN DC$=CHR$(CC)
    TD=8:IF CC=32 THEN TD=4
    FOR J=1 TO TD
        RESTORE BITMAPS
        FOR CT=1 TO 8
            READ CP
            IF (CP AND CM(J)) THEN CM$(J)=CM$(J)+DC$:GOTO SKIPSPC
            CM$(J)=CM$(J)+CHR$(32)
      SKIPSPC:
        NEXT CT
        LOCATE Y+(J-1),X:IF UC=1 THEN COLOR TC%(1,J),TC%(2,J)
        PRINT CM$(J);
    NEXT J
    IF DC$=CHR$(CC) THEN DC$=""
    X=X+TD
  NEXT K
  X=SX:BANK PEEK(0),OB:RETURN

BITMAPS:
  DATA 128,64,32,16,8,4,2,1,0

HIDEALL:
  GOSUB HIDEGRAPHICS:GOTO HIDETEXT
SHOWALL:
  GOSUB SHOWGRAPHICS:GOTO SHOWTEXT

HIDEGRAPHICS:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) AND LAYER0.OFF:RETURN

SHOWGRAPHICS:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) OR LAYER0.ON:RETURN

HIDETEXT:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) AND LAYER1.OFF:RETURN

SHOWTEXT:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) OR LAYER1.ON:RETURN

RGBPAL:
  A=P1*2:X=(G%*16)+B%:A=A+$FA00:SLEEP:VPOKE 1,A,X:A=A+1:SLEEP:VPOKE 1,A,R%:RETURN

READPAL:
  A=$FA00+(P1*2):R%=VPEEK(1,A+1):GB%=VPEEK(1,A):G%=GB%/16:B%=GB% AND $0F:RETURN

PAL2PALFADE:
  GOSUB READPAL:P3=P1:P1=P2:GOSUB PALFADE:P1=P3:RETURN

PALFADE:
  DR%=R%:DG%=G%:DB%=B%:GOSUB READPAL
  RI=1:IF DR%<R% THEN RI=-1
  GI=1:IF DG%<G% THEN GI=-1
  BI=1:IF DB%<B% THEN BI=-1
  FOR X=1 TO 3 STEP 0
    IF DR%<>R% THEN R%=R%+RI
    IF DG%<>G% THEN G%=G%+GI
    IF DB%<>B% THEN B%=B%+BI
    GOSUB RGBPAL:SLEEP J
    IF DR%=R% AND DG%=G% AND DB%=B% THEN X=3
  NEXT X
FADEDONE:
  RETURN

SWAPPALET:
  A=$FA00+(P1*2):X=$FA00+(P2*2):B1=VPEEK(1,A):B2=VPEEK(1,A+1):B3=VPEEK(1,X):B4=VPEEK(1,X+1)
  VPOKE 1,A,B3:VPOKE 1,A+1,B4:VPOKE 1,X,B1:VPOKE 1,X+1,B2:RETURN

COPYPALET:
  VPOKE 1,$FA00+(P2*2),VPEEK(1,$FA00+(P1*2)):VPOKE 1,$FA00+(P2*2)+1,VPEEK(1,$FA00+(P1*2)+1):RETURN

FORCEDEFPAL:
   X$=PF$:PF$="DPAL.BIN":GOSUB SETDEFPAL:PF$=X$:RETURN
SETDEFPAL: 
  BVLOAD PF$,8,1,$FA00:RETURN

VARINIT:
  GOSUB SETDRAWCHARS:FMINIT:XLIMIT=319:YLIMIT=239:UC%=-1:ZCVOLUME=12:VOLUME=100:I$="SHOWCLUE":GOSUB GETINIVALUE:IF I$="0" THEN UC%=FALSE
  Q1=1:Q2=1:Q3=1:Q4=1:XSQUISH=1:YSQUISH=1:MW%=20:MC%=35:GOSUB INITALPHA:PUTIMAGE=FALSE:LEGCOLOR=$46:SHIRTCOLOR=8:BLACK2=$10:FLESHCOLOR=$25:DEC.PAL.ENTRY=$600:TWO=2
  VERA.LOWADDR=$9F20:VERA.MIDADDR=$9F21:VERA.HIGHADDR=$9F22:VERA.CTRL=$9F25

  RESTORE GAMEMENUTEXT
    FOR CX=1 TO 4
       READ S$:IF PETSCII THEN GOSUB UCASE
       MC$(CX)=S$:NEXT CX
    IF NOT FROM.MENU THEN SKIPMENUMSG
    S$="EXIT To Config Menu":IF PETSCII THEN GOSUB UCASE
    MC$(4)=S$
SKIPMENUMSG:
    DI$(1)="EASY":DI$(2)="MEDIUM":DI$(3)="HARD":RESTORE CONTROLS:FOR I=1 TO 7:FOR C=1 TO 4:READ PC%(I,C):NEXT C:NEXT I

SETDRAWPAL:
  P1=FLESHCOLOR:P2=$FF:GOSUB COPYPALET:P1=1:P2=$FE:GOSUB COPYPALET:P1=$3B:P2=$FD:GOSUB COPYPALET:P1=BLACK2:P2=4:GOSUB COPYPALET:P1=$1A:P2=12:GOSUB COPYPALET:RETURN

CONTROLS:
  DATA 32,48,190,56,32,72,238,80,32,96,143,104,32,120,197,128,28,155,62,170,201,195,219,207,226,195,244,207

GAMEMENUTEXT:
  DATA "Player VS Computer","2 Player. Computer Picks","Head To Head","EXIT To Commander X16"

INITALPHA:
  FOR I=65 TO 90:AL%(1,I-64)=0:AL%(2,I-64)=I:NEXT I:RETURN

INITMUSICFILES:
  PRINT "{CR}{CR}{YEL} GETTING MUSIC INFO..{WHT}..";:I$="MUSICDIR":GOSUB GETINIVALUE:IF I$<> "" THEN GOSUB ADDSLASH
  MUSIC.DIR$=I$:I$="INTROSONG":GOSUB GETINIVALUE:I=1:GOSUB FIXMUSIC:ZNUM%(I)=0:I$="BACKGROUNDTRACK":GOSUB GETINIVALUE:I=2:GOSUB FIXMUSIC:ZNUM%(I)=0:I$="RANDOMBGMUSIC"
  GOSUB GETINIVALUE:ZSM.RANDOM%(2)=(I$="1"):I$="LOSSMUSIC":GOSUB GETINIVALUE:I=3:GOSUB FIXMUSIC:ZNUM%(I)=0:PRINT " DONE{CR}"
  FOR I=1 TO 3:PRINT "{CR}{GRN} SONG:{YEL}";I;" {WHT}";MUSIC.NAME$(I);:ZCM.RANDOM%(I)=0:NEXT I:ZCM.RANDOM%(3)=-1:SLEEP 15:CLS:RETURN

FIXMUSIC:
  IF I$<>"" THEN I$=MUSIC.DIR$+I$
  F$=I$:GOSUB FILEEXISTS:IF FE% THEN MUSIC.NAME$(I)=I$
  RETURN

ADDSLASH:
  IF RIGHT$(I$,1)<>"/" THEN I$=I$+"/"
  RETURN

SETREGVARS:
  A.REG=$030C:X.REG=$030D:Y.REG=$030E:C.REG=$030F:R0L=2:R0H=3:R0=R0L:R1L=4:R1H=5:R1=R1L:R2L=6:R2H=7:R2=R2L:R3L=8:R3H=9:R3=R3L:R4L=10:R4H=11:R4=R4L
  R15L=$20:R15H=$21:R15=R15L:CHKOUT=$FFC9:CHKIN=$FFC6:CLRCHN=$FFCC:MCIOUT=$FEB1:MACPTR=$FF44:GRAPH.DRAW.IMAGE=$FF38
  VERA.DCVIDEO=$9F29:LAYER0.ON=16:LAYER0.OFF=239:LAYER1.ON=32:LAYER1.OFF=223:FB.CURSOR.POSITION=$FEFF:FB.CURSOR.NEXTLINE=$FF02:TRUE=-1:FALSE=0:RETURN

LOADER:
  GOSUB PUTTOMENU:S$="HANGMAN.PRG":ADDR=$500:GOSUB POKESTRING:LOAD F$



GETFROMMENU:
  RA=PEEK(0):S$="":ADDR=$BF00:BANK LAST.BANK
  FOR I=0 TO 7:S$=S$+CHR$(PEEK(ADDR+I)):NEXT I
  FROM.MENU = (S$="HANGMENU")
  BANK RA:RETURN

PUTTOMENU:
  IF NOT FROM.MENU THEN RETURN
  RA=PEEK(0):S$="HANGMENU":ADDR=$BF00:BANK LAST.BANK
  FOR I=0 TO 7:POKE ADDR+I,ASC(MID$(S$,I+1,1)):NEXT I
  BANK RA:RETURN

GETZPSTRING:
  X=ZADDR:I=X+32:ZP.STRING$=""
ZLOOP:
  Z=PEEK(X):IF Z=0 THEN RETURN
  ZP.STRING$=ZP.STRING$ + CHR$(Z):X=X+1
  IF X < I THEN ZLOOP
  RETURN

PUTZPSTRING:
   IF LEN(ZP.STRING$)<32 AND LEN(ZP.STRING$)>0 THEN DOZPUT
   IF LEN(ZP.STRING$)=0 THEN POKE R0,0:RETURN
   S$=" STRING TO LONG FOR ZERO REGISTERS (MAX 31 CHARS)":GOTO ERRORHALT
DOZPUT:
   ZP1=ZADDR
   FOR I=1 TO LEN(ZP.STRING$):POKE ZP1, ASC(MID$(ZP.STRING$,I,1)):ZP1=ZP1+1:NEXT I
   POKE ZP1,0:RETURN

POKEINIVALUES:
  BANK LAST.BANK-11
  POKE $A000, NV%
  ADDR=$A100
  FOR J=1 TO NV%
      S$=NV$(J):GOSUB POKESTRING
      ADDR=ADDR+128
      S$=NN$(J):GOSUB POKESTRING
      ADDR=ADDR+128
  NEXT J
  RETURN

POKESTRING:
  IF LEN(S$)=0 THEN POKE ADDR,0:RETURN
  PADDR=ADDR
  FOR I=1 TO LEN(S$)
    POKE PADDR, ASC(MID$(S$,I,1))
    PADDR=PADDR+1
  NEXT I
  POKE PADDR,0
  RETURN

GETINIVALUE:
   I=1
GETILOOP:
   IF NN$(I)=I$ THEN I$=NV$(I):RETURN
   I=I+1:IF I>NV% THEN I$="":RETURN
   GOTO GETILOOP

READINI:
  NV%=0:FV%=0
  GOSUB FILEEXISTS:IF NOT FE% THEN RETURN
  FF$=F$+ ",S,R":OPEN 4,8,4,FF$
  DOINILOOP:
    LINPUT#4, S$
    IF LEFT$(S$,2)="##" THEN CONTLOOP
    IF LEFT$(S$,3)="REM" THEN CONTLOOP
    GOSUB TRIM:GOSUB UCASE
    IF LEFT$(S$,4)="REM " OR LEFT$(S$,2)="##" OR S$="" OR S$="REM" OR S$="##" THEN CONTLOOP
    PRINT ".";
    GOSUB GETINIVAR
    IF TN$="" THEN CONTLOOP
    IF TV$="ON" OR TV$="YES" THEN TV$="1"
    IF TV$="OFF" OR TV$="NO" THEN TV$="0"
    NV%=NV%+1:NN$(NV%)=TN$:NV$(NV%)=TV$
  CONTLOOP:
  IF ST=0 AND NV%<18 THEN DOINILOOP
  CLOSE 4:FV%=(NV%>0):PRINT:RETURN

GETINIVAR:
  SC$="":TN$="":TV$="":J=1
DOINIPARSE:
  X$=MID$(S$,J,1):IF X$="=" THEN GOTINI
  SC$=SC$+X$:J=J+1:IF J>LEN(S$) THEN ENDINI
  GOTO DOINIPARSE
GOTINI:
  J=J+1:TT$=S$:S$=SC$:SC$=""
  GOSUB RTRIM:TN$=S$:S$=TT$
VALUEPARSE:
  X$=MID$(S$,J,1):SC$=SC$+X$
  J=J+1:IF J>LEN(S$) THEN ENDINI
  GOTO VALUEPARSE
ENDINI:
  TT$=S$:S$=SC$:GOSUB TRIM:TV$=S$:S$=TT$:RETURN

PETCHK:
  IF PETSCII THEN GOSUB UCASE
  PRINT S$;:RETURN

UCASE:
  IF S$="" THEN RETURN
  X$="":FOR I=1 TO LEN(S$):I$=MID$(S$,I,1):X=ASC(I$):IF X>=97 AND X<=122 THEN X=X-32
  X$=X$+CHR$(X):NEXT I:S$=X$:RETURN

TRIM:
  GOSUB LTRIM:GOTO RTRIM

LTRIM:
   IF S$="" THEN RETURN
   I=1:C1=0
DOLOOP:
   X$=MID$(S$,I,1):X=ASC(X$):IF X > 32 THEN LSTR
   C1=C1+1:I=I+1:IF I>LEN(S$) THEN LSTR
   GOTO DOLOOP
LSTR:
   IF C1=LEN(S$) THEN S$=""
   IF C1>0 AND C1<LEN(S$) THEN S$=MID$(S$,C1+1,LEN(S$)-C1)
   RETURN

RTRIM:
  IF S$="" THEN RETURN
  I=LEN(S$):C1=0
DOLOOPR:
  X$=MID$(S$,I,1):X=ASC(X$):IF X>32 THEN RSTR
  C1=C1+1:I=I-1:IF I<1 THEN RSTR
  GOTO DOLOOPR
RSTR:
  IF C1=LEN(S$) THEN S$=""
  IF C1>0 AND C1<LEN(S$) THEN S$=MID$(S$,1,LEN(S$)-C1)
  RETURN





CLSGRAPH:
  GOSUB HIDEALL:COLOR 1,0:CLS:RECT 0,0,XLIMIT,YLIMIT,BLACK2:RETURN

ERRORHALT:
  GOSUB CLSGRAPH:P1=5:R%=0:G%=14:B%=2:GOSUB RGBPAL:P1=15:R%=2:G%=2:GOSUB RGBPAL
  PRINT "{CR}{CR}{YEL}  ERROR ENCOUNTERED{WHT}!":PRINT ":{GRN} {CR}";S$;"{WHT}{CR}":
  GOSUB SHOWALL:END

THINFONT:
 IF ISO.ON THEN FONTFILE$=FONT1$:GOSUB LOADISOFONT:GOTO FONTEND
 POKE A.REG,4:GOTO FONTSYS

THICKFONT:
 IF ISO.ON THEN FONTFILE$=FONT2$:GOSUB LOADISOFONT:GOTO FONTEND
 POKE A.REG,2
FONTSYS:
 SYS $FF62
FONTEND:
 GOSUB BLOCKFROWN:RETURN

