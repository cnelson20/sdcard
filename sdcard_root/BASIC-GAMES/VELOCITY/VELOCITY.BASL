REM VOIDSTAR - NOVEMBER 2023

REM SAVE THE ORIGINAL SCREEN MODE
POKE $030F,1  : REM SEC  (SET C)
SYS $FF5F
OV=PEEK ($030C) : REM SAVE A (ORIGINAL VIDEO MODE)
REM ---------------------------------

A=RND(0) : REM INIT RNG
FMINIT : REM TURN OFF EXISTING AUDIO, ETC.

REM CONSTANTS...
VM=120.0        :REM VELOCITY MAX (SHOULD BE SUFFICIENT TO OVERCOME MAX GRAVITY)
PI=3.14159      :REM PI
P2=2*PI         :REM TWO PI (360 DEGREE)
PQ=PI/2.0       :REM HALF PI (90 DEGREE)
G=9.81          :REM GRAVITY CONSTANT (M/S^2)
DR=PI/180.0     :REM DEGREES TO RADIANS
RD=180.0/PI     :REM RADIANS TO DEGREES
TD=0.05         :REM TIME DELTA

REM GRAPHIC RELATED CONSTANTS...
GY=228   : REM Y ROW USED FOR THE GROUND
RL=8     : REM CONSTANT REPRESENTING LENGTH OF THE TURRET GUIDE LINE
TX=0     : REM TURRET DRAWN X BASE POSITION
TY=GY-1  : REM TURRET DRAWN Y BASE POSITION
REM THESE ARE FIXED FOR SCREEN $80
ZX=319   : REM MAX X IN SCREEN $80
ZY=239   : REM MAX Y IN SCREEN $80
REM ---------------------

REM THESE WILL VARY DURING GAMEPLAY...
VI=62.0         :REM INITIAL VELOCITY (M/S^2)
A=20.0          :REM INITIAL ANGLE (DEGREES)
H=0             :REM INITIAL HEIGHT (METERS)
RB=(90-A)*DR    :REM FIRING ANGLE RE-ARRANGED SO THAT 0DEG IS ALONG THE GROUND, 90DEG IS STRAIGHT UP
REM -----------------------------------

REM DETECT CONTROLLER, FALL BACK TO KEYBOARD
  JI = 0:REM JOYSTICK INDEX (DEFAULT TO KEYBOARD)
	FOR I=1 TO 4
	  IF JOY(I) >= 0 THEN JI = I: GOTO JOYDONE
  NEXT
JOYDONE:	

RO=0 : REM ROUND COUNTER

STARTOVER:

RO=RO+1 : REM INCREMENT THE ROUNDS-PLAYED COUNTER
DF=1    : REM SET DRAW FLAG WHICH WILL FORCE INITIAL DRAW ON TURRET GUIDE

COLOR 1,0
CLS

SCREEN $80
RECT 0,0,ZX,ZY,0  : REM "CLEAR" THE GRAPHIC SCREEN
LINE 0,GY,ZX,GY,5 : REM DRAW THE GROUND
REM 2=RED
REM 3=CYAN
REM 4=PINK
REM 5=GREEN
REM 6=BLUE

REM DECIDE BOX LOCATION AND DRAW IT (RANDOMIZE BOTH SIZE AND LOCATION FOR INTERSTING VARIETY)
BL=INT(RND(.)*8)+8 : REM SIZE OF THE BOX
BX=INT(RND(.)*(ZX-50-(BL*2)))+50
BY=INT(RND(.)*(ZY-30-(BL*2)))+30
RECT BX,BY,BX+BL,BY+BL,2 : REM DRAW THE BOX (2 == RED)

G=RND(.)*21.0+4.0  : REM MINIMUM OF 4.0 M/S^2 .. MAX OF 24.0 M/S^2
G$=STR$(G)         : REM CONVERT TO STRING SO WE CAN CAP THE NUMBER OF DECIMAL PLACES WE SHOW
LOCATE 1,2
FIXCHECK:
IF LEN(G$)<7 THEN G$=G$+" ":GOTO FIXCHECK:REM THIS IS JUST IN CASE (TO HELP PREVENT MID$ FROM FAILING)
PRINT "G";MID$(G$,1,6);:REM JUST SHOW A FEW DECIMAL VALUES, NOT ALL OF THEM

IF RO<>1 THEN GOTO SKIPVERBOSE
REM ELSE.. SHOW FULL INSTRUCTIONS DURING FIRST ROUND
LOCATE 26,14:PRINT "LEFT/RIGHT=ADJUST GUIDE   ";
LOCATE 27,14:PRINT "UP/DOWN   =CHANGE VELOCITY";
LOCATE 28,14:PRINT "SPACEBAR/START TO FIRE!   ";

SKIPVERBOSE:
LOCATE 30,17:PRINT "[ESC=NEW GAME / Q=QUIT]";

TR=0 : REM TRY ATTEMPTS THIS FOUND

REM THE CMDR-DOS X16 SYSTEM DEFINES THE ORIGIN 0,0 AT TOP-LEFT.
REM IN REAL WORLD, WE GENERALLY HAVE ORIGIN AT BOTTOM-LEFT, AND INCREASING VALUES GO "UP"
REM WHEREAS FOR THIS SYSTEM, INCREASING VALUES "GO DOWN". SO THE MATH COMPENSATES FOR THAT.

INITSTART:
  FMFREQ 1,0  : REM DISABLE PRIOR AUDIO DURING THE FIRING
  T=0         : REM CURRENT PROJECTILE SIMULATION TIME	
	
SETUPSTART:
  LOCATE 1,20
	PRINT "A";90-INT(RB*RD);CHR$(157);" " : REM SHOW CURRENT GUIDE ANGLE : REM CHR 157 IS MOVE CURSOR LEFT
	  
	LOCATE 1,35
	PRINT "V";VI;CHR$(157);" "; : REM SHOW CURRENT SET VELOCITY : REM CHR 157 IS MOVE CURSOR LEFT
	
	REM MOVE LEFT IS TO ADDRESS ISSUE WHERE NUMERIC VALUES ARE WRITTEN WITH SPACE AFTER THEM

  JR=JOY(JI) : REM STORE DOWN JOYSTICK STATE
	
  GET A$     : REM STORE DOWN KEYPRESS STATE
	A=ASC(A$)  : REM CONVERT ASCII STRING TO EASIER NUMERIC VALUE
	
	IF A=32 OR (JR AND 16) OR (JR AND 32) THEN GOTO PREPSHOOT : REM SPACEBAR   OR SELECT OR START
	IF A=27 THEN GOTO STARTOVER : REM ESCAPE
	IF A=81 THEN GOTO DONE      : REM QUIT "Q"
	
	IF (JR AND 8) OR (A=145) THEN VI=VI+2:LOCATE 1,35:PRINT "     ";:REM UP ARROW
	IF (JR AND 4) OR (A=17)  THEN VI=VI-2:LOCATE 1,35:PRINT "     ";:REM DOWN ARROW	
  	
	IF (JR AND 2) OR (JR AND 512) OR (A=157) THEN RB=RB-0.05:DF=1:REM LEFT   OR TOP-L
	IF (JR AND 1) OR (JR AND 256) OR (A=29)  THEN RB=RB+0.05:DF=1:REM RIGHT  OR TOP-R
	
	REM CHECK VELOCITY CAP, ENSURE NOT TOO SMALL OR TOO LARGE
	IF (VI > VM) THEN VI=VM
	IF (VI < 10) THEN VI=10
	
	REM CHECK ANGLE CAP, KEEP WITHIN ABOUT 0 TO 90 DEG
	IF (RB > PQ) THEN RB=PQ     : REM PQ IS QUARTER OF PI WHICH CORRESPONDS TO 90 DEGREES
	IF (RB < 0.05) THEN RB=0.05 : REM PREVENT FIRING COMPLETELY SIDEWAYS
	
	IF (DF=0) THEN GOTO SKIPGUIDE
	
	REM ERASE THE PRIOR FIRING GUIDE LINE
	LINE TX,TY,X1,Y1,0 : REM 0==BLACK (BACKGROUND COLOR)
	
	REM COMPUTE NEW FIRING GUIDE LINE
	Y1=TY-COS(RB)*RL
	X1=TX+SIN(RB)*RL
	
	LINE TX,TY,X1,Y1,6 : REM 6==BLUE
	
SKIPGUIDE:	
	DF=0:REM SET REDRAW AS FALSE
	
GOTO SETUPSTART

PREPSHOOT:
  TR=TR+1 : REM INCREMENT HOW MANY TRIES THIS ROUND

  REM COMPUTE COMPONENTS OF THE INITIAL VELOCITY VECTOR
  PD=PQ-RB : REM SUBTRACT SINCE WE WANT 0 TO BE GROUND LEVEL (INSTEAD OF "UP")..
	
	VX=VI*COS(PD)
	VY=VI*SIN(PD)
  REM (TECHNICALLY THESE VELOCITIES WOULD DEGRADE OVER TIME DUE TO ATMOSPHERIC RESISTANCE OR WINDS...)

SHOOT:

  X=VX*T
  Y=H+VY*T-G*(T^2)/2	
	
	NX=INT(X)
	NY=INT((GY-1)-Y)
	
	FR=INT(Y*10)
	IF FR<0 THEN FR=0
	IF FR>4400 THEN FR=4400 : REM TECHNICALLY 4434 BUT WE'RE ADDING +20 OFFSET
	FMFREQ 1,FR+20	
	
	IF NX>ZX THEN GOTO DONESHOOT  : REM OFF RIGHT SIDE OF SCREEN
	IF NY>GY THEN GOTO DONESHOOT  : REM BELOW THE GROUND
	IF NY<0 THEN GOTO SKIPTHISONE : REM OFF TOP OF THE SCREEN
	
  PSET NX,NY,1 : REM DRAW TRACER
	
	REM SEE IF WE INTERCEPTED THE TARGET BOX...
	IF (NX>BX) AND (NX<(BX+BL)) AND (NY>BY) AND (NY<(BY+BL)) THEN GOTHIT
  
SKIPTHISONE:
  T=T+TD : REM INCREMENT THE TIME DELTA OF THE PROJECTILE SIMULATION
  GOTO SHOOT

DONESHOOT:
  GOTO INITSTART : REM INITIALIZE FOR NEXT FIRING TRY
	
GOTHIT:
  REM PREPARE A "BIGGER BOX" AROUND THE TARGET BOX...
  BX=BX-INT(BL/2)
	BY=BY-INT(BL/2)
	
	REM DRAW SOME CONFETTI OVER THE TARGET BOX... (NOT FANCY)
  FOR I=1 TO INT(RND(.)*300)+100
	  X=BX+INT(RND(.)*(BL*2))
		Y=BY+INT(RND(.)*(BL*2))
		PSET X,Y,INT(RND(.)*255)
	NEXT I
	
	REM GIVE OPTION TO GO FOR ANOTHER ROUND...
	COLOR 7,0
	PRINT TR;"TRIES"
	COLOR 14,0
	PRINT "AGAIN Y/N?"
AGAINWAIT:	
  JR=JOY(JI) : REM STORE DOWN JOYSTICK STATE
  IF (JR AND 16) THEN GOTO STARTOVER : REM CAN PRESS START TO STARTOVER
  
	GET A$ : REM POLL KEYBOARD INPUT KEYPRESS
	A=ASC(A$)
	IF A=0 GOTO AGAINWAIT
	IF A=78 GOTO DONE      : REM NO  "N"
	IF A=89 GOTO STARTOVER : REM YES "Y"
	GOTO AGAINWAIT
	REM ----------------------------------------
  
DONE:
  SCREEN OV : REM REVERT ORIGINAL SCREEN MODE
	COLOR 1,6
	CLS
	PRINT "THANK YOU FOR PLAYING!"
	PRINT "NUMBER OF ROUNDS: ",RO	
	
  END
