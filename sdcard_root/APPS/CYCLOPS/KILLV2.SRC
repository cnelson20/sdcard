;
; KILL THE BIT.
; ADAPTED FROM Y. VEREMENKO CODE
; THIS CODE IS SLIGHTLY SLOWER BUT
; THE BIT CAN BE KILLED AT ANY SPOT
;
#GAMEIN0=I1
#GAMEIN1=I2
#GAMEIN2=I3
#GAMEIN3=I4
#GAMEIN4=I5
#GAMEIN5=I6
#GAMEIN6=I7
#GAMEBIT0=S0    ; GAME BIT 0
#GAMEBIT1=S1    ; GAME BIT 1
#GAMEBIT2=S2    ; GAME BIT 2
#GAMEBIT3=S3    ; GAME BIT 3
#GAMEBIT4=S4    ; GAME BIT 4
#GAMEBIT5=S5    ; GAME BIT 5
#SWAP=S6        ; SWAP BIT
#GAMELED0=O0    ; GAME LED 0
#GAMELED1=O1    ; GAME LED 1
#GAMELED2=O2    ; GAME LED 2
#GAMELED3=O3    ; GAME LED 3
#GAMELED4=O4    ; GAME LED 4
#GAMELED5=O5    ; GAME LED 5
#RESULT=RS
STO SWAP        ; SAVE RR
ORC RESULT      ; RR=RR|!RR (always 1)
IEN RESULT      ; ENABLE inputs
LD SWAP         ; RESTORE RR
LDC RESULT      ; THIS IS 1 ON RESET (RR IS INITIALIZED TO 0)
OEN RESULT
STO GAMEBIT0    ;INITIALIZE MEMORY WITH 1 INITIAL BIT
ORC RESULT      ;MAIN LOOP
OEN RESULT
LD GAMEBIT0     ;DISPLAY ALL BITS
STO GAMELED0
LD GAMEBIT1
STO GAMELED1
LD GAMEBIT2
STO GAMELED2
LD GAMEBIT3
STO GAMELED3
LD GAMEBIT4
STO GAMELED4
LD GAMEBIT5
STO GAMELED5
LD GAMEIN0              ;XOR INPUTS WITH MEMORY
XNOR GAMEBIT0
STOC GAMEBIT0
LD GAMEIN1
XNOR GAMEBIT1
STOC GAMEBIT1
LD GAMEIN2
XNOR GAMEBIT2
STOC GAMEBIT2
LD GAMEIN3
XNOR GAMEBIT3
STOC GAMEBIT3
LD GAMEIN4
XNOR GAMEBIT4
STOC GAMEBIT4
LD GAMEIN5
XNOR GAMEBIT5
STOC GAMEBIT5
LD GAMEBIT5              ;ROTATE DATA
STO SWAP
LD GAMEBIT4
STO GAMEBIT5
LD GAMEBIT3
STO GAMEBIT4
LD GAMEBIT2
STO GAMEBIT3
LD GAMEBIT1
STO GAMEBIT2
LD GAMEBIT0
STO GAMEBIT1
LD SWAP
STO GAMEBIT0
ORC RESULT
JMP 0
